{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/FloatValidator.js"],"sourcesContent":["export default function FloatValidator(value) {\n  // First convert to number if it's a string\n  const num = typeof value === 'string' ? Number(value) : value;\n  \n  // Check if it's a valid number and greater than 0\n  return !isNaN(num) && num > 0;\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,eAAe,KAAK;IAC1C,2CAA2C;IAC3C,MAAM,MAAM,OAAO,UAAU,WAAW,OAAO,SAAS;IAExD,kDAAkD;IAClD,OAAO,CAAC,MAAM,QAAQ,MAAM;AAC9B"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Menus.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport FloatValidator from \"../utils/FloatValidator\";\n\nexport const menusSchema = new mongoose.Schema(\n  {\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the `Hotels` collection\n      required: true, // HotelId is mandatory\n    },\n    SectionId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Sections\", // Reference to `Sections` collection\n      required: true,\n    },\n    DishId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Dishes\", // Reference to `Dishes` collection\n      required: true,\n    },\n    Price: {\n      type: Number,\n      required: true, // Price is mandatory\n      validate: {\n        validator: (value) => FloatValidator(value)\n      },\n      message: \"Price must be a non-negative number and must be in decimal format(100.00).\"\n    },\n\n    // Child Relationship\n    Menu: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Orders\", // Reference to `Orders` collection\n      },\n    ],\n  },\n  {\n    timestamps: true, // Automatically manage `createdAt` and `updatedAt` fields\n  }\n);\n\n// Unique constraint on SectionId and DishId\nmenusSchema.index({ SectionId: 1, DishId: 1 }, { unique: true });\n\n// Add pre-remove middleware\nmenusSchema.pre('remove', async function(next) {\n  try {\n    // Delete all related orders\n    const Orders = mongoose.model('Orders');\n    await Orders.deleteMany({ MenuId: this._id });\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\nmenusSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get the menus that will be deleted\n    const Menus = mongoose.model('Menus');\n    const menus = await Menus.find(this.getFilter());\n    \n    // Get all menu IDs\n    const menuIds = menus.map(menu => menu._id);\n    \n    // Delete all related orders\n    if (menuIds.length > 0) {\n      const Orders = mongoose.model('Orders');\n      await Orders.deleteMany({ MenuId: { $in: menuIds } });\n    }\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Menus || mongoose.model(\"Menus\", menusSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,cAAc,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAC5C;IACE,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,QAAQ;QACN,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,8IAAA,CAAA,UAAc,AAAD,EAAE;QACvC;QACA,SAAS;IACX;IAEA,qBAAqB;IACrB,MAAM;QACJ;YACE,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACP;KACD;AACH,GACA;IACE,YAAY;AACd;AAGF,4CAA4C;AAC5C,YAAY,KAAK,CAAC;IAAE,WAAW;IAAG,QAAQ;AAAE,GAAG;IAAE,QAAQ;AAAK;AAE9D,4BAA4B;AAC5B,YAAY,GAAG,CAAC,UAAU,eAAe,IAAI;IAC3C,IAAI;QACF,4BAA4B;QAC5B,MAAM,SAAS,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC9B,MAAM,OAAO,UAAU,CAAC;YAAE,QAAQ,IAAI,CAAC,GAAG;QAAC;QAE3C;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;AAEA,gCAAgC;AAChC,YAAY,GAAG,CAAC,cAAc,eAAe,IAAI;IAC/C,IAAI;QACF,qCAAqC;QACrC,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,QAAQ,MAAM,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS;QAE7C,mBAAmB;QACnB,MAAM,UAAU,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,GAAG;QAE1C,4BAA4B;QAC5B,IAAI,QAAQ,MAAM,GAAG,GAAG;YACtB,MAAM,SAAS,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;YAC9B,MAAM,OAAO,UAAU,CAAC;gBAAE,QAAQ;oBAAE,KAAK;gBAAQ;YAAE;QACrD;QAEA;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/StringValidator.js"],"sourcesContent":["export default function StringValidators(value) {\n  // Ensure the input is a string\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  if (value === null) {\n    return true;\n  }\n\n  // List of forbidden characters\n  const charList = ['/', '\\\\', '\"', ';', \"'\", '+', '`', '^'];\n  let validationFlag = true;\n\n  // Iterate over each character in the list\n  for (let char of charList) {\n\n    // Check if the forbidden character is present in the string\n    if (value.includes(char)) {\n      validationFlag = false;\n      break; // Stop checking further once an invalid character is found\n    }\n  }\n\n  return validationFlag;\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,iBAAiB,KAAK;IAC5C,+BAA+B;IAC/B,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,IAAI,UAAU,MAAM;QAClB,OAAO;IACT;IAEA,+BAA+B;IAC/B,MAAM,WAAW;QAAC;QAAK;QAAM;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC1D,IAAI,iBAAiB;IAErB,0CAA0C;IAC1C,KAAK,IAAI,QAAQ,SAAU;QAEzB,4DAA4D;QAC5D,IAAI,MAAM,QAAQ,CAAC,OAAO;YACxB,iBAAiB;YACjB,OAAO,2DAA2D;QACpE;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Dishes.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport StringValidators from \"../utils/StringValidator\";\n\nexport const dishesSchema = new mongoose.Schema(\n  {\n    DishName: {\n      type: String,\n      required: true,\n      validate: {\n        validator: (value) => StringValidators(value)\n      },\n      message: \"Dish Name should not contain invalid characters like /, \\\\, \\\", ;, ', +, `, or ^\"\n    },\n    Code: {\n      type: String,\n      required: true,\n    },\n    Description: {\n      type: String,\n      default: null, // For Combos Specification eg;(2 Burgers & 1 Pepsi)\n    },\n    Type: {\n      type: String,\n      required: true, // Dish type (e.g., Veg, Non-veg)\n      validate: {\n        validator: (value) => StringValidators(value)\n      },\n      message: \"Dish Type should not contain invalid characters like /, \\\\, \\\", ;, ', +, `, or ^\"\n    },\n    CategoryId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"MenuCategory\", // Reference to `MenuCategory` collection\n      required: true,\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to `Hotels` collection\n      required: true,\n    },\n\n    // Child Relationship\n    Menus: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Menus\", // Reference to `Menus` collection\n      },\n    ],\n  },\n  { timestamps: true }\n);\n\n// Unique constraint on HotelId and Code\ndishesSchema.index({ HotelId: 1, Code: 1 }, { unique: true });\n\n// Add pre-remove middleware\ndishesSchema.pre('remove', async function(next) {\n  try {\n    const Menus = mongoose.model('Menus');\n    const Orders = mongoose.model('Orders');\n\n    // Check if dish has any active orders\n    const activeOrders = await Orders.find({\n      'Items.DishId': this._id,\n      Status: { $in: ['Pending', 'Processing', 'Ready'] }\n    });\n\n    if (activeOrders.length > 0) {\n      throw new Error('Cannot delete dish with active orders');\n    }\n\n    // Delete all related menus\n    await Menus.deleteMany({ DishId: this._id });\n\n    // Update completed orders to mark deleted dishes\n    await Orders.updateMany(\n      { 'Items.DishId': this._id, Status: 'Completed' },\n      { $set: { 'Items.$[elem].Deleted': true } },\n      { arrayFilters: [{ 'elem.DishId': this._id }] }\n    );\n\n    // Remove from MenuCategory's Dishes array\n    const MenuCategory = mongoose.model('MenuCategory');\n    await MenuCategory.updateMany(\n      { Dishes: this._id },\n      { $pull: { Dishes: this._id } }\n    );\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\ndishesSchema.pre('deleteMany', async function(next) {\n  try {\n    const Dishes = mongoose.model('Dishes');\n    const dishes = await Dishes.find(this.getFilter());\n    const dishIds = dishes.map(dish => dish._id);\n\n    if (dishIds.length > 0) {\n      const [Orders, Menus, MenuCategory] = await Promise.all([\n        mongoose.model('Orders'),\n        mongoose.model('Menus'),\n        mongoose.model('MenuCategory')\n      ]);\n\n      // Check for active orders\n      const activeOrders = await Orders.find({\n        'Items.DishId': { $in: dishIds },\n        Status: { $in: ['Pending', 'Processing', 'Ready'] }\n      });\n\n      if (activeOrders.length > 0) {\n        throw new Error('Cannot delete dishes with active orders');\n      }\n\n      // Run cleanup operations in parallel\n      await Promise.all([\n        // Delete related menus\n        Menus.deleteMany({ DishId: { $in: dishIds } }),\n        // Update completed orders\n        Orders.updateMany(\n          { 'Items.DishId': { $in: dishIds }, Status: 'Completed' },\n          { $unset: { ItemId: 1 } }\n        ),\n        // Remove from MenuCategory's Dishes arrays\n        MenuCategory.updateMany(\n          { Dishes: { $in: dishIds } },\n          { $pull: { Dishes: { $in: dishIds } } }\n        )\n      ]);\n    }\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Dishes || mongoose.model(\"Dishes\", dishesSchema);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/BaseCrud.js"],"sourcesContent":["export class BaseCrud {\n  constructor(model) {\n    this.model = model;\n  }\n\n  // Create a new document\n  async create(data) {\n    try {\n      const doc = new this.model(data);\n      await doc.save();\n      return {\n        returncode: 200,\n        message: \"Data Created Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Read all documents with optional filters\n  async readMany(filters = {}, options = {}) {\n    try {\n      const {\n        sort = {},\n        populate = [],\n        select = '',\n        skip = 0,\n        limit = 0,\n        lean = false\n      } = options;\n\n      let query = this.model.find(filters);\n\n      // Apply population\n      if (populate.length > 0) {\n        query = query.populate(populate);\n      }\n\n      // Apply sorting\n      if (Object.keys(sort).length > 0) {\n        query = query.sort(sort);\n      }\n\n      // Apply selection\n      if (select) {\n        query = query.select(select);\n      }\n\n      // Apply pagination\n      if (skip > 0) {\n        query = query.skip(skip);\n      }\n      if (limit > 0) {\n        query = query.limit(limit);\n      }\n\n      // Execute query\n      const docs = lean ? await query.lean() : await query.exec();\n\n      return {\n        returncode: 200,\n        message: \"Data Fetched Successfully\",\n        output: docs\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Read a single document\n  async readOne(filters = {}, options = {}) {\n    try {\n      const { populate = [], select = '', lean = false } = options;\n\n      let query = this.model.findOne(filters);\n\n      // Apply population\n      if (populate.length > 0) {\n        query = query.populate(populate);\n      }\n\n      // Apply selection\n      if (select) {\n        query = query.select(select);\n      }\n\n      // Execute query\n      const doc = lean ? await query.lean() : await query.exec();\n\n      if (!doc) {\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Fetched Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Update a document\n  async update(filters = {}, data = {}, options = { new: true }) {\n    try {\n      const doc = await this.model.findOneAndUpdate(filters, data, options);\n\n      if (!doc) {\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Updated Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Delete a document\n  async delete(filters = {}) {\n    try {\n      console.log('BaseCrud.delete called with:', {\n        model: this.model.modelName,\n        filters\n      });\n\n      const doc = await this.model.deleteMany(filters);\n      console.log('BaseCrud.delete result:', doc);\n\n      if (!doc || doc.deletedCount === 0) {\n        console.log('BaseCrud.delete - No documents found');\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Deleted Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      console.error('Error in BaseCrud.delete:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Check if document exists\n  async exists(filters = {}) {\n    try {\n      const exists = await this.model.exists(filters);\n      return {\n        returncode: 200,\n        message: exists ? \"Document Exists\" : \"Document Not Found\",\n        output: !!exists\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: false\n      };\n    }\n  }\n\n  // Count documents\n  async count(filters = {}) {\n    try {\n      const count = await this.model.countDocuments(filters);\n      return {\n        returncode: 200,\n        message: \"Count Retrieved Successfully\",\n        output: count\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: 0\n      };\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/Menus.js"],"sourcesContent":["import Menus from \"../models/Menus\";\nimport Dishes from \"../models/Dishes\";\nimport { BaseCrud } from \"./BaseCrud\";\n\nclass MenusCrud extends BaseCrud {\n  constructor() {\n    super(Menus);\n  }\n\n  async createMenu(data) {\n    try {\n      const normalizedData = {\n        HotelId: data.hotel_id,\n        SectionId: data.section_id,\n        DishId: data.dish_id,\n        Price: data.price\n      };\n\n      // Create the menu\n      const menuResult = await this.create(normalizedData);\n\n      if (menuResult.returncode === 200) {\n        // Update the dish's Menus array\n        const dish = await Dishes.findByIdAndUpdate(\n          data.dish_id,\n          { $push: { Menus: menuResult.output._id } },\n          { new: true }\n        );\n\n        if (!dish) {\n          return {\n            returncode: 404,\n            message: \"Dish not found\",\n            output: []\n          };\n        }\n\n        return menuResult;\n      }\n\n      return menuResult;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readMenus(hotel_id) {\n    try {\n      const result = await this.readMany(\n        { HotelId: hotel_id },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ],\n            },\n            {\n              path: 'SectionId'\n            }\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readMenusBySectionId(section_id) {\n    try {\n      const result = await this.readMany(\n        { SectionId: section_id },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ]\n            }\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Takeaway\n  async readTakeawayMenus() {\n    try {\n\n      const result = await this.readMany(\n        { \"SectionId.Type\": \"Takeaway\" },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ]\n            }\n          ]\n        }\n      );\n\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Delivery\n  async readDeliveryMenus() {\n    try {\n\n      const result = await this.readMany(\n        { \"SectionId.Type\": \"Delivery\" },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ]\n            }\n          ]\n        }\n      );\n\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Swiggy\n  async readSwiggyMenus() {\n    try {\n\n      const result = await this.readMany(\n        { \"SectionId.Type\": \"Swiggy\" },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ]\n            }\n          ]\n        }\n      );\n\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Zomto\n  async readZomatoMenus() {\n    try {\n\n      const result = await this.readMany(\n        { \"SectionId.Type\": \"Zomato\" },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ]\n            }\n          ]\n        }\n      );\n\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // QR Menus\n  async readQRMenus() {\n    try {\n\n      const result = await this.readMany(\n        { \"SectionId.Type\": \"QR-Orders\" },\n        {\n          populate: [\n            {\n              path: 'DishId',\n              populate: [\n                {\n                  path: 'CategoryId'\n                }\n              ]\n            }\n          ]\n        }\n      );\n\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async updateMenu(menu_id, data) {\n    try {\n      const updateData = {\n        Price: data.price\n      };\n\n      const result = await this.update(\n        { _id: menu_id },\n        updateData,\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async deleteMenus(filter) {\n    try {\n      // First get the menus to be deleted\n      const menusToDelete = await this.readMany(filter);\n\n      if (menusToDelete.returncode === 200 && menusToDelete.output.length > 0) {\n\n        // Finally delete the menus\n        const result = await this.delete(filter);\n        return result;\n      }\n\n      return {\n        returncode: 404,\n        message: \"No menus found to delete\",\n        output: []\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async deleteMenuById(menu_id) {\n    try {\n      const menu = await this.readOne({ _id: menu_id });\n\n      if (menu.returncode === 200) {\n\n        // Finally delete the menu\n        const result = await this.delete({ _id: menu_id });\n        return result;\n      }\n\n      return {\n        returncode: 404,\n        message: \"No menus found\",\n        output: []\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async doesMenuExists(section_id, dish_id) {\n    try {\n\n      const result = await this.readMany({ SectionId: section_id, DishId: dish_id });\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async updateMenuAvailability(menu_id, is_available) {\n    try {\n      const result = await this.update(\n        { _id: menu_id },\n        { IsAvailable: is_available },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async updateMenuPrice(menu_id, price) {\n    try {\n      const result = await this.update(\n        { _id: menu_id },\n        { Price: price },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readMenusByDish(dish_id) {\n    try {\n      const result = await this.readMany(\n        { DishId: dish_id },\n        {\n          populate: [\n            {\n              path: 'SectionId',\n            },\n            {\n              path: 'Menu',\n            }\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async moveMenusBetweenSections(from_section_id, to_section_id) {\n    try {\n      // Check if any menus have active orders\n      const menusWithOrders = await this.readMany(\n        { SectionId: from_section_id },\n        {\n          populate: [\n            {\n              path: 'Menu',\n              match: { Status: { $in: ['Ordered', 'Preparing'] } }\n            }\n          ]\n        }\n      );\n\n      if (menusWithOrders.returncode === 200) {\n        const activeMenus = menusWithOrders.output.filter(menu => menu.Menu && menu.Menu.length > 0);\n        if (activeMenus.length > 0) {\n          return {\n            returncode: 400,\n            message: \"Cannot move menus with active orders\",\n            output: []\n          };\n        }\n      }\n\n      const result = await this.update(\n        { SectionId: from_section_id },\n        { SectionId: to_section_id },\n        { new: true, multi: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async getMenuStats(menu_id) {\n    try {\n      const result = await this.readOne(\n        { _id: menu_id },\n        {\n          populate: [\n            {\n              path: 'Menu',\n              select: 'Quantity TotalAmount Status CreatedAt'\n            }\n          ]\n        }\n      );\n\n      if (result.returncode === 200) {\n        const orders = result.output.Menu || [];\n        const stats = {\n          totalOrders: orders.length,\n          totalQuantity: orders.reduce((sum, order) => sum + order.Quantity, 0),\n          totalRevenue: orders.reduce((sum, order) => sum + order.TotalAmount, 0),\n          ordersByStatus: orders.reduce((acc, order) => {\n            acc[order.Status] = (acc[order.Status] || 0) + 1;\n            return acc;\n          }, {}),\n          averageOrderValue: orders.length ? orders.reduce((sum, order) => sum + order.TotalAmount, 0) / orders.length : 0\n        };\n\n        return {\n          returncode: 200,\n          message: \"Menu stats retrieved successfully\",\n          output: stats\n        };\n      }\n\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n}\n\nconst menusCrud = new MenusCrud();\nexport default menusCrud;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/api/sync/Menus/pull/controller.js"],"sourcesContent":["import menusCrud from \"@/app/lib/crud/Menus\";\n\nexport async function fetch_whole_menus(tokenData) {\n\ttry {\n\n\t\tconst hotel_id = await tokenData.hotelId;\n\t\tconst existing_menus = await menusCrud.readMenus(hotel_id);\n\n\t\tif (existing_menus.returncode === 200 && existing_menus.output.length > 0) {\n\t\t\treturn {\n\t\t\t\treturncode: 200,\n\t\t\t\tmessage: \"Menus Data Fetched.\",\n\t\t\t\toutput: existing_menus.output\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\treturncode: 409,\n\t\t\tmessage: \"No Menus & Sections to be displayed\",\n\t\t\toutput: []\n\t\t};\n\n\t} catch (error) {\n\t\treturn {\n\t\t\treturncode: 500,\n\t\t\tmessage: error.message,\n\t\t\toutput: []\n\t\t};\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,kBAAkB,SAAS;IAChD,IAAI;QAEH,MAAM,WAAW,MAAM,UAAU,OAAO;QACxC,MAAM,iBAAiB,MAAM,oIAAA,CAAA,UAAS,CAAC,SAAS,CAAC;QAEjD,IAAI,eAAe,UAAU,KAAK,OAAO,eAAe,MAAM,CAAC,MAAM,GAAG,GAAG;YAC1E,OAAO;gBACN,YAAY;gBACZ,SAAS;gBACT,QAAQ,eAAe,MAAM;YAC9B;QACD;QACA,OAAO;YACN,YAAY;YACZ,SAAS;YACT,QAAQ,EAAE;QACX;IAED,EAAE,OAAO,OAAO;QACf,OAAO;YACN,YAAY;YACZ,SAAS,MAAM,OAAO;YACtB,QAAQ,EAAE;QACX;IACD;AACD"}},
    {"offset": {"line": 1079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1117, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/jwt.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'; // In production, always use environment variable\nconst JWT_EXPIRES_IN = '24h';\n\nexport const createToken = (payload) => {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n};\n\nexport const verifyToken = (token) => {\n  try {\n    return jwt.verify(token, JWT_SECRET);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const updateToken = (token, newData) => {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET);\n    const updatedPayload = { ...decoded, ...newData };\n    // Remove the exp claim to generate a fresh expiration\n    delete updatedPayload.exp;\n    return jwt.sign(updatedPayload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const decodeToken = (token) => {\n  try {\n    return jwt.decode(token);\n  } catch (error) {\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI,mBAAmB,iDAAiD;AACjH,MAAM,iBAAiB;AAEhB,MAAM,cAAc,CAAC;IAC1B,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAe;AACnE;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC,OAAO;IACjC,IAAI;QACF,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,MAAM,iBAAiB;YAAE,GAAG,OAAO;YAAE,GAAG,OAAO;QAAC;QAChD,sDAAsD;QACtD,OAAO,eAAe,GAAG;QACzB,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,gBAAgB,YAAY;YAAE,WAAW;QAAe;IAC1E,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF"}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/api/sync/Menus/pull/route.js"],"sourcesContent":["import { fetch_whole_menus } from './controller';\nimport { NextResponse } from 'next/server';\nimport { verifyToken } from '@/app/lib/utils/jwt';\n\nexport async function GET(request) {\n\ttry {\n\n\t\t// Get token from cookie\n\t\tconst token = request.cookies.get('hotel_auth_token')?.value;\n\t\tif (!token) {\n\t\t\treturn NextResponse.json({\n\t\t\t\treturncode: 401,\n\t\t\t\tmessage: \"No token provided\",\n\t\t\t\toutput: []\n\t\t\t}, { status: 401, statusText: \"No token provided\" });\n\t\t}\n\n\t\t// Verify the token\n\t\tconst userData = verifyToken(token);\n\t\tif (!userData) {\n\t\t\treturn NextResponse.json({\n\t\t\t\treturncode: 401,\n\t\t\t\tmessage: \"Invalid or expired token\",\n\t\t\t\toutput: []\n\t\t\t}, { status: 401, statusText: \"Invalid or expired token\" });\n\t\t}\n\n\t\tconst result = await fetch_whole_menus(userData);\n\t\treturn NextResponse.json({\n\t\t\treturncode: result.returncode,\n\t\t\tmessage: result.message,\n\t\t\toutput: result.output\n\t\t}, {\n\t\t\tstatus: result.returncode,\n\t\t});\n\n\t} catch (error) {\n\t\treturn NextResponse.json(\n\t\t\t{\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t},\n\t\t\t{ status: 500 }\n\t\t);\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAO;IAChC,IAAI;QAEH,wBAAwB;QACxB,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,qBAAqB;QACvD,IAAI,CAAC,OAAO;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACxB,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACX,GAAG;gBAAE,QAAQ;gBAAK,YAAY;YAAoB;QACnD;QAEA,mBAAmB;QACnB,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI,CAAC,UAAU;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACxB,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACX,GAAG;gBAAE,QAAQ;gBAAK,YAAY;YAA2B;QAC1D;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,0JAAA,CAAA,oBAAiB,AAAD,EAAE;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACxB,YAAY,OAAO,UAAU;YAC7B,SAAS,OAAO,OAAO;YACvB,QAAQ,OAAO,MAAM;QACtB,GAAG;YACF,QAAQ,OAAO,UAAU;QAC1B;IAED,EAAE,OAAO,OAAO;QACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YACC,YAAY;YACZ,SAAS,MAAM,OAAO;YACtB,QAAQ,EAAE;QACX,GACA;YAAE,QAAQ;QAAI;IAEhB;AACD"}},
    {"offset": {"line": 1221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}