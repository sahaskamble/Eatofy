{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/jwt.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'; // In production, always use environment variable\nconst JWT_EXPIRES_IN = '24h';\n\nexport const createToken = (payload) => {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n};\n\nexport const verifyToken = (token) => {\n  try {\n    return jwt.verify(token, JWT_SECRET);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const updateToken = (token, newData) => {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET);\n    const updatedPayload = { ...decoded, ...newData };\n    // Remove the exp claim to generate a fresh expiration\n    delete updatedPayload.exp;\n    return jwt.sign(updatedPayload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const decodeToken = (token) => {\n  try {\n    return jwt.decode(token);\n  } catch (error) {\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI,mBAAmB,iDAAiD;AACjH,MAAM,iBAAiB;AAEhB,MAAM,cAAc,CAAC;IAC1B,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAe;AACnE;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC,OAAO;IACjC,IAAI;QACF,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,MAAM,iBAAiB;YAAE,GAAG,OAAO;YAAE,GAAG,OAAO;QAAC;QAChD,sDAAsD;QACtD,OAAO,eAAe,GAAG;QACzB,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,gBAAgB,YAAY;YAAE,WAAW;QAAe;IAC1E,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/BooleanValidator.js"],"sourcesContent":["export default function BooleanValidator(value) {\n  if (typeof value != \"boolean\") {\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,iBAAiB,KAAK;IAC5C,IAAI,OAAO,SAAS,WAAW;QAC7B,OAAO;IACT,OACK;QACH,OAAO;IACT;AACF"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/VatSettings.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport BooleanValidator from \"../utils/BooleanValidator\";\n\nexport const vatSettingsSchema = new mongoose.Schema(\n  {\n    Visibility: {\n      type: Boolean,\n      default: false, // Determines whether VAT is enabled\n      validate: {\n        validator: (value) => BooleanValidator(value)\n      },\n      message: \"Visibility should be either true or false\"\n    },\n    VATPercent: {\n      type: Number,\n      default: 0.0, // Percentage value of VAT\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotels model\n      required: true,\n      unique: true\n    },\n  },\n  {\n    timestamps: true, // Automatically manage createdAt and updatedAt fields\n  }\n);\n\n// Add pre-remove middleware\nvatSettingsSchema.pre('remove', async function(next) {\n  try {\n    // Update all bills to remove VAT references\n    const Bills = mongoose.model('Bills');\n    await Bills.updateMany(\n      { HotelId: this.HotelId },\n      { \n        $set: { \n          VatRate: '0 %',\n          VatAmount: 0\n        } \n      }\n    );\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\nvatSettingsSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get the settings that will be deleted\n    const VatSettings = mongoose.model('VatSettings');\n    const settings = await VatSettings.find(this.getFilter());\n    const hotelIds = settings.map(setting => setting.HotelId);\n\n    if (hotelIds.length > 0) {\n      // Update all bills to remove VAT references\n      const Bills = mongoose.model('Bills');\n      await Bills.updateMany(\n        { HotelId: { $in: hotelIds } },\n        { \n          $set: { \n            VatRate: '0 %',\n            VatAmount: 0\n          } \n        }\n      );\n    }\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.VatSettings || mongoose.model(\"VatSettings\", vatSettingsSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,oBAAoB,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAClD;IACE,YAAY;QACV,MAAM;QACN,SAAS;QACT,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,gJAAA,CAAA,UAAgB,AAAD,EAAE;QACzC;QACA,SAAS;IACX;IACA,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;QACV,QAAQ;IACV;AACF,GACA;IACE,YAAY;AACd;AAGF,4BAA4B;AAC5B,kBAAkB,GAAG,CAAC,UAAU,eAAe,IAAI;IACjD,IAAI;QACF,4CAA4C;QAC5C,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,MAAM,UAAU,CACpB;YAAE,SAAS,IAAI,CAAC,OAAO;QAAC,GACxB;YACE,MAAM;gBACJ,SAAS;gBACT,WAAW;YACb;QACF;QAGF;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;AAEA,gCAAgC;AAChC,kBAAkB,GAAG,CAAC,cAAc,eAAe,IAAI;IACrD,IAAI;QACF,wCAAwC;QACxC,MAAM,cAAc,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QACnC,MAAM,WAAW,MAAM,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS;QACtD,MAAM,WAAW,SAAS,GAAG,CAAC,CAAA,UAAW,QAAQ,OAAO;QAExD,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,4CAA4C;YAC5C,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;YAC7B,MAAM,MAAM,UAAU,CACpB;gBAAE,SAAS;oBAAE,KAAK;gBAAS;YAAE,GAC7B;gBACE,MAAM;oBACJ,SAAS;oBACT,WAAW;gBACb;YACF;QAEJ;QAEA;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/BaseCrud.js"],"sourcesContent":["export class BaseCrud {\n  constructor(model) {\n    this.model = model;\n  }\n\n  // Create a new document\n  async create(data) {\n    try {\n      const doc = new this.model(data);\n      await doc.save();\n      return {\n        returncode: 200,\n        message: \"Data Created Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Read all documents with optional filters\n  async readMany(filters = {}, options = {}) {\n    try {\n      const {\n        sort = {},\n        populate = [],\n        select = '',\n        skip = 0,\n        limit = 0,\n        lean = false\n      } = options;\n\n      let query = this.model.find(filters);\n\n      // Apply population\n      if (populate.length > 0) {\n        query = query.populate(populate);\n      }\n\n      // Apply sorting\n      if (Object.keys(sort).length > 0) {\n        query = query.sort(sort);\n      }\n\n      // Apply selection\n      if (select) {\n        query = query.select(select);\n      }\n\n      // Apply pagination\n      if (skip > 0) {\n        query = query.skip(skip);\n      }\n      if (limit > 0) {\n        query = query.limit(limit);\n      }\n\n      // Execute query\n      const docs = lean ? await query.lean() : await query.exec();\n\n      return {\n        returncode: 200,\n        message: \"Data Fetched Successfully\",\n        output: docs\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Read a single document\n  async readOne(filters = {}, options = {}) {\n    try {\n      const { populate = [], select = '', lean = false } = options;\n\n      let query = this.model.findOne(filters);\n\n      // Apply population\n      if (populate.length > 0) {\n        query = query.populate(populate);\n      }\n\n      // Apply selection\n      if (select) {\n        query = query.select(select);\n      }\n\n      // Execute query\n      const doc = lean ? await query.lean() : await query.exec();\n\n      if (!doc) {\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Fetched Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Update a document\n  async update(filters = {}, data = {}, options = { new: true }) {\n    try {\n      const doc = await this.model.findOneAndUpdate(filters, data, options);\n\n      if (!doc) {\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Updated Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Delete a document\n  async delete(filters = {}) {\n    try {\n      console.log('BaseCrud.delete called with:', {\n        model: this.model.modelName,\n        filters\n      });\n\n      const doc = await this.model.deleteMany(filters);\n      console.log('BaseCrud.delete result:', doc);\n\n      if (!doc || doc.deletedCount === 0) {\n        console.log('BaseCrud.delete - No documents found');\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Deleted Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      console.error('Error in BaseCrud.delete:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Check if document exists\n  async exists(filters = {}) {\n    try {\n      const exists = await this.model.exists(filters);\n      return {\n        returncode: 200,\n        message: exists ? \"Document Exists\" : \"Document Not Found\",\n        output: !!exists\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: false\n      };\n    }\n  }\n\n  // Count documents\n  async count(filters = {}) {\n    try {\n      const count = await this.model.countDocuments(filters);\n      return {\n        returncode: 200,\n        message: \"Count Retrieved Successfully\",\n        output: count\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: 0\n      };\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/VATSettings.js"],"sourcesContent":["import VatSettings from \"../models/VatSettings\";\nimport { BaseCrud } from \"./BaseCrud\";\n\nclass VATSettingsCrud extends BaseCrud {\n  constructor() {\n    super(VatSettings)\n  }\n\n  async addSettings(data) {\n    try {\n      const normalizedData = {\n        Visibility: data.visibility,\n        VATPercent: data.vat_percent,\n        HotelId: data.hotel_id\n      }\n      const result = this.create(normalizedData);\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async readSettings(hotel_id) {\n    try {\n      const result = this.readOne({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async readAllSettings(hotel_id) {\n    try {\n      const result = this.readMany({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async updateSettings(data) {\n    try {\n      const updateData = {\n        Visibility: data.visibility,\n        VATPercent: data.vat_percent\n      }\n      const hotel_id = data.hotel_id;\n      const result = this.update(\n        { HotelId: hotel_id },\n        updateData,\n        { new: true }\n      )\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async deleteSettings(hotel_id) {\n    try {\n      const result = this.delete({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n}\n\nconst vatSettingsCrud = new VATSettingsCrud();\nexport default vatSettingsCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,wBAAwB,uIAAA,CAAA,WAAQ;IACpC,aAAc;QACZ,KAAK,CAAC,4IAAA,CAAA,UAAW;IACnB;IAEA,MAAM,YAAY,IAAI,EAAE;QACtB,IAAI;YACF,MAAM,iBAAiB;gBACrB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,WAAW;gBAC5B,SAAS,KAAK,QAAQ;YACxB;YACA,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;YAC3B,OAAO;QAET,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC3B,IAAI;YACF,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC;gBAAE,SAAS;YAAS;YAChD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,gBAAgB,QAAQ,EAAE;QAC9B,IAAI;YACF,MAAM,SAAS,IAAI,CAAC,QAAQ,CAAC;gBAAE,SAAS;YAAS;YACjD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,IAAI,EAAE;QACzB,IAAI;YACF,MAAM,aAAa;gBACjB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,WAAW;YAC9B;YACA,MAAM,WAAW,KAAK,QAAQ;YAC9B,MAAM,SAAS,IAAI,CAAC,MAAM,CACxB;gBAAE,SAAS;YAAS,GACpB,YACA;gBAAE,KAAK;YAAK;YAEd,OAAO;QAET,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,QAAQ,EAAE;QAC7B,IAAI;YACF,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;gBAAE,SAAS;YAAS;YAC/C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;AACF;AAEA,MAAM,kBAAkB,IAAI;uCACb"}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/api/hotel/settings/vat/add/controller.js"],"sourcesContent":["import vatSettingsCrud from \"@/app/lib/crud/VATSettings\";\n\nexport async function add_settings(data, tokenData) {\n    try {\n\n        // Verify if user has permission to create hotels\n        if (!tokenData || !tokenData.hotelId || !tokenData.role || !['Backoffice', 'Owner'].includes(tokenData.role)) {\n            return {\n                returncode: 403,\n                message: \"Insufficient permissions to create hotel\",\n                output: []\n            };\n        }\n\n        // Extract data from FormData or direct JSON\n        const hotel_id = tokenData.hotelId || null;\n        const visibility = data['visibility'] || false;\n        const vat_percent = data['vat_percent'] || null;\n\n        if (hotel_id == null || vat_percent == null) {\n            return {\n                returncode: 400,\n                message: \"Missing required parameters\",\n                output: []\n            };\n        }\n\n        const existing_settings = await vatSettingsCrud.readSettings(hotel_id);\n        if (existing_settings.returncode === 200 || existing_settings.output.length > 0) {\n            const result = await vatSettingsCrud.updateSettings({\n                hotel_id, visibility, vat_percent\n            });\n            return result;\n        }\n\n        // Create VAT Settings\n        const result = await vatSettingsCrud.addSettings({\n            hotel_id, visibility, vat_percent\n        });\n        return result;\n\n    } catch (error) {\n        return {\n            returncode: 500,\n            message: error.message || \"Internal server error\",\n            output: []\n        };\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,aAAa,IAAI,EAAE,SAAS;IAC9C,IAAI;QAEA,iDAAiD;QACjD,IAAI,CAAC,aAAa,CAAC,UAAU,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC;YAAC;YAAc;SAAQ,CAAC,QAAQ,CAAC,UAAU,IAAI,GAAG;YAC1G,OAAO;gBACH,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACd;QACJ;QAEA,4CAA4C;QAC5C,MAAM,WAAW,UAAU,OAAO,IAAI;QACtC,MAAM,aAAa,IAAI,CAAC,aAAa,IAAI;QACzC,MAAM,cAAc,IAAI,CAAC,cAAc,IAAI;QAE3C,IAAI,YAAY,QAAQ,eAAe,MAAM;YACzC,OAAO;gBACH,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACd;QACJ;QAEA,MAAM,oBAAoB,MAAM,0IAAA,CAAA,UAAe,CAAC,YAAY,CAAC;QAC7D,IAAI,kBAAkB,UAAU,KAAK,OAAO,kBAAkB,MAAM,CAAC,MAAM,GAAG,GAAG;YAC7E,MAAM,SAAS,MAAM,0IAAA,CAAA,UAAe,CAAC,cAAc,CAAC;gBAChD;gBAAU;gBAAY;YAC1B;YACA,OAAO;QACX;QAEA,sBAAsB;QACtB,MAAM,SAAS,MAAM,0IAAA,CAAA,UAAe,CAAC,WAAW,CAAC;YAC7C;YAAU;YAAY;QAC1B;QACA,OAAO;IAEX,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,YAAY;YACZ,SAAS,MAAM,OAAO,IAAI;YAC1B,QAAQ,EAAE;QACd;IACJ;AACJ"}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/api/hotel/settings/vat/add/route.js"],"sourcesContent":["import { verifyToken } from '@/app/lib/utils/jwt';\nimport { add_settings } from './controller';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request) {\n\ttry {\n\n\t\t// Get token from cookie\n\t\tlet token = request.cookies.get('hotel_auth_token')?.value;\n\t\tif (!token) {\n\t\t\ttoken = request.cookies.get('auth_token')?.value;\n\t\t\tif (!token) {\n\n\t\t\t\treturn NextResponse.json({\n\t\t\t\t\treturncode: 401,\n\t\t\t\t\tmessage: \"No token provided\",\n\t\t\t\t\toutput: []\n\t\t\t\t}, { status: 401, statusText: \"No token provided\" });\n\t\t\t}\n\t\t}\n\n\t\t// Verify the token\n\t\tconst userData = verifyToken(token);\n\t\tif (!userData) {\n\t\t\treturn NextResponse.json({\n\t\t\t\treturncode: 401,\n\t\t\t\tmessage: \"Invalid or expired token\",\n\t\t\t\toutput: []\n\t\t\t}, { status: 401, statusText: \"Invalid or expired token\" });\n\t\t}\n\n\t\t// Proceed with hotel staff creation if token is valid\n\t\tconst data = await request.json();\n\t\tconst result = await add_settings(data, userData);\n\n\t\treturn NextResponse.json({\n\t\t\treturncode: result.returncode,\n\t\t\tmessage: result.message,\n\t\t\toutput: result.output\n\t\t}, {\n\t\t\tstatus: result.returncode,\n\t\t});\n\t} catch (error) {\n\t\treturn NextResponse.json(\n\t\t\t{\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t},\n\t\t\t{ status: 500 }\n\t\t);\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAO;IACjC,IAAI;QAEH,wBAAwB;QACxB,IAAI,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,qBAAqB;QACrD,IAAI,CAAC,OAAO;YACX,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;YAC3C,IAAI,CAAC,OAAO;gBAEX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACxB,YAAY;oBACZ,SAAS;oBACT,QAAQ,EAAE;gBACX,GAAG;oBAAE,QAAQ;oBAAK,YAAY;gBAAoB;YACnD;QACD;QAEA,mBAAmB;QACnB,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI,CAAC,UAAU;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACxB,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACX,GAAG;gBAAE,QAAQ;gBAAK,YAAY;YAA2B;QAC1D;QAEA,sDAAsD;QACtD,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE,MAAM;QAExC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACxB,YAAY,OAAO,UAAU;YAC7B,SAAS,OAAO,OAAO;YACvB,QAAQ,OAAO,MAAM;QACtB,GAAG;YACF,QAAQ,OAAO,UAAU;QAC1B;IACD,EAAE,OAAO,OAAO;QACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YACC,YAAY;YACZ,SAAS,MAAM,OAAO;YACtB,QAAQ,EAAE;QACX,GACA;YAAE,QAAQ;QAAI;IAEhB;AACD"}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}