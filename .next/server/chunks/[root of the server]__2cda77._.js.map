{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/jwt.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key'; // In production, always use environment variable\nconst JWT_EXPIRES_IN = '24h';\n\nexport const createToken = (payload) => {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n};\n\nexport const verifyToken = (token) => {\n  try {\n    return jwt.verify(token, JWT_SECRET);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const updateToken = (token, newData) => {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET);\n    const updatedPayload = { ...decoded, ...newData };\n    // Remove the exp claim to generate a fresh expiration\n    delete updatedPayload.exp;\n    return jwt.sign(updatedPayload, JWT_SECRET, { expiresIn: JWT_EXPIRES_IN });\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const decodeToken = (token) => {\n  try {\n    return jwt.decode(token);\n  } catch (error) {\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI,mBAAmB,iDAAiD;AACjH,MAAM,iBAAiB;AAEhB,MAAM,cAAc,CAAC;IAC1B,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAe;AACnE;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC,OAAO;IACjC,IAAI;QACF,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,MAAM,iBAAiB;YAAE,GAAG,OAAO;YAAE,GAAG,OAAO;QAAC;QAChD,sDAAsD;QACtD,OAAO,eAAe,GAAG;QACzB,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,gBAAgB,YAAY;YAAE,WAAW;QAAe;IAC1E,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/SpecialStringsValidator.js"],"sourcesContent":["export function SubscriptionStatusValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Waiting\", \"On Going\", \"Expired\", \"About to Expire\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function PaymentStatusValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Paid\", \"Unpaid\", \"Part-Paid\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function PaymentModeValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Cash\", \"UPI\", \"Credit-Card\", \"Due\", \"Part\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function OrderTypeValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Takeaway\", \"Delivery\", \"Dine-In\", \"Swiggy\", \"Zomato\", \"QR-Orders\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function TableStatusValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Booked\", \"Bill Pending\", \"Open\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function StockStatusValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Available\", \"Low Stock\", \"Unavailable\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function AttendanceValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Absent\", \"Present\", \"Half-Day\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n\nexport function ExpenseCategoryValidator(value) {\n\n  let validation_flag = false;\n  var list = [\"Salary\", \"Purchases\", \"Miscellaneous\"];\n\n  list.map((item) => {\n    if (value === item) {\n      validation_flag = true;\n    }\n  });\n\n  return validation_flag;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAO,SAAS,4BAA4B,KAAK;IAE/C,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAW;QAAY;QAAW;KAAkB;IAEhE,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,uBAAuB,KAAK;IAE1C,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAQ;QAAU;KAAY;IAE1C,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,qBAAqB,KAAK;IAExC,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAQ;QAAO;QAAe;QAAO;KAAO;IAExD,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,mBAAmB,KAAK;IAEtC,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAY;QAAY;QAAW;QAAU;QAAU;KAAY;IAE/E,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,qBAAqB,KAAK;IAExC,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAU;QAAgB;KAAO;IAE7C,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,qBAAqB,KAAK;IAExC,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAa;QAAa;KAAc;IAEpD,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,oBAAoB,KAAK;IAEvC,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAU;QAAW;KAAW;IAE5C,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT;AAEO,SAAS,yBAAyB,KAAK;IAE5C,IAAI,kBAAkB;IACtB,IAAI,OAAO;QAAC;QAAU;QAAa;KAAgB;IAEnD,KAAK,GAAG,CAAC,CAAC;QACR,IAAI,UAAU,MAAM;YAClB,kBAAkB;QACpB;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Bills.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport { OrderTypeValidator, PaymentModeValidator, PaymentStatusValidator } from \"../utils/SpecialStringsValidator\";\n\nexport const billsSchema = new mongoose.Schema(\n  {\n    Type: {\n      type: String,\n      required: true, // Type of bill (e.g., Dine-in, Takeaway, Delivery)\n      validate: {\n        validator: (value) => OrderTypeValidator(value)\n      },\n      message: \"Bill Type must be one of:- 'Takeaway', 'Delivery', 'Dine-In', 'Swiggy', 'Zomato', 'QR-Orders'.\"\n    },\n    TableId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Tables\", // Reference to the Tables model (optional)\n    },\n    WaiterId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Staffs\", // Reference to the Staffs model (optional)\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotels model (optional)\n      required: true,\n    },\n    CustomerId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Customers\", // Reference to the Customers model (optional)\n    },\n    VatRate: {\n      type: String, // VAT rate (optional)\n      default: \"0 %\",\n    },\n    VatAmount: {\n      type: Number, // VAT amount (optional)\n      default: 0.0,\n    },\n    TotalAmount: {\n      type: Number,\n      default: 0.0, // Total bill amount\n    },\n    CGSTRate: {\n      type: String,\n      default: \"0 %\", // Central GST rate\n    },\n    SGSTRate: {\n      type: String,\n      default: \"0 %\", // State GST rate\n    },\n    SGSTAmount: {\n      type: Number,\n      default: 0.0, // State GST amount\n    },\n    CGSTAmount: {\n      type: Number,\n      default: 0.0, // Central GST amount\n    },\n    EatocoinsRate: {\n      type: String, // Rate of Eatocoins usage (optional)\n      default: \"0 %\",\n    },\n    EatocoinsAmount: {\n      type: Number, // Amount deducted using Eatocoins (optional)\n      default: 0.0,\n    },\n    MenuTotal: {\n      type: Number,\n      default: 0.0, // Total amount for menu items\n    },\n    Amount: {\n      type: Number,\n      default: 0.0, // Net bill amount\n    },\n    BalanceAmount: {\n      type: Number,\n      default: 0.0, // Balance to be paid\n    },\n    DeliveryChargesRate: {\n      type: String, // Rate for delivery charges (optional)\n      default: \"0 %\",\n    },\n    DeliveryChargesAmount: {\n      type: Number, // Delivery charges amount (optional)\n      default: 0.0,\n    },\n    DiscountRate: {\n      type: String, // Discount rate (optional)\n      default: \"0 %\",\n    },\n    DiscountPrice: {\n      type: Number, // Discount price (optional)\n      default: 0.0,\n    },\n    PaymentMode: {\n      type: String,\n      default: \"Cash\",\n      validate: {\n        validator: (value) => PaymentModeValidator(value)\n      },\n      message: \"Payment Mode must be one of:- 'Cash', 'UPI', 'Credit-Card', 'Due', 'Part'.\"\n    },\n    PaymentStatus: {\n      type: String,\n      default: \"Paid\",\n      validate: {\n        validator: (value) => PaymentStatusValidator(value)\n      },\n      message: \"Payment Status must be one of:- 'Paid', 'Unpaid', 'Part-Paid'.\"\n    },\n    Status: {\n      type: String,\n      default: \"Open\",\n      validate: {\n        validator: (value) => { [\"Open\", \"Closed\"].includes(value); }\n      },\n      message: \"Bil Status must be either 'Open' or 'Closed'.\"\n    },\n    Orders: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Orders\", // Reference to the Orders model\n      },\n    ],\n  },\n  {\n    timestamps: true, // Automatically add createdAt and updatedAt fields\n  }\n);\n\n// Pre-remove middleware for single document\nbillsSchema.pre('deleteOne', { document: true }, async function(next) {\n  try {\n    const Orders = mongoose.model('Orders');\n\n    // Delete all related orders\n    await Orders.deleteMany({ BillId: this._id });\n\n    // Update table status if exists\n    if (this.TableId) {\n      const Tables = mongoose.model('Tables');\n      await Tables.findByIdAndUpdate(\n        this.TableId,\n        { Status: \"Available\" }\n      );\n    }\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Pre-deleteMany middleware for multiple documents\nbillsSchema.pre('deleteMany', async function(next) {\n  try {\n    const Bills = mongoose.model('Bills');\n    const bills = await Bills.find(this.getFilter());\n\n    if (bills.length > 0) {\n      const billIds = bills.map(bill => bill._id);\n      const tableIds = bills.filter(bill => bill.TableId).map(bill => bill.TableId);\n\n      // Delete all related orders\n      const Orders = mongoose.model('Orders');\n      await Orders.deleteMany({ BillId: { $in: billIds } });\n\n      // Update table statuses\n      if (tableIds.length > 0) {\n        const Tables = mongoose.model('Tables');\n        await Tables.updateMany(\n          { _id: { $in: tableIds } },\n          { Status: \"Available\" }\n        );\n      }\n    }\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Bills || mongoose.model(\"Bills\", billsSchema);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/BaseCrud.js"],"sourcesContent":["export class BaseCrud {\n  constructor(model) {\n    this.model = model;\n  }\n\n  // Create a new document\n  async create(data) {\n    try {\n      const doc = new this.model(data);\n      await doc.save();\n      return {\n        returncode: 200,\n        message: \"Data Created Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Read all documents with optional filters\n  async readMany(filters = {}, options = {}) {\n    try {\n      const {\n        sort = {},\n        populate = [],\n        select = '',\n        skip = 0,\n        limit = 0,\n        lean = false\n      } = options;\n\n      let query = this.model.find(filters);\n\n      // Apply population\n      if (populate.length > 0) {\n        query = query.populate(populate);\n      }\n\n      // Apply sorting\n      if (Object.keys(sort).length > 0) {\n        query = query.sort(sort);\n      }\n\n      // Apply selection\n      if (select) {\n        query = query.select(select);\n      }\n\n      // Apply pagination\n      if (skip > 0) {\n        query = query.skip(skip);\n      }\n      if (limit > 0) {\n        query = query.limit(limit);\n      }\n\n      // Execute query\n      const docs = lean ? await query.lean() : await query.exec();\n\n      return {\n        returncode: 200,\n        message: \"Data Fetched Successfully\",\n        output: docs\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Read a single document\n  async readOne(filters = {}, options = {}) {\n    try {\n      const { populate = [], select = '', lean = false } = options;\n\n      let query = this.model.findOne(filters);\n\n      // Apply population\n      if (populate.length > 0) {\n        query = query.populate(populate);\n      }\n\n      // Apply selection\n      if (select) {\n        query = query.select(select);\n      }\n\n      // Execute query\n      const doc = lean ? await query.lean() : await query.exec();\n\n      if (!doc) {\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Fetched Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Update a document\n  async update(filters = {}, data = {}, options = { new: true }) {\n    try {\n      const doc = await this.model.findOneAndUpdate(filters, data, options);\n\n      if (!doc) {\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Updated Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Delete a document\n  async delete(filters = {}) {\n    try {\n      console.log('BaseCrud.delete called with:', {\n        model: this.model.modelName,\n        filters\n      });\n\n      const doc = await this.model.deleteMany(filters);\n      console.log('BaseCrud.delete result:', doc);\n\n      if (!doc || doc.deletedCount === 0) {\n        console.log('BaseCrud.delete - No documents found');\n        return {\n          returncode: 404,\n          message: \"Document Not Found\",\n          output: []\n        };\n      }\n\n      return {\n        returncode: 200,\n        message: \"Data Deleted Successfully\",\n        output: doc\n      };\n    } catch (error) {\n      console.error('Error in BaseCrud.delete:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  // Check if document exists\n  async exists(filters = {}) {\n    try {\n      const exists = await this.model.exists(filters);\n      return {\n        returncode: 200,\n        message: exists ? \"Document Exists\" : \"Document Not Found\",\n        output: !!exists\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: false\n      };\n    }\n  }\n\n  // Count documents\n  async count(filters = {}) {\n    try {\n      const count = await this.model.countDocuments(filters);\n      return {\n        returncode: 200,\n        message: \"Count Retrieved Successfully\",\n        output: count\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: 0\n      };\n    }\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/StringValidator.js"],"sourcesContent":["export default function StringValidators(value) {\n  // Ensure the input is a string\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  if (value === null) {\n    return true;\n  }\n\n  // List of forbidden characters\n  const charList = ['/', '\\\\', '\"', ';', \"'\", '+', '`', '^'];\n  let validationFlag = true;\n\n  // Iterate over each character in the list\n  for (let char of charList) {\n\n    // Check if the forbidden character is present in the string\n    if (value.includes(char)) {\n      validationFlag = false;\n      break; // Stop checking further once an invalid character is found\n    }\n  }\n\n  return validationFlag;\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,iBAAiB,KAAK;IAC5C,+BAA+B;IAC/B,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,IAAI,UAAU,MAAM;QAClB,OAAO;IACT;IAEA,+BAA+B;IAC/B,MAAM,WAAW;QAAC;QAAK;QAAM;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI;IAC1D,IAAI,iBAAiB;IAErB,0CAA0C;IAC1C,KAAK,IAAI,QAAQ,SAAU;QAEzB,4DAA4D;QAC5D,IAAI,MAAM,QAAQ,CAAC,OAAO;YACxB,iBAAiB;YACjB,OAAO,2DAA2D;QACpE;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Tables.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport StringValidators from \"../utils/StringValidator\";\nimport { TableStatusValidator } from \"../utils/SpecialStringsValidator\";\n\nexport const tableSchema = new mongoose.Schema(\n  {\n    TableName: {\n      type: String,\n      required: true,\n      validate: {\n        validator: (value) => StringValidators(value)\n      },\n      message: \"Table Name should not contain invalid characters like /, \\\\, \\\", ;, ', +, `, or ^\"\n    },\n    SectionId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Sections\", // Reference to the Sections collection\n      required: true,\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotels collection\n      required: true,\n    },\n    PersonsOccupiable: {\n      type: Number,\n      default: 4,\n    },\n    Status: {\n      type: String,\n      default: \"Open\",\n      validate: {\n        validator: (value) => TableStatusValidator(value)\n      },\n      message: \"Table Status must be one of:- 'Booked', 'Bill Pending', 'Open'.\"\n    },\n\n    // Child Relationship\n    Bills: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Bills\", // Reference to the Bills collection\n      },\n    ],\n  },\n  { timestamps: true }\n);\n\n// Add pre-remove middleware\ntableSchema.pre('remove', async function(next) {\n  try {\n    // Check if table has any active bills\n    const Bills = mongoose.model('Bills');\n    const activeBills = await Bills.find({\n      TableId: this._id,\n      Status: 'Open'\n    });\n\n    if (activeBills.length > 0) {\n      throw new Error('Cannot delete table with active bills');\n    }\n\n    // Update completed bills to remove table reference\n    await Bills.deleteMany({ TableId: this._id, Status: 'Closed' });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\ntableSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get the tables that will be deleted\n    const Tables = mongoose.model('Tables');\n    const tables = await Tables.find(this.getFilter());\n    const tableIds = tables.map(table => table._id);\n\n    // Check for active bills on any table\n    const Bills = mongoose.model('Bills');\n    const activeBills = await Bills.find({\n      TableId: { $in: tableIds },\n      Status: 'Open'\n    });\n\n    if (activeBills.length > 0) {\n      throw new Error('Cannot delete tables with active bills');\n    }\n\n    // Update completed bills to remove table references\n    await Bills.deleteMany({ TableId: { $in: tableIds } });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Tables || mongoose.model(\"Tables\", tableSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,cAAc,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAC5C;IACE,WAAW;QACT,MAAM;QACN,UAAU;QACV,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,+IAAA,CAAA,UAAgB,AAAD,EAAE;QACzC;QACA,SAAS;IACX;IACA,WAAW;QACT,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,mBAAmB;QACjB,MAAM;QACN,SAAS;IACX;IACA,QAAQ;QACN,MAAM;QACN,SAAS;QACT,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,uJAAA,CAAA,uBAAoB,AAAD,EAAE;QAC7C;QACA,SAAS;IACX;IAEA,qBAAqB;IACrB,OAAO;QACL;YACE,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACP;KACD;AACH,GACA;IAAE,YAAY;AAAK;AAGrB,4BAA4B;AAC5B,YAAY,GAAG,CAAC,UAAU,eAAe,IAAI;IAC3C,IAAI;QACF,sCAAsC;QACtC,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,cAAc,MAAM,MAAM,IAAI,CAAC;YACnC,SAAS,IAAI,CAAC,GAAG;YACjB,QAAQ;QACV;QAEA,IAAI,YAAY,MAAM,GAAG,GAAG;YAC1B,MAAM,IAAI,MAAM;QAClB;QAEA,mDAAmD;QACnD,MAAM,MAAM,UAAU,CAAC;YAAE,SAAS,IAAI,CAAC,GAAG;YAAE,QAAQ;QAAS;QAE7D;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;AAEA,gCAAgC;AAChC,YAAY,GAAG,CAAC,cAAc,eAAe,IAAI;IAC/C,IAAI;QACF,sCAAsC;QACtC,MAAM,SAAS,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC9B,MAAM,SAAS,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;QAC/C,MAAM,WAAW,OAAO,GAAG,CAAC,CAAA,QAAS,MAAM,GAAG;QAE9C,sCAAsC;QACtC,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,cAAc,MAAM,MAAM,IAAI,CAAC;YACnC,SAAS;gBAAE,KAAK;YAAS;YACzB,QAAQ;QACV;QAEA,IAAI,YAAY,MAAM,GAAG,GAAG;YAC1B,MAAM,IAAI,MAAM;QAClB;QAEA,oDAAoD;QACpD,MAAM,MAAM,UAAU,CAAC;YAAE,SAAS;gBAAE,KAAK;YAAS;QAAE;QAEpD;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,UAAU"}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/BooleanValidator.js"],"sourcesContent":["export default function BooleanValidator(value) {\n  if (typeof value != \"boolean\") {\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,iBAAiB,KAAK;IAC5C,IAAI,OAAO,SAAS,WAAW;QAC7B,OAAO;IACT,OACK;QACH,OAAO;IACT;AACF"}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/GstSettings.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport BooleanValidator from \"../utils/BooleanValidator\";\n\nexport const gstSettingsSchema = new mongoose.Schema(\n  {\n    Visibility: {\n      type: Boolean,\n      default: false, // Determines whether GST is applied or not\n      validate: {\n        validator: (value) => BooleanValidator(value)\n      },\n      message: \"Visibility should be either true or false\"\n    },\n    GSTPercent: {\n      type: Number,\n      default: 0.0, // Percentage value of GST\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotels model\n      required: true,\n      unique: true\n    },\n  },\n  {\n    timestamps: true, // Automatically manage createdAt and updatedAt fields\n  }\n);\n\n// Add pre-remove middleware\ngstSettingsSchema.pre('remove', async function(next) {\n  try {\n    // Update all bills to remove GST references\n    const Bills = mongoose.model('Bills');\n    await Bills.updateMany(\n      { HotelId: this.HotelId },\n      { \n        $set: { \n          CGSTRate: '0 %',\n          SGSTRate: '0 %',\n          CGSTAmount: 0,\n          SGSTAmount: 0\n        } \n      }\n    );\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\ngstSettingsSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get the settings that will be deleted\n    const GstSettings = mongoose.model('GstSettings');\n    const settings = await GstSettings.find(this.getFilter());\n    const hotelIds = settings.map(setting => setting.HotelId);\n\n    if (hotelIds.length > 0) {\n      // Update all bills to remove GST references\n      const Bills = mongoose.model('Bills');\n      await Bills.updateMany(\n        { HotelId: { $in: hotelIds } },\n        { \n          $set: { \n            CGSTRate: '0 %',\n            SGSTRate: '0 %',\n            CGSTAmount: 0,\n            SGSTAmount: 0\n          } \n        }\n      );\n    }\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.GstSettings || mongoose.model(\"GstSettings\", gstSettingsSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,oBAAoB,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAClD;IACE,YAAY;QACV,MAAM;QACN,SAAS;QACT,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,gJAAA,CAAA,UAAgB,AAAD,EAAE;QACzC;QACA,SAAS;IACX;IACA,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;QACV,QAAQ;IACV;AACF,GACA;IACE,YAAY;AACd;AAGF,4BAA4B;AAC5B,kBAAkB,GAAG,CAAC,UAAU,eAAe,IAAI;IACjD,IAAI;QACF,4CAA4C;QAC5C,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,MAAM,UAAU,CACpB;YAAE,SAAS,IAAI,CAAC,OAAO;QAAC,GACxB;YACE,MAAM;gBACJ,UAAU;gBACV,UAAU;gBACV,YAAY;gBACZ,YAAY;YACd;QACF;QAGF;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;AAEA,gCAAgC;AAChC,kBAAkB,GAAG,CAAC,cAAc,eAAe,IAAI;IACrD,IAAI;QACF,wCAAwC;QACxC,MAAM,cAAc,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QACnC,MAAM,WAAW,MAAM,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS;QACtD,MAAM,WAAW,SAAS,GAAG,CAAC,CAAA,UAAW,QAAQ,OAAO;QAExD,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,4CAA4C;YAC5C,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;YAC7B,MAAM,MAAM,UAAU,CACpB;gBAAE,SAAS;oBAAE,KAAK;gBAAS;YAAE,GAC7B;gBACE,MAAM;oBACJ,UAAU;oBACV,UAAU;oBACV,YAAY;oBACZ,YAAY;gBACd;YACF;QAEJ;QAEA;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe"}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 915, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/GSTSettings.js"],"sourcesContent":["import GstSettings from \"../models/GstSettings\";\nimport { BaseCrud } from \"./BaseCrud\";\n\nclass GSTSettingsCrud extends BaseCrud {\n  constructor() {\n    super(GstSettings)\n  }\n\n  async addSettings(data) {\n    try {\n      const normalizedData = {\n        Visibility: data.visibility,\n        GSTPercent: data.gst_percent,\n        HotelId: data.hotel_id\n      }\n      const result = await this.create(normalizedData);\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async readSettings(hotel_id) {\n    try {\n      const result = await this.readOne({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async readAllSettings(hotel_id) {\n    try {\n      const result = await this.readMany({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n\n  async updateSettings(data) {\n    try {\n      const updateData = {\n        Visibility: data.visibility,\n        GSTPercent: data.gst_percent,\n      }\n      const hotel_id = data.hotel_id;\n      const result = await this.update(\n        { HotelId: hotel_id },\n        updateData,\n        { new: true }\n      )\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async deleteSettings(hotel_id) {\n    try {\n      const result = await this.delete({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n}\n\nconst gstSettingsCrud = new GSTSettingsCrud();\nexport default gstSettingsCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,wBAAwB,uIAAA,CAAA,WAAQ;IACpC,aAAc;QACZ,KAAK,CAAC,4IAAA,CAAA,UAAW;IACnB;IAEA,MAAM,YAAY,IAAI,EAAE;QACtB,IAAI;YACF,MAAM,iBAAiB;gBACrB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,WAAW;gBAC5B,SAAS,KAAK,QAAQ;YACxB;YACA,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC;YACjC,OAAO;QAET,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC3B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,OAAO,CAAC;gBAAE,SAAS;YAAS;YACtD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,gBAAgB,QAAQ,EAAE;QAC9B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,QAAQ,CAAC;gBAAE,SAAS;YAAS;YACvD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAGA,MAAM,eAAe,IAAI,EAAE;QACzB,IAAI;YACF,MAAM,aAAa;gBACjB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,WAAW;YAC9B;YACA,MAAM,WAAW,KAAK,QAAQ;YAC9B,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAC9B;gBAAE,SAAS;YAAS,GACpB,YACA;gBAAE,KAAK;YAAK;YAEd,OAAO;QAET,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,QAAQ,EAAE;QAC7B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC;gBAAE,SAAS;YAAS;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;AACF;AAEA,MAAM,kBAAkB,IAAI;uCACb"}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/VatSettings.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport BooleanValidator from \"../utils/BooleanValidator\";\n\nexport const vatSettingsSchema = new mongoose.Schema(\n  {\n    Visibility: {\n      type: Boolean,\n      default: false, // Determines whether VAT is enabled\n      validate: {\n        validator: (value) => BooleanValidator(value)\n      },\n      message: \"Visibility should be either true or false\"\n    },\n    VATPercent: {\n      type: Number,\n      default: 0.0, // Percentage value of VAT\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotels model\n      required: true,\n      unique: true\n    },\n  },\n  {\n    timestamps: true, // Automatically manage createdAt and updatedAt fields\n  }\n);\n\n// Add pre-remove middleware\nvatSettingsSchema.pre('remove', async function(next) {\n  try {\n    // Update all bills to remove VAT references\n    const Bills = mongoose.model('Bills');\n    await Bills.updateMany(\n      { HotelId: this.HotelId },\n      { \n        $set: { \n          VatRate: '0 %',\n          VatAmount: 0\n        } \n      }\n    );\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\nvatSettingsSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get the settings that will be deleted\n    const VatSettings = mongoose.model('VatSettings');\n    const settings = await VatSettings.find(this.getFilter());\n    const hotelIds = settings.map(setting => setting.HotelId);\n\n    if (hotelIds.length > 0) {\n      // Update all bills to remove VAT references\n      const Bills = mongoose.model('Bills');\n      await Bills.updateMany(\n        { HotelId: { $in: hotelIds } },\n        { \n          $set: { \n            VatRate: '0 %',\n            VatAmount: 0\n          } \n        }\n      );\n    }\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.VatSettings || mongoose.model(\"VatSettings\", vatSettingsSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,oBAAoB,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAClD;IACE,YAAY;QACV,MAAM;QACN,SAAS;QACT,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,gJAAA,CAAA,UAAgB,AAAD,EAAE;QACzC;QACA,SAAS;IACX;IACA,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;QACV,QAAQ;IACV;AACF,GACA;IACE,YAAY;AACd;AAGF,4BAA4B;AAC5B,kBAAkB,GAAG,CAAC,UAAU,eAAe,IAAI;IACjD,IAAI;QACF,4CAA4C;QAC5C,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,MAAM,UAAU,CACpB;YAAE,SAAS,IAAI,CAAC,OAAO;QAAC,GACxB;YACE,MAAM;gBACJ,SAAS;gBACT,WAAW;YACb;QACF;QAGF;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;AAEA,gCAAgC;AAChC,kBAAkB,GAAG,CAAC,cAAc,eAAe,IAAI;IACrD,IAAI;QACF,wCAAwC;QACxC,MAAM,cAAc,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QACnC,MAAM,WAAW,MAAM,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS;QACtD,MAAM,WAAW,SAAS,GAAG,CAAC,CAAA,UAAW,QAAQ,OAAO;QAExD,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,4CAA4C;YAC5C,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;YAC7B,MAAM,MAAM,UAAU,CACpB;gBAAE,SAAS;oBAAE,KAAK;gBAAS;YAAE,GAC7B;gBACE,MAAM;oBACJ,SAAS;oBACT,WAAW;gBACb;YACF;QAEJ;QAEA;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe"}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/VATSettings.js"],"sourcesContent":["import VatSettings from \"../models/VatSettings\";\nimport { BaseCrud } from \"./BaseCrud\";\n\nclass VATSettingsCrud extends BaseCrud {\n  constructor() {\n    super(VatSettings)\n  }\n\n  async addSettings(data) {\n    try {\n      const normalizedData = {\n        Visibility: data.visibility,\n        VATPercent: data.vat_percent,\n        HotelId: data.hotel_id\n      }\n      const result = this.create(normalizedData);\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async readSettings(hotel_id) {\n    try {\n      const result = this.readOne({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async readAllSettings(hotel_id) {\n    try {\n      const result = this.readMany({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async updateSettings(data) {\n    try {\n      const updateData = {\n        Visibility: data.visibility,\n        VATPercent: data.vat_percent\n      }\n      const hotel_id = data.hotel_id;\n      const result = this.update(\n        { HotelId: hotel_id },\n        updateData,\n        { new: true }\n      )\n      return result;\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async deleteSettings(hotel_id) {\n    try {\n      const result = this.delete({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n}\n\nconst vatSettingsCrud = new VATSettingsCrud();\nexport default vatSettingsCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,wBAAwB,uIAAA,CAAA,WAAQ;IACpC,aAAc;QACZ,KAAK,CAAC,4IAAA,CAAA,UAAW;IACnB;IAEA,MAAM,YAAY,IAAI,EAAE;QACtB,IAAI;YACF,MAAM,iBAAiB;gBACrB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,WAAW;gBAC5B,SAAS,KAAK,QAAQ;YACxB;YACA,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;YAC3B,OAAO;QAET,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC3B,IAAI;YACF,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC;gBAAE,SAAS;YAAS;YAChD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,gBAAgB,QAAQ,EAAE;QAC9B,IAAI;YACF,MAAM,SAAS,IAAI,CAAC,QAAQ,CAAC;gBAAE,SAAS;YAAS;YACjD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,IAAI,EAAE;QACzB,IAAI;YACF,MAAM,aAAa;gBACjB,YAAY,KAAK,UAAU;gBAC3B,YAAY,KAAK,WAAW;YAC9B;YACA,MAAM,WAAW,KAAK,QAAQ;YAC9B,MAAM,SAAS,IAAI,CAAC,MAAM,CACxB;gBAAE,SAAS;YAAS,GACpB,YACA;gBAAE,KAAK;YAAK;YAEd,OAAO;QAET,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,QAAQ,EAAE;QAC7B,IAAI;YACF,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;gBAAE,SAAS;YAAS;YAC/C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;AACF;AAEA,MAAM,kBAAkB,IAAI;uCACb"}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1196, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/EatoCoinsSettings.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport BooleanValidator from \"../utils/BooleanValidator\";\n\nexport const eatocoinsSettingsSchema = new mongoose.Schema(\n  {\n    Visibility: {\n      type: Boolean,\n      default: false, // Determines if Eatocoins are enabled\n      validate: {\n        validator: (value) => BooleanValidator(value)\n      },\n      message: \"Visibility should be either true or false\"\n    },\n    CreditLimitAmt: {\n      type: Number,\n      default: 0, // Minimum purchase amount required to credit coins to the wallet\n    },\n    CreditLimitPercent: {\n      type: Number,\n      default: 0, // Percentage of the purchase amount credited to the wallet\n    },\n    RedeemLimitAmount: {\n      type: Number,\n      default: 0, // Minimum amount above which wallet coins can be redeemed\n    },\n    RedeemLimitPercent: {\n      type: Number,\n      default: 0, // Maximum percentage of discount allowed via Eatocoins\n    },\n    Rate: {\n      type: Number,\n      default: 0, // Conversion rate for Eatocoins\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotels model\n      required: true,\n      unique: true\n    },\n  },\n  {\n    timestamps: true, // Automatically manage createdAt and updatedAt fields\n  }\n);\n\nexport default mongoose.models.EatocoinsSettings || mongoose.model(\"EatocoinsSettings\", eatocoinsSettingsSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,0BAA0B,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CACxD;IACE,YAAY;QACV,MAAM;QACN,SAAS;QACT,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,gJAAA,CAAA,UAAgB,AAAD,EAAE;QACzC;QACA,SAAS;IACX;IACA,gBAAgB;QACd,MAAM;QACN,SAAS;IACX;IACA,oBAAoB;QAClB,MAAM;QACN,SAAS;IACX;IACA,mBAAmB;QACjB,MAAM;QACN,SAAS;IACX;IACA,oBAAoB;QAClB,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,SAAS;IACX;IACA,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;QACV,QAAQ;IACV;AACF,GACA;IACE,YAAY;AACd;uCAGa,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,iBAAiB,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,qBAAqB"}},
    {"offset": {"line": 1243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/EatocoinsSettings.js"],"sourcesContent":["import EatoCoinsSettings from \"../models/EatoCoinsSettings\";\nimport { BaseCrud } from \"./BaseCrud\";\n\nclass EatocoinsSettingsCrud extends BaseCrud {\n  constructor() {\n    super(EatoCoinsSettings);\n  }\n\n  async addSettings(data) {\n    try {\n      const normalizedData = {\n        Visibility: data.visibility,\n        CreditLimitAmt: data.credit_limit_amt,\n        CreditLimitPercent: data.credit_limit_percent,\n        RedeemLimitAmount: data.redeem_limit_amt,\n        RedeemLimitPercent: data.redeem_limit_percent,\n        Rate: data.rate,\n        HotelId: data.hotel_id\n      };\n      const result = await this.create(normalizedData);\n      return result;\n    } catch (error) {\n      console.error('Error in addSettings:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readSettings(hotel_id) {\n    try {\n      const result = await this.readOne({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      console.error('Error in readSettings:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readAllSettings(hotel_id) {\n    try {\n      const result = await this.readMany({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      }\n    }\n  }\n\n  async updateSettings(data) {\n    try {\n      const updateData = {\n        Visibility: data.visibility,\n        CreditLimitAmt: data.credit_limit_amt,\n        CreditLimitPercent: data.credit_limit_percent,\n        RedeemLimitAmount: data.redeem_limit_amt,\n        RedeemLimitPercent: data.redeem_limit_percent,\n        Rate: data.rate\n      };\n\n      const result = await this.update(\n        { HotelId: data.hotel_id },\n        updateData\n      );\n      return result;\n    } catch (error) {\n      console.error('Error in updateSettings:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async deleteSettings(hotel_id) {\n    try {\n      const result = await this.delete({ HotelId: hotel_id });\n      return result;\n    } catch (error) {\n      console.error('Error in deleteSettings:', error);\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n}\n\nconst eatocoinsSettingsCrud = new EatocoinsSettingsCrud();\nexport default eatocoinsSettingsCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,WAAQ;IAC1C,aAAc;QACZ,KAAK,CAAC,kJAAA,CAAA,UAAiB;IACzB;IAEA,MAAM,YAAY,IAAI,EAAE;QACtB,IAAI;YACF,MAAM,iBAAiB;gBACrB,YAAY,KAAK,UAAU;gBAC3B,gBAAgB,KAAK,gBAAgB;gBACrC,oBAAoB,KAAK,oBAAoB;gBAC7C,mBAAmB,KAAK,gBAAgB;gBACxC,oBAAoB,KAAK,oBAAoB;gBAC7C,MAAM,KAAK,IAAI;gBACf,SAAS,KAAK,QAAQ;YACxB;YACA,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC;YACjC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC3B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,OAAO,CAAC;gBAAE,SAAS;YAAS;YACtD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,gBAAgB,QAAQ,EAAE;QAC9B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,QAAQ,CAAC;gBAAE,SAAS;YAAS;YACvD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,IAAI,EAAE;QACzB,IAAI;YACF,MAAM,aAAa;gBACjB,YAAY,KAAK,UAAU;gBAC3B,gBAAgB,KAAK,gBAAgB;gBACrC,oBAAoB,KAAK,oBAAoB;gBAC7C,mBAAmB,KAAK,gBAAgB;gBACxC,oBAAoB,KAAK,oBAAoB;gBAC7C,MAAM,KAAK,IAAI;YACjB;YAEA,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAC9B;gBAAE,SAAS,KAAK,QAAQ;YAAC,GACzB;YAEF,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;IAEA,MAAM,eAAe,QAAQ,EAAE;QAC7B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC;gBAAE,SAAS;YAAS;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO;gBACL,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACZ;QACF;IACF;AACF;AAEA,MAAM,wBAAwB,IAAI;uCACnB"}},
    {"offset": {"line": 1352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Reservation.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nexport const ReservationSchema = new mongoose.Schema(\n  {\n    Date: {\n      type: String, // Storing date as a string for flexibility (e.g., \"YYYY-MM-DD\")\n      required: true,\n    },\n    Time: {\n      type: String, // Storing time as a string for flexibility (e.g., \"HH:mm\")\n      required: true,\n    },\n    Note: {\n      type: String,\n      default: null, // Optional note field\n    },\n    NoOfPersons: {\n      type: Number,\n      default: 0, // Optional number of persons\n    },\n    CustomerId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Customers\", // Reference to the `Customers` collection\n      required: true,\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the `Hotels` collection\n      required: true,\n    },\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.models.Reservations \n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,oBAAoB,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAClD;IACE,MAAM;QACJ,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,SAAS;IACX;IACA,aAAa;QACX,MAAM;QACN,SAAS;IACX;IACA,YAAY;QACV,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;AACF,GACA;IAAE,YAAY;AAAK;uCAGN,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,YAAY"}},
    {"offset": {"line": 1395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Customers.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport StringValidators from \"../utils/StringValidator\";\nimport Reservation from \"./Reservation\";\n\nexport const customerSchema = new mongoose.Schema(\n  {\n    CustomerName: {\n      type: String,\n      required: true,\n      validate: {\n        validator: (value) => StringValidators(value)\n      },\n      message: \"Customer Name should not contain invalid characters like /, \\\\, \\\", ;, ', +, `, or ^\"\n    },\n    Contact: {\n      type: String,\n      required: false,\n    },\n    Email: {\n      type: String,\n      required: false,\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the Hotel model\n      required: true,\n    },\n    EatocoinsWallet: {\n      type: Number,\n      default: 0, // Default to 0 if not provided\n    },\n    StreetAddress: {\n      type: String,\n      required: false,\n    },\n    Apartment: {\n      type: String,\n      required: false,\n    },\n    City: {\n      type: String,\n      required: false,\n    },\n    State: {\n      type: String,\n      required: false,\n    },\n    Landmark: {\n      type: String,\n      required: false,\n    },\n    ZipCode: {\n      type: String,\n      required: false,\n    },\n    Birthday: {\n      type: String,\n      required: false,\n    },\n    Anniversary: {\n      type: String,\n      required: false,\n    },\n\n    // Child Relationship\n    Bills: [{\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Bills\", // Reference to the Bill model\n    }],\n    Reservation: [{\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Reservations\", // Reference to the TableReservation model\n    }],\n  },\n  {\n    timestamps: true, // Automatically adds `createdAt` and `updatedAt` fields\n  }\n);\n\n// Add pre-remove middleware\ncustomerSchema.pre('remove', async function(next) {\n  try {\n    // Check for active bills\n    const Bills = mongoose.model('Bills');\n    const activeBills = await Bills.find({\n      CustomerId: this._id,\n      Status: 'Open'\n    });\n\n    if (activeBills.length > 0) {\n      throw new Error('Cannot delete customer with active bills');\n    }\n\n    // Update completed bills to remove customer reference\n    await Bills.deleteMany({ CustomerId: this._id });\n\n    // Delete any reservations\n    const Reservation = mongoose.model('Reservations');\n    await Reservation.deleteMany({ CustomerId: this._id });\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\ncustomerSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get customers to be deleted\n    const Customers = mongoose.model('Customers');\n    const customers = await Customers.find(this.getFilter());\n    const customerIds = customers.map(customer => customer._id);\n\n    if (customerIds.length > 0) {\n      // Check for active bills\n      const Bills = mongoose.model('Bills');\n      const activeBills = await Bills.find({\n        CustomerId: { $in: customerIds },\n        Status: 'Open'\n      });\n\n      if (activeBills.length > 0) {\n        throw new Error('Cannot delete customers with active bills');\n      }\n\n      // Update completed bills and delete reservations in parallel\n      await Promise.all([\n        Bills.deleteMany({ CustomerId: { $in: customerIds } }),\n        Reservation.deleteMany({ CustomerId: { $in: customerIds } })\n      ]);\n    }\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Customers || mongoose.model(\"Customers\", customerSchema);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1556, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/Customers.js"],"sourcesContent":["import { BaseCrud } from \"./BaseCrud\";\nimport Customers from \"../models/Customers\";\n\nclass CustomersCrud extends BaseCrud {\n  constructor() {\n    super(Customers);\n  }\n\n  async createCustomerBackup({ customer_id = null, customer_name, email, contact, hotel_id, street_address, apartment, city, state, landmark, zip_code, birthday, anniversary }) {\n    try {\n      const normalizedData = {\n        CustomerName: customer_name,\n        Email: email || null,\n        Contact: contact,\n        HotelId: hotel_id,\n        // Detailed address fields\n        StreetAddress: street_address || null,\n        Apartment: apartment || null,\n        City: city || null,\n        State: state || null,\n        Landmark: landmark || null,\n        ZipCode: zip_code || null,\n        Birthday: birthday || null,\n        Anniversary: anniversary || null\n      };\n\n      const exists = await this.readOne({\n        CustomerName: customer_name,\n        Contact: contact,\n        HotelId: hotel_id\n      });\n      customer_id = exists.output._id;\n\n      if (exists.output.length > 0) {\n        const updateData = {\n          CustomerName: customer_name,\n          Email: email || null,\n          Contact: contact,\n          StreetAddress: street_address || null,\n          Apartment: apartment || null,\n          City: city || null,\n          State: state || null,\n          Landmark: landmark || null,\n          ZipCode: zip_code || null,\n          Birthday: birthday || null,\n          Anniversary: anniversary || null\n        };\n\n        return await this.update(updateData);\n      }\n\n      return await this.create(normalizedData);\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async createCustomer(data) {\n    try {\n      const normalizedData = {\n        CustomerName: data.customer_name,\n        Email: data.email,\n        Contact: data.contact,\n        HotelId: data.hotel_id,\n\n        // Detailed address fields\n        StreetAddress: data.street_address || null,\n        Apartment: data.apartment || null,\n        City: data.city || null,\n        State: data.state || null,\n        Landmark: data.landmark || null,\n        ZipCode: data.zip_code || null,\n        Birthday: data.birthday || null,\n        Anniversary: data.anniversary || null\n      };\n\n      const result = await this.create(normalizedData);\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readCustomers(hotel_id) {\n    try {\n      const result = await this.readMany(\n        { HotelId: hotel_id }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readCustomerDetails(customer_id) {\n    try {\n      const result = await this.readOne(\n        { _id: customer_id }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async checkCustomer(customer_name, contact, hotel_id) {\n    try {\n      const result = await this.readOne({\n        CustomerName: customer_name,\n        Contact: contact,\n        HotelId: hotel_id\n      });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async updateCustomerInfo(data) {\n    try {\n      const updateData = {\n        CustomerName: data.name,\n        Email: data.email,\n        Contact: data.contact,\n        StreetAddress: data.street_address,\n        Apartment: data.apartment,\n        City: data.city,\n        State: data.state,\n        Landmark: data.landmark,\n        ZipCode: data.zip_code,\n        Birthday: data.birthday,\n        Anniversary: data.anniversary\n      };\n\n      const result = await this.update(\n        { _id: data.customer_id },\n        updateData,\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async updateWallet(data) {\n    try {\n      const customer = await this.readOne({ _id: data.customer_id });\n      if (customer.returncode !== 200) {\n        return customer;\n      }\n\n      const updateData = {\n        EatocoinsWallet: data.wallet,\n      };\n\n      const result = await this.update(\n        { _id: data.customer_id },\n        updateData,\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async deleteCustomers(filter) {\n    try {\n      // Check if any customers have open bills\n      const customers = await this.readMany(filter);\n\n      if (customers.returncode === 200) {\n        // If no open bills, proceed with deletion\n        const result = await this.delete(filter);\n        return result;\n      }\n\n      return {\n        returncode: 200,\n        message: \"No Customers Found.\",\n        output: []\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async doesCustomerExist(hotel_id, email) {\n    try {\n      const result = await this.readOne({\n        HotelId: hotel_id,\n        Email: email\n      });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n}\n\nconst customersCrud = new CustomersCrud();\nexport default customersCrud;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1786, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/Bills.js"],"sourcesContent":["import Bills from \"../models/Bills\";\nimport { BaseCrud } from \"./BaseCrud\";\nimport Tables from \"../models/Tables\";\nimport gstSettingsCrud from \"./GSTSettings\";\nimport vatSettingsCrud from \"./VATSettings\";\nimport eatocoinsSettingsCrud from \"./EatocoinsSettings\";\nimport customersCrud from \"./Customers\";\n\nclass BillsCrud extends BaseCrud {\n  constructor() {\n    super(Bills);\n  }\n\n  async createBill(data) {\n    try {\n      const normalizedData = {\n        Type: data.type,\n        TableId: data.table_id,\n        WaiterId: data.waiter_id,\n        HotelId: data.hotel_id,\n        CustomerId: data.customer_id,\n      };\n\n      // Create the bill\n      const result = await this.create(normalizedData);\n\n      if (result.returncode === 200) {\n        // If table is assigned, update its status\n        if (data.table_id) {\n          await Tables.findByIdAndUpdate(\n            data.table_id,\n            { Status: \"Booked\" },\n            { new: true }\n          );\n        }\n      }\n\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readBills(hotel_id) {\n    try {\n      const result = await this.readMany(\n        { HotelId: hotel_id },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              populate: [\n                {\n                  path: 'MenuId',\n                  select: 'Price',\n                  populate: {\n                    path: 'DishId',\n                    select: 'DishName Description Type'\n                  }\n                }\n              ]\n            },\n            {\n              path: 'TableId',\n              select: 'TableName Capacity Status'\n            },\n            {\n              path: 'WaiterId',\n              select: 'FirstName LastName Role'\n            },\n            {\n              path: 'CustomerId',\n              select: 'CustomerName Contact Email'\n            },\n            {\n              path: 'HotelId',\n              select: 'HotelName'\n            }\n          ]\n        }\n      );\n\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readBills(hotel_id) {\n    try {\n      const result = await this.readMany(\n        { HotelId: hotel_id },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              populate: [\n                {\n                  path: 'MenuId',\n                  select: 'Price',\n                  populate: {\n                    path: 'DishId',\n                    select: 'DishName Description Type'\n                  }\n                }\n              ]\n            },\n            {\n              path: 'TableId',\n              select: 'TableName Capacity Status'\n            },\n            {\n              path: 'WaiterId',\n              select: 'FirstName LastName Role'\n            },\n            {\n              path: 'CustomerId',\n              select: 'CustomerName Contact Email'\n            },\n            {\n              path: 'HotelId',\n              select: 'HotelName'\n            }\n          ]\n        }\n      );\n\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readBillByStaffId(staff_id) {\n    try {\n      const result = await this.readOne(\n        { WaiterId: staff_id },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              populate: [\n                {\n                  path: 'MenuId',\n                  select: 'Price',\n                  populate: {\n                    path: 'DishId',\n                    select: 'DishName Description Type'\n                  }\n                }\n              ]\n            },\n            {\n              path: 'TableId',\n              select: 'TableName Capacity Status'\n            },\n            {\n              path: 'WaiterId',\n              select: 'FirstName LastName Role'\n            },\n            {\n              path: 'CustomerId',\n              select: 'Name Contact Email'\n            },\n            {\n              path: 'HotelId',\n              select: 'HotelName'\n            }\n\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async readBill(bill_id) {\n    try {\n      const result = await this.readOne(\n        { _id: bill_id },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              populate: [\n                {\n                  path: 'MenuId',\n                  select: 'Price',\n                  populate: {\n                    path: 'DishId',\n                    select: 'DishName Description Type'\n                  }\n                }\n              ]\n            },\n            {\n              path: 'TableId',\n              select: 'TableName Capacity Status'\n            },\n            {\n              path: 'WaiterId',\n              select: 'FirstName LastName Role'\n            },\n            {\n              path: 'CustomerId',\n              select: 'Name Contact Email'\n            },\n            {\n              path: 'HotelId',\n              select: 'HotelName'\n            }\n\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async kotRead(bill_id) {\n    try {\n      const result = await this.readOne(\n        { _id: bill_id },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              match: { Status: 'Ordered' },\n              populate: [\n                {\n                  path: 'MenuId',\n                  select: 'Price',\n                  populate: {\n                    path: 'DishId',\n                    select: 'DishName Description Type'\n                  }\n                }\n              ]\n            },\n            {\n              path: 'TableId',\n              select: 'TableName Capacity Status'\n            },\n            {\n              path: 'WaiterId',\n              select: 'FirstName LastName Role'\n            },\n            {\n              path: 'CustomerId',\n              select: 'Name Contact Email'\n            },\n            {\n              path: 'HotelId',\n              select: 'HotelName'\n            }\n\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async dineInRead(table_id) {\n    try {\n      const result = await this.readOne(\n        { TableId: table_id, Status: \"Open\" },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              populate: [\n                {\n                  path: 'MenuId',\n                  select: 'Price',\n                  populate: {\n                    path: 'DishId',\n                    select: 'DishName Description Type'\n                  }\n                }\n              ]\n            },\n            {\n              path: 'TableId',\n              select: 'TableName Capacity Status'\n            },\n            {\n              path: 'WaiterId',\n              select: 'FirstName LastName Role'\n            },\n            {\n              path: 'CustomerId',\n              select: 'Name Contact Email'\n            },\n            {\n              path: 'HotelId',\n              select: 'HotelName'\n            }\n\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async AssignWaiter(data) {\n    try {\n      const updateData = {\n        WaiterId: data.waiter_id,\n      };\n      const bill_id = data.bill_id;\n      const result = await this.update(\n        { _id: bill_id },\n        updateData,\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async AssignTable(data) {\n    try {\n      // First check if table is available\n      const table = await Tables.findById(data.table_id);\n      if (!table || table.Status !== \"Available\") {\n        return {\n          returncode: 400,\n          message: \"Table is not available\",\n          output: []\n        };\n      }\n\n      const updateData = {\n        TableId: data.table_id,\n      };\n      const bill_id = data.bill_id;\n\n      // Update bill with table\n      const result = await this.update(\n        { _id: bill_id },\n        updateData,\n        { new: true }\n      );\n\n      if (result.returncode === 200) {\n        // Update table status\n        await Tables.findByIdAndUpdate(\n          data.table_id,\n          { Status: \"Open\" },\n          { new: true }\n        );\n      }\n\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async UpdateCustomer(data) {\n    try {\n      const updateData = {\n        CustomerId: data.customer_id,\n      };\n      const bill_id = data.bill_id;\n      const result = await this.update(\n        { _id: bill_id },\n        updateData,\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async deleteBillById(bill_id) {\n    try {\n      const bill = await this.readOne({ _id: bill_id });\n\n      if (bill.returncode === 200) {\n\n        // Finally delete the bill\n        const result = await this.delete({ _id: bill_id });\n        return result;\n      }\n\n      return {\n        returncode: 200,\n        message: \"Bill and related data deleted successfully\",\n        output: []\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async deleteBills(filter) {\n    try {\n      // Get bills to be deleted\n      const billsToDelete = await this.readMany(filter);\n\n      if (billsToDelete.returncode === 200 && billsToDelete.output.length > 0) {\n\n        // Finally delete all bills\n        const result = await this.delete(filter);\n        return result;\n      }\n\n      return {\n        returncode: 200,\n        message: \"No bills found to delete\",\n        output: []\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async addOrderToBill(bill_id, order_id) {\n    try {\n      const result = await this.update(\n        { _id: bill_id },\n        { $push: { Orders: order_id } },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async removeOrderFromBill(bill_id, order_id) {\n    try {\n      const result = await this.update(\n        { _id: bill_id },\n        { $pull: { Orders: order_id } },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async BillPayment({\n    bill_id,\n    payment_mode,\n    payment_status,\n    balance_amount,\n    eatocoins,\n    delivery_rate,\n    delivery_amount,\n    discount_rate,\n    discount_amount,\n    hotel_id\n  }) {\n    try {\n      const bill = await this.readOne(\n        { _id: bill_id },\n        {\n          populate: [\n            {\n              path: 'Orders',\n              match: { Status: 'Ordered' },\n              populate: {\n                path: 'MenuId',\n                select: 'Price'\n              }\n            }\n          ]\n        }\n      );\n\n      if (bill.returncode !== 200) {\n        return bill;\n      }\n\n      const customer_id = bill.output.CustomerId;\n      let menu_total = 0;\n\n      // Calculate menu total\n      if (bill.output.Orders) {\n        menu_total = bill.output.Orders.reduce((total, order) => {\n          return total + (order.MenuId ? order.MenuId.Price * order.Quantity : 0);\n        }, 0);\n      }\n\n      // GST Params\n      let gst_amount = 0; let cgst_rate = 0; let sgst_rate = 0; let cgst_amount = 0; let sgst_amount = 0;\n      const gstSettings = await gstSettingsCrud.readSettings(hotel_id);\n      if (gstSettings.output?.Visibility) {\n        gst_amount = (menu_total * gstSettings.output.GSTPercent) / 100;\n        cgst_amount = (gst_amount / 2) | 0;\n        sgst_amount = (gst_amount / 2) | 0;\n        cgst_rate = gstSettings.output.GSTPercent / 2;\n        sgst_rate = cgst_rate;\n      }\n\n      // Vat Params\n      let vat_rate = 0; let vat_amount = 0;\n      const vatSettings = await vatSettingsCrud.readSettings(hotel_id);\n      if (vatSettings.output?.Visibility) {\n        vat_rate = gstSettings.output.GSTPercent;\n        vat_amount = (menu_total * vat_rate) / 100;\n      }\n\n      // Delivery Params\n      if (delivery_rate != 0) {\n        delivery_amount = (delivery_rate / 100) * menu_total;\n      }\n\n      // Total amount\n      const total_amount = menu_total + cgst_amount + sgst_amount + vat_amount + delivery_amount;\n\n      // Discount\n      if (discount_rate != 0) {\n        discount_amount = (discount_rate / 100) * total_amount | 0;\n      }\n\n      // Calculating amount of bill\n      let amount = total_amount - discount_amount;\n\n      // Eatocoins Params \n      let eatocoins_rate = 0; let credit_eatocoins = 0;\n      const eatocoinsSettings = await eatocoinsSettingsCrud.readSettings(hotel_id);\n      if (eatocoinsSettings.output?.Visibility) {\n\n        eatocoins_rate = eatocoinsSettings.output.RedeemLimitPercent || 0;\n        let redeem_limit_amt = eatocoinsSettings.output.RedeemLimitAmount || 0;\n        let credit_limit_amt = eatocoinsSettings.output.CreditLimitAmt || 0;\n        let credit_limit_rate = eatocoinsSettings.output.CreditLimitPercent || 0;\n\n        // Check whether Amount is greater than Credit Limit \n        if (amount >= credit_limit_amt) {\n          credit_eatocoins = (credit_limit_rate / 100) * total_amount | 0;\n        }\n\n        // Redeem\n        if (eatocoins != 0) {\n\n          if (eatocoins_rate != 0) {\n\n            // Redeem limit\n            if (amount >= redeem_limit_amt) {\n\n              // Max Amount\n              const eatocoins_max = (eatocoins_rate / 100) * total_amount | 0;\n\n              // If Eatocoins in input is greater than max amount\n              if (eatocoins > eatocoins_max) {\n                eatocoins = eatocoins_max;\n              }\n\n            }\n            else {\n              eatocoins = 0;\n              eatocoins_rate = 0;\n            }\n          }\n\n        }\n        else {\n          eatocoins = 0;\n          eatocoins_rate = 0;\n        }\n      }\n\n\n      // Update bill with calculated amounts\n      const updateData = {\n        MenuTotal: menu_total,\n        VatAmount: vat_amount,\n        CGSTAmount: cgst_amount,\n        SGSTAmount: sgst_amount,\n        DeliveryChargesAmount: delivery_amount,\n        DiscountAmount: discount_amount,\n        EatocoinsAmount: eatocoins,\n        DeliveryChargesRate: `${delivery_rate} %`,\n        DiscountRate: `${discount_rate} %`,\n        CGSTRate: `${cgst_rate} %`,\n        SGSTRate: `${sgst_rate} %`,\n        VatRate: `${vat_rate} %`,\n        EatocoinsRate: `${eatocoins_rate} %`,\n        TotalAmount: total_amount,\n        Amount: amount,\n        BalanceAmount: balance_amount,\n        PaymentMode: payment_mode,\n        PaymentStatus: payment_status,\n        Status: \"Closed\"\n      };\n\n      const result = await this.update(\n        { _id: bill_id },\n        updateData,\n        { new: true }\n      );\n\n      if (result.returncode === 200) {\n        if (customer_id != null) {\n          const customer_info = await customersCrud.readCustomerDetails(customer_id);\n          const eato_wallet = customer_info.output.EatocoinsWallet;\n          console.log('Wallet update data:', { customer_id, eato_wallet, credit_eatocoins, eatocoins });\n\n          if (eato_wallet > eatocoins) {\n\n            credit_eatocoins = eato_wallet - eatocoins + credit_eatocoins;\n            const data = {\n              customer_id,\n              wallet: credit_eatocoins\n            };\n            await customersCrud.updateWallet(data);\n          }\n          else if (credit_eatocoins > 0) {\n            credit_eatocoins = eato_wallet + credit_eatocoins;\n            const data = {\n              customer_id,\n              wallet: credit_eatocoins\n            };\n            await customersCrud.updateWallet(data);\n          }\n\n        }\n      }\n\n      // Table Status\n      if (result.output.TableId) {\n        await Tables.findByIdAndUpdate(\n          result.output.TableId,\n          { Status: \"Open\" },\n          { new: true }\n        );\n      }\n\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async splitBill(bill_id, split_data) {\n    try {\n      const originalBill = await this.readOne({ _id: bill_id });\n      if (originalBill.returncode !== 200) {\n        return originalBill;\n      }\n\n      // Create new bills\n      const newBills = [];\n      for (const splitInfo of split_data) {\n        const newBillData = {\n          Type: originalBill.output.Type,\n          TableId: originalBill.output.TableId,\n          WaiterId: originalBill.output.WaiterId,\n          HotelId: originalBill.output.HotelId,\n          CustomerId: splitInfo.customer_id || originalBill.output.CustomerId,\n          Orders: splitInfo.order_ids\n        };\n\n        const newBill = await this.create(newBillData);\n        if (newBill.returncode === 200) {\n          newBills.push(newBill.output);\n        } else {\n          // Rollback created bills if any creation fails\n          for (const bill of newBills) {\n            await this.delete({ _id: bill._id });\n          }\n          return newBill;\n        }\n      }\n\n      // Remove split orders from original bill\n      const allSplitOrderIds = split_data.reduce((acc, split) => [...acc, ...split.order_ids], []);\n      await this.update(\n        { _id: bill_id },\n        { $pull: { Orders: { $in: allSplitOrderIds } } },\n        { new: true }\n      );\n\n      // Recalculate all bills\n      await this.calculateBillTotal(bill_id);\n      for (const bill of newBills) {\n        await this.calculateBillTotal(bill._id);\n      }\n\n      return {\n        returncode: 200,\n        message: \"Bill split successfully\",\n        output: {\n          originalBill: bill_id,\n          newBills: newBills.map(b => b._id)\n        }\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n  async SyncBills({\n    Type,\n    TableId,\n    WaiterId,\n    HotelId,\n    CustomerId,\n    Customers,\n    Orders = [],\n    createdAt,\n    updatedAt,\n    MenuTotal,\n    VatAmount,\n    CGSTAmount,\n    SGSTAmount,\n    DeliveryChargesAmount,\n    DiscountAmount,\n    EatocoinsAmount,\n    DeliveryChargesRate,\n    DiscountRate,\n    CGSTRate,\n    SGSTRate,\n    VatRate,\n    EatocoinsRate,\n    TotalAmount,\n    Amount,\n    BalanceAmount,\n    PaymentMode,\n    PaymentStatus,\n    Status,\n  }) {\n    try {\n\n      if (WaiterId === \"\") {\n        WaiterId = null;\n      }\n\n      let bill;\n      if (CustomerId !== null) {\n        const customerData = await customersCrud.create({\n          CustomerName: Customers.CustomerName,\n          Email: Customers.Email,\n          Contact: Customers.Contact,\n          HotelId: Customers.HotelId,\n          StreetAddress: Customers.StreetAddress,\n          Apartment: Customers.Apartment,\n          City: Customers.City,\n          State: Customers.State,\n          Landmark: Customers.Landmark,\n          ZipCode: Customers.ZipCode,\n          Birthday: Customers.Birthday,\n          Anniversary: Customers.Anniversary,\n        });\n\n        const customer_id = customerData.output._id;\n        bill = await this.create({\n          Type,\n          TableId,\n          WaiterId,\n          HotelId,\n          CustomerId: customer_id,\n          createdAt,\n          updatedAt,\n          MenuTotal,\n          VatAmount,\n          CGSTAmount,\n          SGSTAmount,\n          DeliveryChargesAmount,\n          DiscountAmount,\n          EatocoinsAmount,\n          DeliveryChargesRate,\n          DiscountRate,\n          CGSTRate,\n          SGSTRate,\n          VatRate,\n          EatocoinsRate,\n          TotalAmount,\n          Amount,\n          BalanceAmount,\n          PaymentMode,\n          PaymentStatus,\n          Status,\n        });\n      } else {\n        bill = await this.create({\n          Type,\n          TableId,\n          WaiterId,\n          HotelId,\n          CustomerId,\n          createdAt,\n          updatedAt,\n          MenuTotal,\n          VatAmount,\n          CGSTAmount,\n          SGSTAmount,\n          DeliveryChargesAmount,\n          DiscountAmount,\n          EatocoinsAmount,\n          DeliveryChargesRate,\n          DiscountRate,\n          CGSTRate,\n          SGSTRate,\n          VatRate,\n          EatocoinsRate,\n          TotalAmount,\n          Amount,\n          BalanceAmount,\n          PaymentMode,\n          PaymentStatus,\n          Status,\n        });\n      }\n      console.log(bill);\n\n      const bill_id = bill.output._id;\n      Orders.map(async (Order) => {\n        const Data = {\n          Quantity: Order.Quantity,\n          Note: Order.Note,\n          TotalAmount: Order.TotalAmount,\n          MenuId: Order.MenuId._id,\n          bill_id,\n          Status: Order.Status,\n          HotelId: Order.HotelId\n        }\n        await ordersCrud.SyncOrder(Data);\n      })\n      return await this.readOne({ _id: bill_id });\n\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n}\n\nconst billsCrud = new BillsCrud();\nexport default billsCrud;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2633, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/utils/FloatValidator.js"],"sourcesContent":["export default function FloatValidator(value) {\n  // First convert to number if it's a string\n  const num = typeof value === 'string' ? Number(value) : value;\n  \n  // Check if it's a valid number and greater than 0\n  return !isNaN(num) && num > 0;\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,eAAe,KAAK;IAC1C,2CAA2C;IAC3C,MAAM,MAAM,OAAO,UAAU,WAAW,OAAO,SAAS;IAExD,kDAAkD;IAClD,OAAO,CAAC,MAAM,QAAQ,MAAM;AAC9B"}},
    {"offset": {"line": 2642, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2648, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Orders.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport FloatValidator from \"../utils/FloatValidator\";\n\nexport const ordersSchema = new mongoose.Schema(\n  {\n    Quantity: {\n      type: Number,\n      required: true,\n      min: [1, 'Quantity must be at least 1'],\n      validate: {\n        validator: function(value) {\n          return !isNaN(value) && FloatValidator(value);\n        },\n        message: props => `${props.value} is not a valid quantity. Quantity must be a positive number.`\n      }\n    },\n    Note: {\n      type: String,\n      default: null\n    },\n    TotalAmount: {\n      type: Number,\n      required: true,\n      validate: {\n        validator: (value) => FloatValidator(value)\n      },\n      message: \"Total Amount must be a non-negative number.\"\n    },\n    MenuId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Menus\",\n      required: true,\n    },\n    BillId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Bills\",\n      required: true,\n    },\n    Status: {\n      type: String,\n      default: \"Ordered\",\n      validate: {\n        validator: (value) => {\n          return [\"Ordered\", \"Done\", \"Accepted\", \"Rejected\", \"Cancelled\"].includes(value)\n        }\n      },\n      message: \"Status must be one of: 'Ordered', 'Done', 'Accepted', 'Rejected', 'Cancelled'.\"\n    },\n    Reason: {\n      type: String,\n      default: null\n    },\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\",\n      required: true,\n    }\n  },\n  {\n    timestamps: true\n  }\n);\n\n// Pre-remove middleware for single document\nordersSchema.pre('deleteOne', { document: true }, async function(next) {\n  try {\n\n    // Update menu if needed\n    if (this.MenuId) {\n      const Menus = mongoose.model('Menus');\n      await Menus.findByIdAndUpdate(this.MenuId, {\n        $pull: { Orders: this._id }\n      });\n    }\n\n    // Update bill if needed\n    if (this.BillId) {\n      const Bills = mongoose.model('Bills');\n      await Bills.findByIdAndUpdate(this.BillId, {\n        $pull: { Orders: this._id }\n      });\n    }\n\n\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Pre-deleteMany middleware for multiple documents\nordersSchema.pre('deleteMany', async function(next) {\n  try {\n    const Orders = mongoose.model('Orders');\n    const orders = await Orders.find(this.getFilter());\n\n    if (orders.length > 0) {\n      const menuIds = orders.map(order => order.MenuId).filter(Boolean);\n\n      if (menuIds.length > 0) {\n        const Menus = mongoose.model('Menus');\n        await Menus.updateMany(\n          { _id: { $in: menuIds } },\n          { $pull: { Orders: { $in: orders.map(order => order._id) } } }\n        );\n      }\n    }\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Orders || mongoose.model(\"Orders\", ordersSchema);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2783, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/models/Menus.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport FloatValidator from \"../utils/FloatValidator\";\n\nexport const menusSchema = new mongoose.Schema(\n  {\n    HotelId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Hotels\", // Reference to the `Hotels` collection\n      required: true, // HotelId is mandatory\n    },\n    SectionId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Sections\", // Reference to `Sections` collection\n      required: true,\n    },\n    DishId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Dishes\", // Reference to `Dishes` collection\n      required: true,\n    },\n    Price: {\n      type: Number,\n      required: true, // Price is mandatory\n      validate: {\n        validator: (value) => FloatValidator(value)\n      },\n      message: \"Price must be a non-negative number and must be in decimal format(100.00).\"\n    },\n\n    // Child Relationship\n    Menu: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Orders\", // Reference to `Orders` collection\n      },\n    ],\n  },\n  {\n    timestamps: true, // Automatically manage `createdAt` and `updatedAt` fields\n  }\n);\n\n// Unique constraint on SectionId and DishId\nmenusSchema.index({ SectionId: 1, DishId: 1 }, { unique: true });\n\n// Add pre-remove middleware\nmenusSchema.pre('remove', async function(next) {\n  try {\n    // Delete all related orders\n    const Orders = mongoose.model('Orders');\n    await Orders.deleteMany({ MenuId: this._id });\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Add pre-deleteMany middleware\nmenusSchema.pre('deleteMany', async function(next) {\n  try {\n    // Get the menus that will be deleted\n    const Menus = mongoose.model('Menus');\n    const menus = await Menus.find(this.getFilter());\n    \n    // Get all menu IDs\n    const menuIds = menus.map(menu => menu._id);\n    \n    // Delete all related orders\n    if (menuIds.length > 0) {\n      const Orders = mongoose.model('Orders');\n      await Orders.deleteMany({ MenuId: { $in: menuIds } });\n    }\n    \n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport default mongoose.models.Menus || mongoose.model(\"Menus\", menusSchema);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,cAAc,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAC5C;IACE,SAAS;QACP,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,QAAQ;QACN,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;QACL,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,UAAU;YACR,WAAW,CAAC,QAAU,CAAA,GAAA,8IAAA,CAAA,UAAc,AAAD,EAAE;QACvC;QACA,SAAS;IACX;IAEA,qBAAqB;IACrB,MAAM;QACJ;YACE,MAAM,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACP;KACD;AACH,GACA;IACE,YAAY;AACd;AAGF,4CAA4C;AAC5C,YAAY,KAAK,CAAC;IAAE,WAAW;IAAG,QAAQ;AAAE,GAAG;IAAE,QAAQ;AAAK;AAE9D,4BAA4B;AAC5B,YAAY,GAAG,CAAC,UAAU,eAAe,IAAI;IAC3C,IAAI;QACF,4BAA4B;QAC5B,MAAM,SAAS,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC9B,MAAM,OAAO,UAAU,CAAC;YAAE,QAAQ,IAAI,CAAC,GAAG;QAAC;QAE3C;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;AAEA,gCAAgC;AAChC,YAAY,GAAG,CAAC,cAAc,eAAe,IAAI;IAC/C,IAAI;QACF,qCAAqC;QACrC,MAAM,QAAQ,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;QAC7B,MAAM,QAAQ,MAAM,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS;QAE7C,mBAAmB;QACnB,MAAM,UAAU,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,GAAG;QAE1C,4BAA4B;QAC5B,IAAI,QAAQ,MAAM,GAAG,GAAG;YACtB,MAAM,SAAS,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC;YAC9B,MAAM,OAAO,UAAU,CAAC;gBAAE,QAAQ;oBAAE,KAAK;gBAAQ;YAAE;QACrD;QAEA;IACF,EAAE,OAAO,OAAO;QACd,KAAK;IACP;AACF;uCAEe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS"}},
    {"offset": {"line": 2868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2874, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/lib/crud/Orders.js"],"sourcesContent":["import Orders from \"../models/Orders\";\nimport Bills from \"../models/Bills\";\nimport Menus from \"../models/Menus\";\nimport { BaseCrud } from \"./BaseCrud\";\n\nclass OrdersCrud extends BaseCrud {\n  constructor() {\n    super(Orders)\n  }\n\n  async addOrder(data) {\n    try {\n      const normalizedData = {\n        Quantity: data.quantity,\n        Note: data.note,\n        TotalAmount: data.total_amount,\n        MenuId: data.menu_id,\n        BillId: data.bill_id,\n        Status: data?.status || \"Ordered\",\n        HotelId: data.hotel_id\n      };\n\n      // Check if the menu exists in the bill\n      const menu_exists = await this.readOne({\n        MenuId: data.menu_id,\n        BillId: data.bill_id\n      });\n\n      if (menu_exists && menu_exists.returncode === 200 && menu_exists.output) {\n        // Update existing order\n        const old_quantity = menu_exists.output.Quantity || 0;\n        const old_total = menu_exists.output.TotalAmount || 0;\n        const quantity = old_quantity + data.quantity;\n        const total_amount = old_total + data.total_amount;\n\n        const orderResult = await this.update(\n          { _id: menu_exists.output._id },\n          {\n            Quantity: quantity,\n            TotalAmount: total_amount,\n            Status: data.status || \"Ordered\"\n          },\n          { new: true }\n        );\n\n        return orderResult;\n      } else {\n        // Create new order\n        const orderResult = await this.create(normalizedData);\n\n        if (orderResult.returncode === 200 && orderResult.output) {\n          try {\n            // Update Bill with new order\n            await Bills.findByIdAndUpdate(\n              data.bill_id,\n              { $push: { Orders: orderResult.output._id } },\n              { new: true }\n            );\n\n            // Update Menu with new order\n            await Menus.findByIdAndUpdate(\n              data.menu_id,\n              { $push: { Menu: orderResult.output._id } },\n              { new: true }\n            );\n\n            return orderResult;\n          } catch (error) {\n            console.error('Error updating references:', error);\n            return {\n              returncode: 500,\n              message: \"Failed to update bill or menu references\",\n              output: null\n            };\n          }\n        }\n        return orderResult;\n      }\n    } catch (error) {\n      console.error('Error in addOrder:', error);\n      return {\n        returncode: 500,\n        message: error.message || \"Failed to add order\",\n        output: null\n      };\n    }\n  }\n\n  async readOrders(bill_id) {\n    try {\n      const result = await this.readMany(\n        { BillId: bill_id },\n        {\n          populate: [\n            {\n              path: 'MenuId',\n              populate: {\n                path: 'DishId',\n              }\n            }\n          ]\n        }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async updateOrderStatus(order_id, status) {\n    try {\n      const result = await this.update(\n        { _id: order_id },\n        { Status: status },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async cancelOrder(order_id, reason) {\n    try {\n      const result = await this.update(\n        { _id: order_id },\n        { Reason: reason, Status: \"Cancelled\" },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async undoCancelOrder(order_id, status) {\n    try {\n      const result = await this.update(\n        { _id: order_id },\n        { Status: status, Reason: null },\n        { new: true }\n      );\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n\n  async deleteOrders(filter) {\n    try {\n      // First get the orders to be deleted\n      const ordersToDelete = await this.readMany(filter);\n\n      if (ordersToDelete.returncode === 200 && ordersToDelete.output.length > 0) {\n        const orderIds = ordersToDelete.output.map(order => order._id);\n\n        // Use Promise.all to run updates in parallel\n        await Promise.all([\n          // Remove order references from bills\n          Bills.updateMany(\n            { Orders: { $in: orderIds } },\n            { $pull: { Orders: { $in: orderIds } } }\n          ),\n          // Remove order references from menus\n          Menus.updateMany(\n            { Menu: { $in: orderIds } },\n            { $pull: { Menu: { $in: orderIds } } }\n          )\n        ]);\n\n        // Finally delete the orders\n        const result = await this.delete(filter);\n        return result;\n      }\n\n      return {\n        returncode: 404,\n        message: \"No orders found to delete\",\n        output: []\n      };\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async orderExists(menu_id, bill_id) {\n    try {\n      const result = await this.readOne({ MenuId: menu_id, BillId: bill_id });\n      return result;\n    } catch (error) {\n      return {\n        returncode: 500,\n        message: error.message,\n        output: []\n      };\n    }\n  }\n\n  async SyncOrder({\n    Quantity,\n    Note,\n    TotalAmount,\n    MenuId,\n    bill_id,\n    Status,\n    HotelId\n  }) {\n    try {\n      // Create new order\n      const orderResult = await this.create({\n        Quantity: Quantity,\n        Note: Note,\n        TotalAmount: TotalAmount,\n        MenuId: MenuId,\n        BillId: bill_id,\n        Status: Status,\n        HotelId: HotelId\n      });\n      if (orderResult.returncode === 200 && orderResult.output) {\n        try {\n          // Update Bill with new order\n          await Bills.findByIdAndUpdate(\n            bill_id,\n            { $push: { Orders: orderResult.output._id } },\n            { new: true }\n          );\n          return orderResult;\n        } catch (error) {\n          console.error('Error updating references:', error);\n          return {\n            returncode: 500,\n            message: \"Failed to update bill or menu references\",\n            output: null\n          };\n        }\n      }\n      return orderResult;\n    } catch (error) {\n      console.error('Error in addOrder:', error);\n      return {\n        returncode: 500,\n        message: error.message || \"Failed to add order\",\n        output: null\n      };\n    }\n  }\n\n}\n\nconst ordersCrud = new OrdersCrud();\nexport default ordersCrud;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3158, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/api/hotel/bills/add/controller.js"],"sourcesContent":["import billsCrud from \"@/app/lib/crud/Bills\";\nimport customerCrud from \"@/app/lib/crud/Customers\";\nimport ordersCrud from \"@/app/lib/crud/Orders\";\n\nexport async function add_whole_bill(data, tokenData) {\n    try {\n\n        // Verify if user has permission to create hotels\n        if (!tokenData || !tokenData.hotelId || !tokenData.role || !tokenData.hotelId || !['Backoffice', 'Owner'].includes(tokenData.role)) {\n            return {\n                returncode: 403,\n                message: \"Insufficient permissions to create hotel\",\n                output: []\n            };\n        }\n\n        // CRM params\n        let customer_name = data['customer_name'] || null;\n        let contact = data['contact'] || null;\n        const email = data['email'] || null;\n        const birthday = data['birthday'] || null;\n        const anniversary = data['anniversary'] || null;\n        const apartment = data['apartment'] || null;\n        const street_address = data['street_address'] || null;\n        const landmark = data['landmark'] || null;\n        const city = data['city'] || null;\n        const state = data['state'] || null;\n        const zip_code = data['zip_code'] || null;\n\n        // Order Params\n        const type = data['type'] || null;\n        const table_id = data['table_id'] || null;\n        const waiter_id = data['waiter_id'] || null;\n        const hotel_id = tokenData.hotelId || null;\n        const menu_data = data['menu_data'] || null;\n\n        // Default Invalid Checker\n        if (hotel_id === null || type === null || menu_data === null) {\n            return {\n                returncode: 400,\n                message: \"Missing required parameters\",\n                output: []\n            };\n        }\n\n        // If the customer exists taking its id else Creating new one\n        let customer_id = null;\n        if (customer_name !== null) {\n            const customer_exists = await customerCrud.checkCustomer(customer_name, contact, hotel_id);\n            if (customer_exists.returncode !== 200 || (customer_exists.output.length === 0 || customer_exists.output === null)) {\n\n                const customerData = {\n                    customer_name,\n                    contact,\n                    email,\n                    street_address,\n                    apartment,\n                    landmark,\n                    city,\n                    state,\n                    zip_code,\n                    birthday,\n                    anniversary,\n                    hotel_id\n                };\n                const customer_result = await customerCrud.createCustomer(customerData);\n                customer_id = customer_result.output._id;\n            }\n            else {\n                customer_id = customer_exists.output._id;\n            }\n        }\n\n        // Creating new bill\n        let bill_id;\n        const billData = {\n            hotel_id,\n            customer_id,\n            waiter_id,\n            table_id,\n            type\n        };\n\n        const bill_result = await billsCrud.createBill(billData);\n        bill_id = bill_result.output._id;\n\n\n        // Finally Adding Orders\n        let error_flag = false;\n        await menu_data.forEach(async (order) => {\n            const quantity = order.quantity;\n            const note = order.note;\n            const total_amount = order.total_amount;\n            const menu_id = order.menu_id;\n            const status = order.status || \"Ordered\";\n\n            const order_result = await ordersCrud.addOrder({\n                quantity, note, status, total_amount, menu_id, bill_id, hotel_id\n            });\n            if (order_result.returncode !== 200) {\n                error_flag = true;\n            }\n        });\n\n        if (!error_flag) {\n            return {\n                returncode: 200,\n                message: \"Bill Created.\",\n                output: [{ success: true }]\n            }\n        } else {\n            return {\n                returncode: 500,\n                message: \"Error creating Bill in some sections\",\n                output: []\n            }\n        }\n\n    } catch (error) {\n        return {\n            returncode: 500,\n            message: error.message || \"Internal server error\",\n            output: []\n        };\n    }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3294, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/api/hotel/bills/add/route.js"],"sourcesContent":["import { verifyToken } from '@/app/lib/utils/jwt';\nimport { add_whole_bill } from './controller';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request) {\n\ttry {\n\n\t\t// Get token from cookie\n\t\tlet token = request.cookies.get('hotel_auth_token')?.value;\n\t\tif (!token) {\n\t\t\treturn NextResponse.json({\n\t\t\t\treturncode: 401,\n\t\t\t\tmessage: \"No token provided\",\n\t\t\t\toutput: []\n\t\t\t}, { status: 401, statusText: \"No token provided\" });\n\t\t}\n\n\t\t// Verify the token\n\t\tconst userData = verifyToken(token);\n\t\tif (!userData) {\n\t\t\treturn NextResponse.json({\n\t\t\t\treturncode: 401,\n\t\t\t\tmessage: \"Invalid or expired token\",\n\t\t\t\toutput: []\n\t\t\t}, { status: 401, statusText: \"Invalid or expired token\" });\n\t\t}\n\n\t\tconst data = await request.json();\n\t\tconst result = await add_whole_bill(data, userData);\n\n\t\treturn NextResponse.json({\n\t\t\treturncode: result.returncode,\n\t\t\tmessage: result.message,\n\t\t\toutput: result.output\n\t\t}, {\n\t\t\tstatus: result.returncode,\n\t\t});\n\t} catch (error) {\n\t\treturn NextResponse.json(\n\t\t\t{\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t},\n\t\t\t{ status: 500 }\n\t\t);\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAO;IACjC,IAAI;QAEH,wBAAwB;QACxB,IAAI,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,qBAAqB;QACrD,IAAI,CAAC,OAAO;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACxB,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACX,GAAG;gBAAE,QAAQ;gBAAK,YAAY;YAAoB;QACnD;QAEA,mBAAmB;QACnB,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,IAAI,CAAC,UAAU;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACxB,YAAY;gBACZ,SAAS;gBACT,QAAQ,EAAE;YACX,GAAG;gBAAE,QAAQ;gBAAK,YAAY;YAA2B;QAC1D;QAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,0JAAA,CAAA,iBAAc,AAAD,EAAE,MAAM;QAE1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACxB,YAAY,OAAO,UAAU;YAC7B,SAAS,OAAO,OAAO;YACvB,QAAQ,OAAO,MAAM;QACtB,GAAG;YACF,QAAQ,OAAO,UAAU;QAC1B;IACD,EAAE,OAAO,OAAO;QACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YACC,YAAY;YACZ,SAAS,MAAM,OAAO;YACtB,QAAQ,EAAE;QACX,GACA;YAAE,QAAQ;QAAI;IAEhB;AACD"}},
    {"offset": {"line": 3348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}