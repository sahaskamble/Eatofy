{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/services/db.js"],"sourcesContent":["import { openDB } from 'idb';\n\nconst DB_NAME = 'Eatofy';\nconst DB_VERSION = 1;\nconst STORES = {\n\tBills: 'Bills',\n\tCustomers: 'Customers',\n\tMenus: 'Menus',\n\tSections: 'Sections',\n\tStaffs: 'Staffs',\n\tTables: 'Tables',\n\tOrders: 'Orders',\n\tGSTSettings: 'GSTSettings',\n\tVATSettings: 'VATSettings',\n\tEatoCoinsSettings: 'EatoCoinsSettings',\n\tMenuCategory: 'MenuCategory',\n};\n\nclass DatabaseService {\n\tconstructor() {\n\t\tthis.dbPromise = openDB(DB_NAME, DB_VERSION, {\n\t\t\tupgrade(db) {\n\t\t\t\tObject.values(STORES).forEach((storeName) => {\n\t\t\t\t\tif (!db.objectStoreNames.contains(storeName)) {\n\t\t\t\t\t\tconst store = db.createObjectStore(storeName, { keyPath: '_id' });\n\t\t\t\t\t\tswitch (storeName) {\n\t\t\t\t\t\t\tcase 'Bills':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('synced', 'synced', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('TableId', 'TableId', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Customers':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('synced', 'synced', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('CustomerName', 'CustomerName', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Contact', 'Contact', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Menus':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('SectionId', 'SectionId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Type', 'Type', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Sections':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Type', 'Type', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Staffs':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Email', 'Email', { unique: true });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Tables':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('SectionId', 'SectionId', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'Orders':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('synced', 'synced', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('BillId', 'BillId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('MenuId', 'MenuId', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'GSTSettings':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Visibility', 'Visibility', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'VATSettings':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Visibility', 'Visibility', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'EatoCoinsSettings':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tstore.createIndex('Visibility', 'Visibility', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'MenuCategory':\n\t\t\t\t\t\t\t\tstore.createIndex('_id', '_id', { unique: true });\n\t\t\t\t\t\t\t\tstore.createIndex('HotelId', 'HotelId', { unique: false });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n\n\tasync getStore(storeName, mode = 'readonly') {\n\t\tif (!this.dbPromise) {\n\t\t\tthrow new Error('Database is not initialized');\n\t\t}\n\t\tconst db = await this.dbPromise;\n\t\treturn db.transaction(storeName, mode).objectStore(storeName);\n\t}\n\n\t// Generic Add Method\n\tasync add(storeName, data) {\n\t\ttry {\n\t\t\tconst store = await this.getStore(storeName, 'readwrite');\n\t\t\tconst item = {\n\t\t\t\t_id: crypto.randomUUID(),\n\t\t\t\t...data,\n\t\t\t\tcreatedAt: new Date().toISOString(),\n\t\t\t\tupdatedAt: new Date().toISOString(),\n\t\t\t\tsynced: 0,\n\t\t\t};\n\t\t\tawait store.add(item);\n\t\t\treturn {\n\t\t\t\treturncode: 200,\n\t\t\t\tmessage: `${storeName.slice(0, -1)} Created Successfully (Offline)`,\n\t\t\t\toutput: item,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t}\n\t}\n\n\t// Generic Get by Filter Method\n\tasync getByFilter(storeName, filterKey, filterValue) {\n\t\ttry {\n\t\t\tconst store = await this.getStore(storeName);\n\n\t\t\t// Check if the filterKey is multilevel (contains dots)\n\t\t\tlet result;\n\t\t\tif (filterKey.includes('.')) {\n\t\t\t\t// Handle multilevel keys\n\t\t\t\tresult = await this.getByNestedKey(store, filterKey, filterValue);\n\t\t\t} else {\n\t\t\t\t// Handle simple keys\n\t\t\t\tconst index = store.index(filterKey);\n\t\t\t\tresult = await index.getAll(filterValue);\n\t\t\t}\n\n\t\t\tif (result.length === 0) {\n\t\t\t\treturn {\n\t\t\t\t\treturncode: 404,\n\t\t\t\t\tmessage: \"Not Found.\",\n\t\t\t\t\toutput: []\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn {\n\t\t\t\treturncode: 200,\n\t\t\t\tmessage: `${storeName} Fetched Successfully (Offline)`,\n\t\t\t\toutput: result,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t}\n\t}\n\n\t// Helper function to handle nested keys\n\tasync getByNestedKey(store, filterKey, filterValue) {\n\t\tconst keys = filterKey.split('.'); // Split the filterKey into levels\n\t\tconst allItems = await store.getAll(); // Get all items from the store\n\t\treturn allItems.filter((item) =>\n\t\t\tkeys.reduce((nested, key) => (nested && nested[key] !== undefined ? nested[key] : null), item) === filterValue\n\t\t);\n\t}\n\n\t// Generic Update Method\n\tasync update(storeName, id, data) {\n\t\ttry {\n\t\t\tconst store = await this.getStore(storeName, 'readwrite');\n\t\t\tconst item = await store.get(id);\n\t\t\tif (!item) {\n\t\t\t\treturn {\n\t\t\t\t\treturncode: 404,\n\t\t\t\t\tmessage: `${storeName.slice(0, -1)} not found`,\n\t\t\t\t\toutput: [],\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst updatedItem = {\n\t\t\t\t...item,\n\t\t\t\t...data,\n\t\t\t\tupdatedAt: new Date().toISOString(),\n\t\t\t\tsynced: 0,\n\t\t\t};\n\t\t\tawait store.put(updatedItem);\n\t\t\treturn {\n\t\t\t\treturncode: 200,\n\t\t\t\tmessage: `${storeName.slice(0, -1)} Updated Successfully (Offline)`,\n\t\t\t\toutput: updatedItem,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t}\n\t}\n\n\t// Generic Delete Method\n\tasync delete(storeName, id) {\n\t\ttry {\n\t\t\tconst store = await this.getStore(storeName, 'readwrite');\n\t\t\tawait store.delete(id);\n\t\t\treturn {\n\t\t\t\treturncode: 200,\n\t\t\t\tmessage: `${storeName.slice(0, -1)} Deleted Successfully (Offline)`,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t}\n\t}\n\n\t// Bulk Update Method - For syncing data from server\n\tasync bulkUpdate(storeName, items) {\n\t\ttry {\n\t\t\tconst store = await this.getStore(storeName, 'readwrite');\n\t\t\tfor (const item of items) {\n\t\t\t\tawait store.put({\n\t\t\t\t\t...item,\n\t\t\t\t\tsynced: 1, // Mark as synced\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn {\n\t\t\t\treturncode: 200,\n\t\t\t\tmessage: `Bulk updated ${items.length} items in ${storeName}`,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: [],\n\t\t\t};\n\t\t}\n\t}\n\n\t// Syncs data from the server (MongoDB) to a specific store in IndexedDB.\n\tasync syncFromServer(storeName) {\n\t\ttry {\n\t\t\t// Fetch updated records from the server via API\n\t\t\tconst response = await fetch(`/api/sync/${storeName}/pull`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst result = await response.json();\n\t\t\t\t// Apply fetched data to IndexedDB\n\t\t\t\tawait this.applyServerUpdates(storeName, result.output);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(`Error pulling ${storeName}:`, error);\n\t\t}\n\t}\n\n\t// Sync local changes in IndexedDB to MongoDB.\n\tasync syncToServer(storeName, retries = 3, delay = 1000) {\n\t\ttry {\n\t\t\t// Fetch unsynced records from IndexedDB\n\t\t\tconst unsyncedRecords = await this.getUnsyncedRecords(storeName);\n\t\t\tif (unsyncedRecords.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Push unsynced records to the server via API\n\t\t\tconst response = await fetch(`/api/sync/${storeName}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ data: unsyncedRecords }),\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst result = await response.json();\n\n\t\t\t\t// Mark records as synced in IndexedDB\n\t\t\t\tawait this.markAsSynced(storeName, result.syncedIds);\n\t\t\t\tconsole.log(`Successfully synced ${storeName} to server.`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (retries > 0) {\n\t\t\t\tawait new Promise(res => setTimeout(res, delay));\n\t\t\t\treturn this.syncToServer(storeName, retries - 1, delay * 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Syncing Stores\n\tasync syncStore(storeName) {\n\t\tawait this.syncToServer(storeName);\n\t\tawait this.syncFromServer(storeName);\n\t}\n\n\t// Initial Syncing\n\tasync initialSync() {\n\t\tconst stores = Object.keys(STORES);\n\t\tfor (const storeName of stores) {\n\t\t\tawait this.syncStore(storeName);\n\t\t}\n\t}\n\n\t/*\n\t * Supporting Functions \n\t*/\n\t// Retrieve unsynced records from a specific store.\n\tasync getUnsyncedRecords(storeName) {\n\t\tconst store = await this.getStore(storeName, 'readonly');\n\t\treturn store.index('synced').getAll(0);\n\t}\n\n\t// Mark records as synced in IndexedDB.\n\tasync markAsSynced(storeName, syncedIds) {\n\t\tconst store = await this.getStore(storeName, 'readwrite');\n\t\tconst tx = store.transaction;\n\t\tfor (const id of syncedIds) {\n\t\t\tconst record = await store.get(id);\n\t\t\tif (record) {\n\t\t\t\tawait store.delete(record);\n\t\t\t}\n\t\t}\n\t\tawait tx.done;\n\t}\n\n\t// Applies server-side updates to a specific store in IndexedDB.\n\tasync applyServerUpdates(storeName, data) {\n\t\tconst store = await this.getStore(storeName, 'readwrite');\n\t\tconst tx = store.transaction;\n\t\tawait data.map(async (record) => {\n\t\t\tawait store.put({\n\t\t\t\t...record,\n\t\t\t\tsynced: 1, // Mark as synced\n\t\t\t\tupdatedAt: new Date().toISOString(),\n\t\t\t});\n\t\t})\n\t\tawait tx.done;\n\t}\n\n}\n\nconst offlineDB = new DatabaseService();\nexport default offlineDB; \n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/BaseCrud.js"],"sourcesContent":["import offlineDB from \"../services/db\";\n\nexport class OfflineBaseCrud {\n\tconstructor(storeName) {\n\t\tthis.storeName = storeName;\n\t\tthis.db = offlineDB;\n\t}\n\n\t// Create a new record\n\tasync create(data) {\n\t\ttry {\n\t\t\tconst result = await this.db.add(this.storeName, data);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\t// Read records with optional filters\n\tasync read(filterKey, filterValue) {\n\t\ttry {\n\t\t\tconst result = await this.db.getByFilter(this.storeName, filterKey, filterValue);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\t// Update a record\n\tasync update(id, data) {\n\t\ttry {\n\t\t\tconst result = await this.db.update(this.storeName, id, data);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\t// Delete a record\n\tasync delete(id) {\n\t\ttry {\n\t\t\tconst result = await this.db.delete(this.storeName, id);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\t// Delete Every Record\n\tasync deleteEverything() {\n\t\ttry {\n\t\t\tconst result = await this.db.clear(this.storeName);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\n\t// Bulk update records (e.g., after syncing)\n\tasync bulkUpdate(items) {\n\t\ttry {\n\t\t\tconst result = await this.db.bulkUpdate(this.storeName, items);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\t// Sync unsynced records from IndexedDB to MongoDB for this store. Pushes local changes to the server.\n\tasync syncToServer() {\n\t\ttry {\n\t\t\tconst result = await this.db.syncToServer(this.storeName);\n\t\t\treturn { returncode: 200, message: \"Synced to Server Successfully\", output: result };\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n\n\t// Fetch updates from MongoDB and apply them to IndexedDB for this store. Pulls server-side changes to the local database.\n\tasync syncFromServer() {\n\t\ttry {\n\t\t\tconst result = await this.db.syncFromServer(this.storeName);\n\t\t\treturn { returncode: 200, message: \"Synced from Server Successfully\", output: result };\n\t\t} catch (err) {\n\t\t\treturn { returncode: 500, message: err.message, output: [] };\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM;IACZ,YAAY,SAAS,CAAE;QACtB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,EAAE,GAAG,0IAAA,CAAA,UAAS;IACpB;IAEA,sBAAsB;IACtB,MAAM,OAAO,IAAI,EAAE;QAClB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;YACjD,OAAO;QACR,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAEA,qCAAqC;IACrC,MAAM,KAAK,SAAS,EAAE,WAAW,EAAE;QAClC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW;YACpE,OAAO;QACR,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAEA,kBAAkB;IAClB,MAAM,OAAO,EAAE,EAAE,IAAI,EAAE;QACtB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI;YACxD,OAAO;QACR,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAEA,kBAAkB;IAClB,MAAM,OAAO,EAAE,EAAE;QAChB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;YACpD,OAAO;QACR,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAEA,sBAAsB;IACtB,MAAM,mBAAmB;QACxB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;YACjD,OAAO;QACR,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAGA,4CAA4C;IAC5C,MAAM,WAAW,KAAK,EAAE;QACvB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE;YACxD,OAAO;QACR,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAEA,sGAAsG;IACtG,MAAM,eAAe;QACpB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS;YACxD,OAAO;gBAAE,YAAY;gBAAK,SAAS;gBAAiC,QAAQ;YAAO;QACpF,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;IAEA,0HAA0H;IAC1H,MAAM,iBAAiB;QACtB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS;YAC1D,OAAO;gBAAE,YAAY;gBAAK,SAAS;gBAAmC,QAAQ;YAAO;QACtF,EAAE,OAAO,KAAK;YACb,OAAO;gBAAE,YAAY;gBAAK,SAAS,IAAI,OAAO;gBAAE,QAAQ,EAAE;YAAC;QAC5D;IACD;AACD"}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/Customers.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass CustomersCrud extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('Customers');\n\t}\n\n\n\tasync createCustomer({ customer_id = null, customer_name, email, contact, hotel_id, street_address, apartment, city, state, landmark, zip_code, birthday, anniversary }) {\n\t\ttry {\n\t\t\tconst normalizedData = {\n\t\t\t\tCustomerName: customer_name,\n\t\t\t\tEmail: email || null,\n\t\t\t\tContact: contact,\n\t\t\t\tHotelId: hotel_id,\n\t\t\t\t// Detailed address fields\n\t\t\t\tStreetAddress: street_address || null,\n\t\t\t\tApartment: apartment || null,\n\t\t\t\tCity: city || null,\n\t\t\t\tState: state || null,\n\t\t\t\tLandmark: landmark || null,\n\t\t\t\tZipCode: zip_code || null,\n\t\t\t\tBirthday: birthday || null,\n\t\t\t\tAnniversary: anniversary || null\n\t\t\t};\n\n\t\t\tconst exists = await this.read({\n\t\t\t\tCustomerName: customer_name,\n\t\t\t\tContact: contact,\n\t\t\t\tHotelId: hotel_id\n\t\t\t});\n\n\t\t\tif (exists.output.length > 0) {\n\t\t\t\tconst updateData = {\n\t\t\t\t\tCustomerName: customer_name,\n\t\t\t\t\tEmail: email || null,\n\t\t\t\t\tContact: contact,\n\t\t\t\t\tStreetAddress: street_address || null,\n\t\t\t\t\tApartment: apartment || null,\n\t\t\t\t\tCity: city || null,\n\t\t\t\t\tState: state || null,\n\t\t\t\t\tLandmark: landmark || null,\n\t\t\t\t\tZipCode: zip_code || null,\n\t\t\t\t\tBirthday: birthday || null,\n\t\t\t\t\tAnniversary: anniversary || null\n\t\t\t\t};\n\n\t\t\t\treturn await this.update(customer_id, updateData);\n\t\t\t}\n\n\t\t\treturn await this.create(normalizedData);\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync readCustomers(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\n}\n\nconst customersCrud = new CustomersCrud();\nexport default customersCrud;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,sBAAsB,4IAAA,CAAA,kBAAe;IAC1C,aAAc;QACb,KAAK,CAAC;IACP;IAGA,MAAM,eAAe,EAAE,cAAc,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE;QACxK,IAAI;YACH,MAAM,iBAAiB;gBACtB,cAAc;gBACd,OAAO,SAAS;gBAChB,SAAS;gBACT,SAAS;gBACT,0BAA0B;gBAC1B,eAAe,kBAAkB;gBACjC,WAAW,aAAa;gBACxB,MAAM,QAAQ;gBACd,OAAO,SAAS;gBAChB,UAAU,YAAY;gBACtB,SAAS,YAAY;gBACrB,UAAU,YAAY;gBACtB,aAAa,eAAe;YAC7B;YAEA,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC;gBAC9B,cAAc;gBACd,SAAS;gBACT,SAAS;YACV;YAEA,IAAI,OAAO,MAAM,CAAC,MAAM,GAAG,GAAG;gBAC7B,MAAM,aAAa;oBAClB,cAAc;oBACd,OAAO,SAAS;oBAChB,SAAS;oBACT,eAAe,kBAAkB;oBACjC,WAAW,aAAa;oBACxB,MAAM,QAAQ;oBACd,OAAO,SAAS;oBAChB,UAAU,YAAY;oBACtB,SAAS,YAAY;oBACrB,UAAU,YAAY;oBACtB,aAAa,eAAe;gBAC7B;gBAEA,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa;YACvC;YAEA,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC;QAC1B,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,cAAc,QAAQ,EAAE;QAC7B,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AAGD;AAEA,MAAM,gBAAgB,IAAI;uCACX"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/Menus.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass MenusCrud extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('Menus');\n\t}\n\n\tasync readMenus(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync readMenusBySectionId(section_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('SectionId._id', section_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\t// Takeaway\n\tasync readTakeawayMenus() {\n\t\ttry {\n\n\t\t\tconst result = await this.read(\"SectionId.Type\", \"Takeaway\");\n\n\t\t\treturn result;\n\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\t// Delivery\n\tasync readDeliveryMenus() {\n\t\ttry {\n\n\t\t\tconst result = await this.read(\"SectionId.Type\", \"Delivery\");\n\n\t\t\treturn result;\n\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\t// Swiggy\n\tasync readSwiggyMenus() {\n\t\ttry {\n\n\t\t\tconst result = await this.read(\"SectionId.Type\", \"Swiggy\");\n\n\t\t\treturn result;\n\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\t// Zomto\n\tasync readZomatoMenus() {\n\t\ttry {\n\n\t\t\tconst result = await this.read(\"SectionId.Type\", \"Zomato\");\n\n\t\t\treturn result;\n\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\t// QR Menus\n\tasync readQRMenus() {\n\t\ttry {\n\n\t\t\tconst result = await this.read(\"SectionId.Type\", \"QR-Orders\");\n\n\t\t\treturn result;\n\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n}\n\nconst menusCrud = new MenusCrud();\nexport default menusCrud;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB,4IAAA,CAAA,kBAAe;IACtC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,UAAU,QAAQ,EAAE;QACzB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,qBAAqB,UAAU,EAAE;QACtC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAChD,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,WAAW;IACX,MAAM,oBAAoB;QACzB,IAAI;YAEH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAEjD,OAAO;QAER,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,WAAW;IACX,MAAM,oBAAoB;QACzB,IAAI;YAEH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAEjD,OAAO;QAER,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,SAAS;IACT,MAAM,kBAAkB;QACvB,IAAI;YAEH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAEjD,OAAO;QAER,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,QAAQ;IACR,MAAM,kBAAkB;QACvB,IAAI;YAEH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAEjD,OAAO;QAER,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,WAAW;IACX,MAAM,cAAc;QACnB,IAAI;YAEH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB;YAEjD,OAAO;QAER,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AAED;AAEA,MAAM,YAAY,IAAI;uCACP"}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/MenuCategory.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass MenuCategory extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('MenuCategory');\n\t}\n\n\tasync readMenuCategories(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst menuCategoryCrud = new MenuCategory();\nexport default menuCategoryCrud;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB,4IAAA,CAAA,kBAAe;IACzC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,mBAAmB,QAAQ,EAAE;QAClC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AACD;AAEA,MAAM,mBAAmB,IAAI;uCACd"}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/Sections.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass SectionsCrud extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('Sections');\n\t}\n\n\tasync readAllSections(hotel_id) {\n\t\ttry {\n\n\t\t\tconst sections = await this.read('HotelId', hotel_id);\n\t\t\treturn sections;\n\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nconst sectionsCrud = new SectionsCrud();\nexport default sectionsCrud; \n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB,4IAAA,CAAA,kBAAe;IACzC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,gBAAgB,QAAQ,EAAE;QAC/B,IAAI;YAEH,MAAM,WAAW,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC5C,OAAO;QAER,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AAED;AAEA,MAAM,eAAe,IAAI;uCACV"}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/EatoCoinsSettings.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass EatoCoinsSettings extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('EatoCoinsSettings');\n\t}\n\n\tasync readSettings(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst eatoCoinsSettingsCrud = new EatoCoinsSettings();\nexport default eatoCoinsSettingsCrud;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,0BAA0B,4IAAA,CAAA,kBAAe;IAC9C,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC5B,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AACD;AAEA,MAAM,wBAAwB,IAAI;uCACnB"}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/GSTSettings.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass GSTSettings extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('GSTSettings');\n\t}\n\n\tasync readSettings(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst gstSettingsCrud = new GSTSettings();\nexport default gstSettingsCrud\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB,4IAAA,CAAA,kBAAe;IACxC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC5B,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AACD;AAEA,MAAM,kBAAkB,IAAI;uCACb"}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/Orders.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\nimport menusCrud from \"./Menus\";\n\nclass OrdersCrud extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('Orders');\n\t}\n\n\tasync addOrder({ quantity, note, total_amount, menu_id, bill_id, status = \"Ordered\", hotel_id }) {\n\t\ttry {\n\n\t\t\t// Validate required parameters\n\t\t\tif (!quantity || !menu_id || !bill_id || !hotel_id) {\n\t\t\t\treturn {\n\t\t\t\t\treturncode: 400,\n\t\t\t\t\tmessage: \"Missing required parameters for adding an order.\",\n\t\t\t\t\toutput: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst menu_info = await menusCrud.read('_id', menu_id);\n\n\t\t\tconst normalizedData = {\n\t\t\t\tQuantity: quantity,\n\t\t\t\tNote: note,\n\t\t\t\tTotalAmount: total_amount,\n\t\t\t\tMenuId: menu_info.output[0],\n\t\t\t\tBillId: bill_id,\n\t\t\t\tStatus: status,\n\t\t\t\tHotelId: hotel_id\n\t\t\t};\n\n\n\t\t\t// Check if the order exists for the given MenuId and BillId\n\t\t\tconst order_exists = await this.read('MenuId._id', menu_id)\n\t\t\t\t.then(result => result.output.filter(order => order.BillId === bill_id));\n\n\t\t\tif (order_exists.length > 0) {\n\t\t\t\t// Update existing order\n\t\t\t\tconst existingOrder = order_exists[0];\n\t\t\t\tconst updatedQuantity = (existingOrder.Quantity || 0) + quantity;\n\t\t\t\tconst updatedTotalAmount = (existingOrder.TotalAmount || 0) + total_amount;\n\n\t\t\t\tconst orderResult = await this.update(existingOrder._id, {\n\t\t\t\t\tQuantity: updatedQuantity,\n\t\t\t\t\tTotalAmount: updatedTotalAmount,\n\t\t\t\t\tStatus: status\n\t\t\t\t});\n\t\t\t\treturn orderResult;\n\t\t\t} else {\n\n\t\t\t\t// Create new order\n\t\t\t\tconst orderResult = await this.create(normalizedData);\n\t\t\t\treturn orderResult;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error in addOrder:', error);\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message || \"Failed to add order\",\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync readOrders(bill_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('BillId', bill_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync updateOrderStatus(order_id, status) {\n\t\ttry {\n\t\t\tconst result = await this.update(order_id, { Status: status });\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync cancelOrder(order_id, reason) {\n\t\ttry {\n\t\t\tconst result = await this.update(order_id, { Reason: reason, Status: \"Cancelled\" });\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync undoCancelOrder(order_id, status) {\n\t\ttry {\n\t\t\tconst result = await this.update(order_id, { Status: status, Reason: null });\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n}\n\nconst ordersCrud = new OrdersCrud();\nexport default ordersCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,mBAAmB,4IAAA,CAAA,kBAAe;IACvC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,SAAS,EAAE,QAAQ,EAAE,EAAE;QAChG,IAAI;YAEH,+BAA+B;YAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU;gBACnD,OAAO;oBACN,YAAY;oBACZ,SAAS;oBACT,QAAQ,EAAE;gBACX;YACD;YAEA,MAAM,YAAY,MAAM,yIAAA,CAAA,UAAS,CAAC,IAAI,CAAC,OAAO;YAE9C,MAAM,iBAAiB;gBACtB,UAAU;gBACV,MAAM;gBACN,aAAa;gBACb,QAAQ,UAAU,MAAM,CAAC,EAAE;gBAC3B,QAAQ;gBACR,QAAQ;gBACR,SAAS;YACV;YAGA,4DAA4D;YAC5D,MAAM,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,SACjD,IAAI,CAAC,CAAA,SAAU,OAAO,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,MAAM,KAAK;YAEhE,IAAI,aAAa,MAAM,GAAG,GAAG;gBAC5B,wBAAwB;gBACxB,MAAM,gBAAgB,YAAY,CAAC,EAAE;gBACrC,MAAM,kBAAkB,CAAC,cAAc,QAAQ,IAAI,CAAC,IAAI;gBACxD,MAAM,qBAAqB,CAAC,cAAc,WAAW,IAAI,CAAC,IAAI;gBAE9D,MAAM,cAAc,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,EAAE;oBACxD,UAAU;oBACV,aAAa;oBACb,QAAQ;gBACT;gBACA,OAAO;YACR,OAAO;gBAEN,mBAAmB;gBACnB,MAAM,cAAc,MAAM,IAAI,CAAC,MAAM,CAAC;gBACtC,OAAO;YACR;QACD,EAAE,OAAO,OAAO;YACf,QAAQ,KAAK,CAAC,sBAAsB;YACpC,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO,IAAI;gBAC1B,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,WAAW,OAAO,EAAE;QACzB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU;YACzC,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,kBAAkB,QAAQ,EAAE,MAAM,EAAE;QACzC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU;gBAAE,QAAQ;YAAO;YAC5D,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,YAAY,QAAQ,EAAE,MAAM,EAAE;QACnC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU;gBAAE,QAAQ;gBAAQ,QAAQ;YAAY;YACjF,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,gBAAgB,QAAQ,EAAE,MAAM,EAAE;QACvC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU;gBAAE,QAAQ;gBAAQ,QAAQ;YAAK;YAC1E,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AAED;AAEA,MAAM,aAAa,IAAI;uCACR"}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/VATSettings.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\n\nclass VATSettings extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('VATSettings');\n\t}\n\n\tasync readSettings(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst vatSettingsCrud = new VATSettings();\nexport default vatSettingsCrud;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB,4IAAA,CAAA,kBAAe;IACxC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,aAAa,QAAQ,EAAE;QAC5B,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AACD;AAEA,MAAM,kBAAkB,IAAI;uCACb"}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1045, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/Bills.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\nimport customersCrud from \"./Customers\";\nimport eatoCoinsSettingsCrud from \"./EatoCoinsSettings\";\nimport gstSettingsCrud from \"./GSTSettings\";\nimport ordersCrud from \"./Orders\";\nimport tablesCrud from \"./Tables\";\nimport vatSettingsCrud from \"./VATSettings\";\n\nclass BillsCrud extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper('Bills');\n\t}\n\n\tasync createBill({\n\t\tcustomer_name = null,\n\t\tcontact = null,\n\t\temail = null,\n\t\tbirthday = null,\n\t\tanniversary = null,\n\t\tapartment = null,\n\t\tstreet_address = null,\n\t\tlandmark = null,\n\t\tcity = null,\n\t\tstate = null,\n\t\tzip_code = null,\n\t\ttype = null,\n\t\ttable_id = null,\n\t\twaiter_id = null,\n\t\thotel_id = null,\n\t\tmenu_data = null\n\t}) {\n\t\ttry {\n\n\t\t\t// Default Invalid Checker\n\t\t\tif (hotel_id === null || type === null || menu_data === null) {\n\t\t\t\treturn {\n\t\t\t\t\treturncode: 400,\n\t\t\t\t\tmessage: \"Missing required parameters\",\n\t\t\t\t\toutput: []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If the customer exists taking its id else Creating new one\n\t\t\tlet customer_id = null; let customers = [];\n\t\t\tif (customer_name !== null) {\n\t\t\t\tconst customerData = {\n\t\t\t\t\tcustomer_name,\n\t\t\t\t\tcontact,\n\t\t\t\t\temail,\n\t\t\t\t\tstreet_address,\n\t\t\t\t\tapartment,\n\t\t\t\t\tlandmark,\n\t\t\t\t\tcity,\n\t\t\t\t\tstate,\n\t\t\t\t\tzip_code,\n\t\t\t\t\tbirthday,\n\t\t\t\t\tanniversary,\n\t\t\t\t\thotel_id\n\t\t\t\t};\n\t\t\t\tconst customer_result = await customersCrud.createCustomer(customerData);\n\t\t\t\tif (customer_result.returncode === 200) {\n\t\t\t\t\tcustomers = customer_result.output\n\t\t\t\t\tcustomer_id = customer_result.output?._id || \"\";\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Creating new bill\n\t\t\tlet bill_id;\n\t\t\tconst billData = {\n\t\t\t\tType: type,\n\t\t\t\tTableId: table_id,\n\t\t\t\tWaiterId: waiter_id,\n\t\t\t\tHotelId: hotel_id,\n\t\t\t\tCustomerId: customer_id,\n\t\t\t\tCustomers: customers,\n\t\t\t\tOrders: []\n\t\t\t};\n\n\t\t\tconst bill_result = await this.create(billData);\n\t\t\tbill_id = bill_result.output._id;\n\n\t\t\tlet error_flag = false;\n\n\t\t\tif (bill_result.returncode === 200) {\n\t\t\t\t// If table is assigned, update its status\n\t\t\t\tif (table_id) {\n\t\t\t\t\tawait tablesCrud.update(table_id, { Status: \"Booked\" });\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\terror_flag = true\n\t\t\t}\n\n\n\t\t\tconst OUTPUT = [];\n\t\t\tfor (const order of menu_data) {\n\t\t\t\tconst { quantity, note, total_amount, menu_id, status = \"Ordered\" } = order;\n\n\t\t\t\tconst order_result = await ordersCrud.addOrder({\n\t\t\t\t\tquantity,\n\t\t\t\t\tnote,\n\t\t\t\t\ttotal_amount,\n\t\t\t\t\tmenu_id,\n\t\t\t\t\tbill_id,\n\t\t\t\t\tstatus,\n\t\t\t\t\thotel_id\n\t\t\t\t});\n\n\t\t\t\tif (order_result.returncode === 200) {\n\t\t\t\t\tOUTPUT.push(order_result.output);\n\t\t\t\t} else {\n\t\t\t\t\terror_flag = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst adding_orders = await this.update(bill_id, { Orders: OUTPUT });\n\t\t\tif (adding_orders.returncode !== 200) {\n\t\t\t\terror_flag = true\n\t\t\t}\n\n\t\t\tif (!error_flag) {\n\t\t\t\treturn {\n\t\t\t\t\treturncode: 200,\n\t\t\t\t\tmessage: \"Bill Created.\",\n\t\t\t\t\toutput: [{ success: true }]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\treturncode: 500,\n\t\t\t\t\tmessage: \"Error creating Bill in some sections\",\n\t\t\t\t\toutput: []\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync addOrdersInBill(bill_id, orders) {\n\t\tconst fetchBill = await this.read(\"_id\", bill_id);\n\t\tconst hotel_id = fetchBill.output[0].HotelId;\n\t\tlet OUTPUT = fetchBill.output[0].Orders || []; // Ensure OUTPUT is initialized to an array\n\n\t\tfor (const order of orders) {\n\t\t\tconst { quantity, note, total_amount, menu_id, status = \"Ordered\" } = order;\n\n\t\t\t// Add the order using ordersCrud\n\t\t\tconst order_result = await ordersCrud.addOrder({\n\t\t\t\tquantity,\n\t\t\t\tnote,\n\t\t\t\ttotal_amount,\n\t\t\t\tmenu_id,\n\t\t\t\tbill_id,\n\t\t\t\tstatus,\n\t\t\t\thotel_id,\n\t\t\t});\n\n\n\t\t\tif (order_result.returncode === 200) {\n\t\t\t\t// Check if the order already exists in OUTPUT\n\t\t\t\tconst existingOrderIndex = OUTPUT.findIndex(existingOrder => existingOrder._id === order_result.output?._id);\n\n\t\t\t\tif (existingOrderIndex === -1) {\n\t\t\t\t\t// Add to OUTPUT if not already present\n\t\t\t\t\tOUTPUT.push(order_result.output);\n\t\t\t\t} else {\n\t\t\t\t\t// Update the existing order if necessary\n\t\t\t\t\tOUTPUT[existingOrderIndex] = order_result.output;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle errors (set a flag or take other action)\n\t\t\t\terror_flag = true;\n\t\t\t}\n\t\t}\n\n\t\t// Update the bill with the new orders array\n\t\tconst adding_orders = await this.update(bill_id, { Orders: OUTPUT });\n\t\treturn adding_orders;\n\t}\n\n\n\tasync dineInRead(table_id) {\n\t\ttry {\n\t\t\tconst data = await this.read(\"TableId\", table_id);\n\t\t\tif (data.returncode === 200) {\n\t\t\t\tconst output = await data.output.filter((bill) => {\n\t\t\t\t\tif (bill.Status !== \"Closed\") {\n\t\t\t\t\t\treturn bill\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (output.length > 0) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treturncode: 200,\n\t\t\t\t\t\tmessage: \"Bill Fetched.\",\n\t\t\t\t\t\toutput\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treturncode: 500,\n\t\t\t\t\t\tmessage: \"No Bills to be Fetched.\",\n\t\t\t\t\t\toutput: []\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync BillPayment({\n\t\tbill_id,\n\t\tpayment_mode,\n\t\tpayment_status,\n\t\tbalance_amount,\n\t\teatocoins,\n\t\tdelivery_rate,\n\t\tdelivery_amount,\n\t\tdiscount_rate,\n\t\tdiscount_amount,\n\t}) {\n\t\ttry {\n\t\t\tconst bill = await this.read(\"_id\", bill_id);\n\n\t\t\tif (bill.returncode !== 200) {\n\t\t\t\treturn bill;\n\t\t\t}\n\n\t\t\tconst customer_id = bill.output[0].CustomerId;\n\t\t\tlet menu_total = 0;\n\n\t\t\t// Calculate menu total\n\t\t\tif (bill.output[0].Orders) {\n\t\t\t\tmenu_total = bill.output[0].Orders.reduce((total, order) => {\n\t\t\t\t\treturn total + (order.MenuId ? order.MenuId.Price * order.Quantity : 0);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\t// GST Params\n\t\t\tlet gst_amount = 0; let cgst_rate = 0; let sgst_rate = 0; let cgst_amount = 0; let sgst_amount = 0;\n\t\t\tconst gstSettings = await gstSettingsCrud.readSettings();\n\t\t\tif (gstSettings.output[0]?.Visibility) {\n\t\t\t\tgst_amount = (menu_total * gstSettings.output[0].GSTPercent) / 100;\n\t\t\t\tconsole.log(gst_amount);\n\t\t\t\tcgst_amount = (gst_amount / 2) | 0;\n\t\t\t\tsgst_amount = (gst_amount / 2) | 0;\n\t\t\t\tcgst_rate = gstSettings.output[0].GSTPercent / 2;\n\t\t\t\tsgst_rate = cgst_rate;\n\t\t\t}\n\n\t\t\t// Vat Params\n\t\t\tlet vat_rate = 0; let vat_amount = 0;\n\t\t\tconst vatSettings = await vatSettingsCrud.readSettings();\n\t\t\tif (vatSettings.output[0]?.Visibility) {\n\t\t\t\tvat_rate = vatSettings.output[0].VATPercent;\n\t\t\t\tvat_amount = (menu_total * vat_rate) / 100;\n\t\t\t}\n\n\t\t\t// Delivery Params\n\t\t\tif (delivery_rate != 0) {\n\t\t\t\tdelivery_amount = (delivery_rate / 100) * menu_total;\n\t\t\t}\n\n\t\t\t// Total amount\n\t\t\tconst total_amount = menu_total + cgst_amount + sgst_amount + vat_amount + delivery_amount;\n\n\t\t\t// Discount\n\t\t\tif (discount_rate != 0) {\n\t\t\t\tdiscount_amount = (discount_rate / 100) * total_amount | 0;\n\t\t\t}\n\n\t\t\t// Calculating amount of bill\n\t\t\tlet amount = total_amount - discount_amount;\n\n\t\t\t// Eatocoins Params \n\t\t\tlet eatocoins_rate = 0; let credit_eatocoins = 0;\n\t\t\tconst eatocoinsSettings = await eatoCoinsSettingsCrud.readSettings();\n\t\t\tif (eatocoinsSettings.output[0]?.Visibility) {\n\n\t\t\t\teatocoins_rate = eatocoinsSettings.output[0].RedeemLimitPercent || 0;\n\t\t\t\tlet redeem_limit_amt = eatocoinsSettings.output[0].RedeemLimitAmount || 0;\n\t\t\t\tlet credit_limit_amt = eatocoinsSettings.output[0].CreditLimitAmt || 0;\n\t\t\t\tlet credit_limit_rate = eatocoinsSettings.output[0].CreditLimitPercent || 0;\n\n\t\t\t\t// Check whether Amount is greater than Credit Limit \n\t\t\t\tif (amount >= credit_limit_amt) {\n\t\t\t\t\tcredit_eatocoins = (credit_limit_rate / 100) * total_amount | 0;\n\t\t\t\t}\n\n\t\t\t\t// Redeem\n\t\t\t\tif (eatocoins != 0) {\n\n\t\t\t\t\tif (eatocoins_rate != 0) {\n\n\t\t\t\t\t\t// Redeem limit\n\t\t\t\t\t\tif (amount >= redeem_limit_amt) {\n\n\t\t\t\t\t\t\t// Max Amount\n\t\t\t\t\t\t\tconst eatocoins_max = (eatocoins_rate / 100) * total_amount | 0;\n\n\t\t\t\t\t\t\t// If Eatocoins in input is greater than max amount\n\t\t\t\t\t\t\tif (eatocoins > eatocoins_max) {\n\t\t\t\t\t\t\t\teatocoins = eatocoins_max;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\teatocoins = 0;\n\t\t\t\t\t\t\teatocoins_rate = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\teatocoins = 0;\n\t\t\t\t\teatocoins_rate = 0;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Update bill with calculated amounts\n\t\t\tconst updateData = {\n\t\t\t\tMenuTotal: menu_total,\n\t\t\t\tVatAmount: vat_amount,\n\t\t\t\tCGSTAmount: cgst_amount,\n\t\t\t\tSGSTAmount: sgst_amount,\n\t\t\t\tDeliveryChargesAmount: delivery_amount,\n\t\t\t\tDiscountAmount: discount_amount,\n\t\t\t\tEatocoinsAmount: eatocoins,\n\t\t\t\tDeliveryChargesRate: `${delivery_rate} %`,\n\t\t\t\tDiscountRate: `${discount_rate} %`,\n\t\t\t\tCGSTRate: `${cgst_rate} %`,\n\t\t\t\tSGSTRate: `${sgst_rate} %`,\n\t\t\t\tVatRate: `${vat_rate} %`,\n\t\t\t\tEatocoinsRate: `${eatocoins_rate} %`,\n\t\t\t\tTotalAmount: total_amount,\n\t\t\t\tAmount: amount,\n\t\t\t\tBalanceAmount: balance_amount,\n\t\t\t\tPaymentMode: payment_mode,\n\t\t\t\tPaymentStatus: payment_status,\n\t\t\t\tStatus: \"Closed\"\n\t\t\t};\n\n\t\t\tconst result = await this.update(bill_id, updateData);\n\t\t\tif (result.returncode === 200) {\n\t\t\t\tif (customer_id != null) {\n\t\t\t\t\tconst customer_info = await customersCrud.read(\"_id\", customer_id);\n\t\t\t\t\tconst eato_wallet = customer_info.output[0].EatocoinsWallet;\n\t\t\t\t\tconsole.log('Wallet update data:', { customer_id, eato_wallet, credit_eatocoins, eatocoins });\n\n\t\t\t\t\tif (eato_wallet > eatocoins) {\n\n\t\t\t\t\t\tcredit_eatocoins = eato_wallet - eatocoins + credit_eatocoins;\n\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\twallet: credit_eatocoins\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait customersCrud.updateWallet(customer_id, data);\n\t\t\t\t\t}\n\t\t\t\t\telse if (credit_eatocoins > 0) {\n\t\t\t\t\t\tcredit_eatocoins = eato_wallet + credit_eatocoins;\n\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\twallet: credit_eatocoins\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait customersCrud.update(customer_id, data);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Table Status\n\t\t\tif (result.output.TableId) {\n\t\t\t\tawait tablesCrud.updateTableStatus(result.output.TableId, \"Open\");\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\n}\n\nconst billsCrud = new BillsCrud();\nexport default billsCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,kBAAkB,4IAAA,CAAA,kBAAe;IACtC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,WAAW,EAChB,gBAAgB,IAAI,EACpB,UAAU,IAAI,EACd,QAAQ,IAAI,EACZ,WAAW,IAAI,EACf,cAAc,IAAI,EAClB,YAAY,IAAI,EAChB,iBAAiB,IAAI,EACrB,WAAW,IAAI,EACf,OAAO,IAAI,EACX,QAAQ,IAAI,EACZ,WAAW,IAAI,EACf,OAAO,IAAI,EACX,WAAW,IAAI,EACf,YAAY,IAAI,EAChB,WAAW,IAAI,EACf,YAAY,IAAI,EAChB,EAAE;QACF,IAAI;YAEH,0BAA0B;YAC1B,IAAI,aAAa,QAAQ,SAAS,QAAQ,cAAc,MAAM;gBAC7D,OAAO;oBACN,YAAY;oBACZ,SAAS;oBACT,QAAQ,EAAE;gBACX;YACD;YAEA,6DAA6D;YAC7D,IAAI,cAAc;YAAM,IAAI,YAAY,EAAE;YAC1C,IAAI,kBAAkB,MAAM;gBAC3B,MAAM,eAAe;oBACpB;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;gBACD;gBACA,MAAM,kBAAkB,MAAM,6IAAA,CAAA,UAAa,CAAC,cAAc,CAAC;gBAC3D,IAAI,gBAAgB,UAAU,KAAK,KAAK;oBACvC,YAAY,gBAAgB,MAAM;oBAClC,cAAc,gBAAgB,MAAM,EAAE,OAAO;gBAC9C;YACD;YAGA,oBAAoB;YACpB,IAAI;YACJ,MAAM,WAAW;gBAChB,MAAM;gBACN,SAAS;gBACT,UAAU;gBACV,SAAS;gBACT,YAAY;gBACZ,WAAW;gBACX,QAAQ,EAAE;YACX;YAEA,MAAM,cAAc,MAAM,IAAI,CAAC,MAAM,CAAC;YACtC,UAAU,YAAY,MAAM,CAAC,GAAG;YAEhC,IAAI,cAAa;YAEjB,IAAI,YAAY,UAAU,KAAK,KAAK;gBACnC,0CAA0C;gBAC1C,IAAI,UAAU;oBACb,MAAM,0IAAA,CAAA,UAAU,CAAC,MAAM,CAAC,UAAU;wBAAE,QAAQ;oBAAS;gBACtD;YACD,OACK;gBACJ,cAAa;YACd;YAGA,MAAM,SAAS,EAAE;YACjB,KAAK,MAAM,SAAS,UAAW;gBAC9B,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,SAAS,EAAE,GAAG;gBAEtE,MAAM,eAAe,MAAM,0IAAA,CAAA,UAAU,CAAC,QAAQ,CAAC;oBAC9C;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;gBACD;gBAEA,IAAI,aAAa,UAAU,KAAK,KAAK;oBACpC,OAAO,IAAI,CAAC,aAAa,MAAM;gBAChC,OAAO;oBACN,cAAa;gBACd;YACD;YAEA,MAAM,gBAAgB,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS;gBAAE,QAAQ;YAAO;YAClE,IAAI,cAAc,UAAU,KAAK,KAAK;gBACrC,cAAa;YACd;YAEA,IAAI,CAAC,aAAY;gBAChB,OAAO;oBACN,YAAY;oBACZ,SAAS;oBACT,QAAQ;wBAAC;4BAAE,SAAS;wBAAK;qBAAE;gBAC5B;YACD,OAAO;gBACN,OAAO;oBACN,YAAY;oBACZ,SAAS;oBACT,QAAQ,EAAE;gBACX;YACD;QACD,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,gBAAgB,OAAO,EAAE,MAAM,EAAE;QACtC,MAAM,YAAY,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;QACzC,MAAM,WAAW,UAAU,MAAM,CAAC,EAAE,CAAC,OAAO;QAC5C,IAAI,SAAS,UAAU,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,EAAE,EAAE,2CAA2C;QAE1F,KAAK,MAAM,SAAS,OAAQ;YAC3B,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,SAAS,EAAE,GAAG;YAEtE,iCAAiC;YACjC,MAAM,eAAe,MAAM,0IAAA,CAAA,UAAU,CAAC,QAAQ,CAAC;gBAC9C;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;YACD;YAGA,IAAI,aAAa,UAAU,KAAK,KAAK;gBACpC,8CAA8C;gBAC9C,MAAM,qBAAqB,OAAO,SAAS,CAAC,CAAA,gBAAiB,cAAc,GAAG,KAAK,aAAa,MAAM,EAAE;gBAExG,IAAI,uBAAuB,CAAC,GAAG;oBAC9B,uCAAuC;oBACvC,OAAO,IAAI,CAAC,aAAa,MAAM;gBAChC,OAAO;oBACN,yCAAyC;oBACzC,MAAM,CAAC,mBAAmB,GAAG,aAAa,MAAM;gBACjD;YACD,OAAO;gBACN,kDAAkD;gBAClD,aAAa;YACd;QACD;QAEA,4CAA4C;QAC5C,MAAM,gBAAgB,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS;YAAE,QAAQ;QAAO;QAClE,OAAO;IACR;IAGA,MAAM,WAAW,QAAQ,EAAE;QAC1B,IAAI;YACH,MAAM,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YACxC,IAAI,KAAK,UAAU,KAAK,KAAK;gBAC5B,MAAM,SAAS,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,KAAK,MAAM,KAAK,UAAU;wBAC7B,OAAO;oBACR;gBACD;gBACA,IAAI,OAAO,MAAM,GAAG,GAAG;oBACtB,OAAO;wBACN,YAAY;wBACZ,SAAS;wBACT;oBACD;gBACD,OAAO;oBACN,OAAO;wBACN,YAAY;wBACZ,SAAS;wBACT,QAAQ,EAAE;oBACX;gBACD;YACD;YACA,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,YAAY,EACjB,OAAO,EACP,YAAY,EACZ,cAAc,EACd,cAAc,EACd,SAAS,EACT,aAAa,EACb,eAAe,EACf,aAAa,EACb,eAAe,EACf,EAAE;QACF,IAAI;YACH,MAAM,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;YAEpC,IAAI,KAAK,UAAU,KAAK,KAAK;gBAC5B,OAAO;YACR;YAEA,MAAM,cAAc,KAAK,MAAM,CAAC,EAAE,CAAC,UAAU;YAC7C,IAAI,aAAa;YAEjB,uBAAuB;YACvB,IAAI,KAAK,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE;gBAC1B,aAAa,KAAK,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO;oBACjD,OAAO,QAAQ,CAAC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACvE,GAAG;YACJ;YAEA,aAAa;YACb,IAAI,aAAa;YAAG,IAAI,YAAY;YAAG,IAAI,YAAY;YAAG,IAAI,cAAc;YAAG,IAAI,cAAc;YACjG,MAAM,cAAc,MAAM,+IAAA,CAAA,UAAe,CAAC,YAAY;YACtD,IAAI,YAAY,MAAM,CAAC,EAAE,EAAE,YAAY;gBACtC,aAAa,AAAC,aAAa,YAAY,MAAM,CAAC,EAAE,CAAC,UAAU,GAAI;gBAC/D,QAAQ,GAAG,CAAC;gBACZ,cAAc,AAAC,aAAa,IAAK;gBACjC,cAAc,AAAC,aAAa,IAAK;gBACjC,YAAY,YAAY,MAAM,CAAC,EAAE,CAAC,UAAU,GAAG;gBAC/C,YAAY;YACb;YAEA,aAAa;YACb,IAAI,WAAW;YAAG,IAAI,aAAa;YACnC,MAAM,cAAc,MAAM,+IAAA,CAAA,UAAe,CAAC,YAAY;YACtD,IAAI,YAAY,MAAM,CAAC,EAAE,EAAE,YAAY;gBACtC,WAAW,YAAY,MAAM,CAAC,EAAE,CAAC,UAAU;gBAC3C,aAAa,AAAC,aAAa,WAAY;YACxC;YAEA,kBAAkB;YAClB,IAAI,iBAAiB,GAAG;gBACvB,kBAAkB,AAAC,gBAAgB,MAAO;YAC3C;YAEA,eAAe;YACf,MAAM,eAAe,aAAa,cAAc,cAAc,aAAa;YAE3E,WAAW;YACX,IAAI,iBAAiB,GAAG;gBACvB,kBAAkB,AAAC,gBAAgB,MAAO,eAAe;YAC1D;YAEA,6BAA6B;YAC7B,IAAI,SAAS,eAAe;YAE5B,oBAAoB;YACpB,IAAI,iBAAiB;YAAG,IAAI,mBAAmB;YAC/C,MAAM,oBAAoB,MAAM,qJAAA,CAAA,UAAqB,CAAC,YAAY;YAClE,IAAI,kBAAkB,MAAM,CAAC,EAAE,EAAE,YAAY;gBAE5C,iBAAiB,kBAAkB,MAAM,CAAC,EAAE,CAAC,kBAAkB,IAAI;gBACnE,IAAI,mBAAmB,kBAAkB,MAAM,CAAC,EAAE,CAAC,iBAAiB,IAAI;gBACxE,IAAI,mBAAmB,kBAAkB,MAAM,CAAC,EAAE,CAAC,cAAc,IAAI;gBACrE,IAAI,oBAAoB,kBAAkB,MAAM,CAAC,EAAE,CAAC,kBAAkB,IAAI;gBAE1E,qDAAqD;gBACrD,IAAI,UAAU,kBAAkB;oBAC/B,mBAAmB,AAAC,oBAAoB,MAAO,eAAe;gBAC/D;gBAEA,SAAS;gBACT,IAAI,aAAa,GAAG;oBAEnB,IAAI,kBAAkB,GAAG;wBAExB,eAAe;wBACf,IAAI,UAAU,kBAAkB;4BAE/B,aAAa;4BACb,MAAM,gBAAgB,AAAC,iBAAiB,MAAO,eAAe;4BAE9D,mDAAmD;4BACnD,IAAI,YAAY,eAAe;gCAC9B,YAAY;4BACb;wBAED,OACK;4BACJ,YAAY;4BACZ,iBAAiB;wBAClB;oBACD;gBAED,OACK;oBACJ,YAAY;oBACZ,iBAAiB;gBAClB;YACD;YAGA,sCAAsC;YACtC,MAAM,aAAa;gBAClB,WAAW;gBACX,WAAW;gBACX,YAAY;gBACZ,YAAY;gBACZ,uBAAuB;gBACvB,gBAAgB;gBAChB,iBAAiB;gBACjB,qBAAqB,GAAG,cAAc,EAAE,CAAC;gBACzC,cAAc,GAAG,cAAc,EAAE,CAAC;gBAClC,UAAU,GAAG,UAAU,EAAE,CAAC;gBAC1B,UAAU,GAAG,UAAU,EAAE,CAAC;gBAC1B,SAAS,GAAG,SAAS,EAAE,CAAC;gBACxB,eAAe,GAAG,eAAe,EAAE,CAAC;gBACpC,aAAa;gBACb,QAAQ;gBACR,eAAe;gBACf,aAAa;gBACb,eAAe;gBACf,QAAQ;YACT;YAEA,MAAM,UAAS,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS;YAC1C,IAAI,QAAO,UAAU,KAAK,KAAK;gBAC9B,IAAI,eAAe,MAAM;oBACxB,MAAM,gBAAgB,MAAM,6IAAA,CAAA,UAAa,CAAC,IAAI,CAAC,OAAO;oBACtD,MAAM,cAAc,cAAc,MAAM,CAAC,EAAE,CAAC,eAAe;oBAC3D,QAAQ,GAAG,CAAC,uBAAuB;wBAAE;wBAAa;wBAAa;wBAAkB;oBAAU;oBAE3F,IAAI,cAAc,WAAW;wBAE5B,mBAAmB,cAAc,YAAY;wBAC7C,MAAM,OAAO;4BACZ,QAAQ;wBACT;wBACA,MAAM,6IAAA,CAAA,UAAa,CAAC,YAAY,CAAC,aAAa;oBAC/C,OACK,IAAI,mBAAmB,GAAG;wBAC9B,mBAAmB,cAAc;wBACjC,MAAM,OAAO;4BACZ,QAAQ;wBACT;wBACA,MAAM,6IAAA,CAAA,UAAa,CAAC,MAAM,CAAC,aAAa;oBACzC;gBAED;YACD;YAEA,eAAe;YACf,IAAI,QAAO,MAAM,CAAC,OAAO,EAAE;gBAC1B,MAAM,0IAAA,CAAA,UAAU,CAAC,iBAAiB,CAAC,QAAO,MAAM,CAAC,OAAO,EAAE;YAC3D;YAEA,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AAGD;AAEA,MAAM,YAAY,IAAI;uCACP"}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1398, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/offline/crud/Tables.js"],"sourcesContent":["import { OfflineBaseCrud } from \"./BaseCrud\";\nimport billsCrud from \"./Bills\";\n\nclass TablesCrud extends OfflineBaseCrud {\n\tconstructor() {\n\t\tsuper(\"Tables\");\n\t}\n\n\tasync readTables(hotel_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('HotelId', hotel_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync readTable(table_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('_id', table_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync readTablesBySection(section_id) {\n\t\ttry {\n\t\t\tconst result = await this.read('SectionId', section_id);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n\tasync updateTableStatus(table_id, status) {\n\t\ttry {\n\t\t\t// If setting to occupied, check if there are any open bills\n\t\t\tif (status === \"Occupied\") {\n\t\t\t\tconst openBills = await billsCrud.read(\"TableId\", table_id);\n\n\t\t\t\tif (openBills.output[0].Status === \"Open\") {\n\t\t\t\t\treturn {\n\t\t\t\t\t\treturncode: 400,\n\t\t\t\t\t\tmessage: \"Cannot occupy table without an open bill\",\n\t\t\t\t\t\toutput: []\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tconst result = await this.update(table_id, { Status: status });\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\treturncode: 500,\n\t\t\t\tmessage: error.message,\n\t\t\t\toutput: []\n\t\t\t};\n\t\t}\n\t}\n\n}\n\nconst tablesCrud = new TablesCrud();\nexport default tablesCrud;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,mBAAmB,4IAAA,CAAA,kBAAe;IACvC,aAAc;QACb,KAAK,CAAC;IACP;IAEA,MAAM,WAAW,QAAQ,EAAE;QAC1B,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC1C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,UAAU,QAAQ,EAAE;QACzB,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;YACtC,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,oBAAoB,UAAU,EAAE;QACrC,IAAI;YACH,MAAM,SAAS,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa;YAC5C,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;IAEA,MAAM,kBAAkB,QAAQ,EAAE,MAAM,EAAE;QACzC,IAAI;YACH,4DAA4D;YAC5D,IAAI,WAAW,YAAY;gBAC1B,MAAM,YAAY,MAAM,yIAAA,CAAA,UAAS,CAAC,IAAI,CAAC,WAAW;gBAElD,IAAI,UAAU,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,QAAQ;oBAC1C,OAAO;wBACN,YAAY;wBACZ,SAAS;wBACT,QAAQ,EAAE;oBACX;gBACD;YACD;YAGA,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU;gBAAE,QAAQ;YAAO;YAC5D,OAAO;QACR,EAAE,OAAO,OAAO;YACf,OAAO;gBACN,YAAY;gBACZ,SAAS,MAAM,OAAO;gBACtB,QAAQ,EAAE;YACX;QACD;IACD;AAED;AAEA,MAAM,aAAa,IAAI;uCACR"}},
    {"offset": {"line": 1476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":["file:///home/batman/Workspace/Eatofy/src/app/hotel/%28dashboard%29/restore/page.js"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react';\nimport { ArrowUpTrayIcon } from '@heroicons/react/24/outline';\nimport customersCrud from '@/app/offline/crud/Customers';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport menusCrud from '@/app/offline/crud/Menus';\nimport menuCategoryCrud from '@/app/offline/crud/MenuCategory';\nimport sectionsCrud from '@/app/offline/crud/Sections';\nimport tablesCrud from '@/app/offline/crud/Tables';\nimport staffsCrud from '@/app/offline/crud/Staffs';\n\nexport default function RestorePage() {\n  const [customers, setCustomers] = useState([]);\n  const [menus, setMenus] = useState([]);\n  const [menuCategories, setMenuCategories] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [loadingStates, setLoadingStates] = useState({\n    customers: false,\n    menus: false,\n    menuCategories: false,\n    tables: false,\n    staffs: false,\n    sections: false\n  });\n\n  const fetchCustomers = async () => {\n    try {\n      const result = await customersCrud.readCustomers();\n      if (result.returncode === 200) {\n        setCustomers(result.output);\n      } else {\n        toast.error('Failed to fetch customers');\n      }\n    } catch (error) {\n      toast.error('Error fetching customers');\n      console.error(error);\n    }\n  };\n\n  const fetchMenus = async () => {\n    try {\n      const result = await menusCrud.readMenus();\n      if (result.returncode === 200) {\n        setMenus(result.output);\n      } else {\n        toast.error('Failed to fetch Menus');\n      }\n    } catch (error) {\n      toast.error('Error fetching Menus');\n    }\n  };\n\n  const fetchMenuCategories = async () => {\n    try {\n      const result = await menuCategoryCrud.readMenuCategories();\n      if (result.returncode === 200) {\n        setMenuCategories(result.output);\n      } else {\n        toast.error('Failed to fetch Menu Categories');\n      }\n    } catch (error) {\n      toast.error('Error fetching Menu Categories');\n    }\n  };\n\n  const fetchTables = async () => {\n    try {\n      const result = await tablesCrud.readTables();\n      if (result.returncode === 200) {\n        setTables(result.output);\n      } else {\n        toast.error('Failed to fetch Tables');\n      }\n    } catch (error) {\n      toast.error('Error fetching Tables');\n      console.error(error);\n    }\n  };\n\n  const fetchSections = async () => {\n    try {\n      const result = await sectionsCrud.readAllSections();\n      if (result.returncode === 200) {\n        setSections(result.output);\n      } else {\n        toast.error('Failed to fetch Sections');\n      }\n    } catch (error) {\n      toast.error('Error fetching Sections');\n    }\n  };\n\n  const fetchStaffs = async () => {\n    try {\n      const result = await staffsCrud.fetchStaffByHotelId();\n      if (result.returncode === 200) {\n        setTables(result.output);\n      } else {\n        toast.error('Failed to fetch Staff');\n      }\n    } catch (error) {\n      toast.error('Error fetching Staff');\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCustomers();\n    fetchMenus();\n    fetchMenuCategories();\n    fetchSections();\n    fetchTables();\n    fetchStaffs();\n  }, []);\n\n  const handleRestore = async (type) => {\n    setLoadingStates(prev => ({ ...prev, [type]: true }));\n    try {\n      let result;\n      switch (type) {\n        case 'customers':\n          result = await customersCrud.syncFromServer();\n          if (result.returncode === 200) {\n            await fetchCustomers();\n          }\n          break;\n        case 'menus':\n          result = await menusCrud.syncFromServer();\n          if (result.returncode === 200) {\n            await fetchMenus();\n          }\n          break;\n        case 'menu Categories':\n          result = await menuCategoryCrud.syncFromServer();\n          if (result.returncode === 200) {\n            await fetchMenuCategories();\n          }\n          break;\n        case 'sections':\n          result = await sectionsCrud.syncFromServer();\n          if (result.returncode === 200) {\n            await fetchSections();\n          }\n          break;\n        case 'tables':\n          result = await tablesCrud.syncFromServer();\n          if (result.returncode === 200) {\n            await fetchTables();\n          }\n          break;\n        case 'staffs':\n          result = await staffsCrud.syncFromServer();\n          if (result.returncode === 200) {\n            await fetchTables();\n          }\n          break;\n        default:\n          throw new Error('Invalid restore type');\n      }\n\n      if (result.returncode === 200) {\n        toast.success(`${type.charAt(0).toUpperCase() + type.slice(1)} restored successfully`);\n      } else {\n        toast.error(result.message || `Failed to restore ${type}`);\n      }\n    } catch (error) {\n      toast.error(error.message || `Error restoring ${type}`);\n    } finally {\n      setLoadingStates(prev => ({ ...prev, [type]: false }));\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">Data From Server</h1>\n\n      {/* Customers Section */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold\">Customers</h2>\n          <div className=\"space-x-2\">\n            <button\n              onClick={() => handleRestore('customers')}\n              disabled={loadingStates.customers}\n              className={`bg-green-500 text-white px-4 py-2 rounded flex items-center ${loadingStates.customers ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n            >\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              {loadingStates.customers ? 'Restoring...' : 'Restore'}\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-red-500\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Sr.No</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Name</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Contact</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Email</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">City</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Wallet</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                customers.length > 0 ?\n                  (\n                    customers.map((customer, index) => (\n                      <tr key={index}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{customer.CustomerName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{customer.Contact}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{customer.Email}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{customer.City}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{customer.Wallet || 0}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"border px-4 py-2 text-center\" colSpan=\"8\">No Customers Found</td>\n                    </tr>\n                  )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Menus Section */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold\">Menus</h2>\n          <div className=\"space-x-2\">\n            <button\n              onClick={() => handleRestore('menus')}\n              disabled={loadingStates.menus}\n              className={`bg-green-500 text-white px-4 py-2 rounded flex items-center ${loadingStates.menus ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n            >\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              {loadingStates.menus ? 'Restoring...' : 'Restore'}\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-red-500\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Sr.No</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Name</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Code</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Description</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Section</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Category</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Type</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Price</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                menus.length > 0 ?\n                  (\n                    menus.map((menu, index) => (\n                      <tr key={index}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.DishId.DishName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.DishId.Code}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.DishId.Description || \"-\"}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.SectionId.SectionName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.DishId.CategoryId.CategoryName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.DishId.Type}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.Price}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"border px-4 py-2 text-center\" colSpan=\"8\">No Menus Found</td>\n                    </tr>\n                  )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Menu Categories Section */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold\">Menu Categories</h2>\n          <div className=\"space-x-2\">\n            <button\n              onClick={() => handleRestore('menu Categories')}\n              disabled={loadingStates.menuCategories}\n              className={`bg-green-500 text-white px-4 py-2 rounded flex items-center ${loadingStates.menus ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n            >\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              {loadingStates.menuCategories ? 'Restoring...' : 'Restore'}\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-red-500\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Sr.No</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Name</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                menuCategories.length > 0 ?\n                  (\n                    menuCategories.map((menu, index) => (\n                      <tr key={index}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{menu.CategoryName}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"border px-4 py-2 text-center\" colSpan=\"8\">No Menu Categories Found</td>\n                    </tr>\n                  )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold\">Sections</h2>\n          <div className=\"space-x-2\">\n            <button\n              onClick={() => handleRestore('sections')}\n              disabled={loadingStates.sections}\n              className={`bg-green-500 text-white px-4 py-2 rounded flex items-center ${loadingStates.sections ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n            >\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              {loadingStates.sections ? 'Restoring...' : 'Restore'}\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-red-500\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Sr.No</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Name</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Type</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                sections.length > 0 ?\n                  (\n                    sections.map((section, index) => (\n                      <tr key={index}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{section.SectionName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{section.Type}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"border px-4 py-2 text-center\" colSpan=\"8\">No Sections Found</td>\n                    </tr>\n                  )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Tables Section */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold\">Tables</h2>\n          <div className=\"space-x-2\">\n            <button\n              onClick={() => handleRestore('tables')}\n              disabled={loadingStates.tables}\n              className={`bg-green-500 text-white px-4 py-2 rounded flex items-center ${loadingStates.tables ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n            >\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              {loadingStates.tables ? 'Restoring...' : 'Restore'}\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-red-500\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Sr.No</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Name</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Capacity</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                tables.length > 0 ?\n                  (\n                    tables.map((table, index) => (\n                      <tr key={index}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{table.TableName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{table.PersonsOccupiable} Persons</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"border px-4 py-2 text-center\" colSpan=\"8\">No Tables Found</td>\n                    </tr>\n                  )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Staff Section */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-semibold\">Staff</h2>\n          <div className=\"space-x-2\">\n            <button\n              onClick={() => handleRestore('staffs')}\n              disabled={loadingStates.staffs}\n              className={`bg-green-500 text-white px-4 py-2 rounded flex items-center ${loadingStates.staffs ? 'opacity-50 cursor-not-allowed' : ''\n                }`}\n            >\n              <ArrowUpTrayIcon className=\"h-5 w-5 mr-2\" />\n              {loadingStates.staffs ? 'Restoring...' : 'Restore'}\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-red-500\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Sr.No</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Name</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Contact</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Email</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Department</th>\n                <th className=\"px-6 py-3 text-left text-xs font-bold text-gray-100 uppercase tracking-wider\">Designation</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {\n                staff.length > 0 ?\n                  (\n                    staff.map((person, index) => (\n                      <tr key={index}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{person.FirstName} {person.LastName}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{person.Contact}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{person.Email}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{person.Department}</td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">{person.Designation}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"border px-4 py-2 text-center\" colSpan=\"8\">No Tables Found</td>\n                    </tr>\n                  )\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <ToastContainer position=\"bottom-right\" />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}