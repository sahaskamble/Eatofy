generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotels {
  id                  String                @id @unique @default(uuid())
  HotelName           String                @unique
  Email               String                @unique
  HashedPassword      String
  SaltPassword        String
  Address             String
  Speciality          String[]
  HotelLogo           Bytes?
  Contacts            String[]
  Website             String?
  FSSAICode           String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  xata_id             String                @unique(map: "Hotels__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version        Int                   @default(0)
  xata_createdat      DateTime              @default(now()) @db.Timestamptz(6)
  xata_updatedat      DateTime              @default(now()) @db.Timestamptz(6)
  AvailableStock      AvailableStock[]
  Bills               Bills[]
  ComplianceChecklist ComplianceChecklist[]
  Customers           Customers[]
  Dishes              Dishes[]
  Expenses            Expenses[]
  Subscription        Hotel_Subscription[]
  ItemCategory        ItemCategories[]
  Items               Items[]
  MenuCategory        MenuCategory[]
  Order               Orders[]
  Invoice             PurchasedInvoice[]
  Sections            Sections[]
  Staff               Staffs[]
  Supplier            Suppliers[]
  Reservations        TableReservation[]
  Tables              Tables[]
}

model Subscriptions {
  id                String               @id @unique @default(uuid())
  SubscriptionName  String               @unique
  Price             Float
  Validity          Int
  Status            String               @default("Active")
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  xata_id           String               @unique(map: "Subscriptions__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version      Int                  @default(0)
  xata_createdat    DateTime             @default(now()) @db.Timestamptz(6)
  xata_updatedat    DateTime             @default(now()) @db.Timestamptz(6)
  HotelSubscription Hotel_Subscription[]
}

model Hotel_Subscription {
  id             String        @id @unique @default(uuid())
  HotelId        String
  SubscriptionId String
  isValid        Boolean
  StartDate      String
  EndDate        String
  Status         String        @default("Active")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  xata_id        String        @unique(map: "Hotel_Subscription__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int           @default(0)
  xata_createdat DateTime      @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime      @default(now()) @db.Timestamptz(6)
  Hotel          Hotels        @relation(fields: [HotelId], references: [id])
  Subscription   Subscriptions @relation(fields: [SubscriptionId], references: [id])
}

model Sections {
  id             String   @id @unique @default(uuid())
  SectionName    String
  Status         String   @default("Active")
  HotelId        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "Sections__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Menus          Menus[]
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
  Tables         Tables[]
}

model Tables {
  id                String   @id @unique @default(uuid())
  TableName         String
  SectionId         String
  HotelId           String
  Status            String   @default("Active")
  PersonsOccupiable String?  @default("4")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  xata_id           String   @unique(map: "Tables__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version      Int      @default(0)
  xata_createdat    DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat    DateTime @default(now()) @db.Timestamptz(6)
  Bills             Bills[]
  Hotel             Hotels   @relation(fields: [HotelId], references: [id])
  Section           Sections @relation(fields: [SectionId], references: [id])
}

model TableReservation {
  id             String    @id @unique @default(uuid())
  Date           String
  Time           String
  Status         String    @default("Active")
  Note           String?
  CustomerId     String
  HotelId        String
  xata_id        String    @unique(map: "TableReservation__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int       @default(0)
  xata_createdat DateTime  @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime  @default(now()) @db.Timestamptz(6)
  Customer       Customers @relation(fields: [CustomerId], references: [id])
  Hotel          Hotels    @relation(fields: [HotelId], references: [id])
}

model MenuCategory {
  id             String   @id @unique @default(uuid())
  CategoryName   String
  Description    String?
  Status         String   @default("Active")
  HotelId        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "MenuCategory__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  Dishes         Dishes[]
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
}

model Dishes {
  id             String       @id @unique @default(uuid())
  DishName       String
  Code           String
  Description    String?
  Type           String
  DishImage      Bytes?
  Status         String       @default("Active")
  CategoryId     String
  HotelId        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  xata_id        String       @unique(map: "Dishes__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int          @default(0)
  xata_createdat DateTime     @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime     @default(now()) @db.Timestamptz(6)
  Category       MenuCategory @relation(fields: [CategoryId], references: [id])
  Hotel          Hotels       @relation(fields: [HotelId], references: [id])
  Menus          Menus[]
}

model Menus {
  id             String   @id @unique @default(uuid())
  SectionId      String
  DishId         String
  Code           String?
  Price          Float
  Status         String   @default("Active")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "Menus__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Dish           Dishes   @relation(fields: [DishId], references: [id])
  Section        Sections @relation(fields: [SectionId], references: [id])
  Menu           Orders[]
}

model Suppliers {
  id             String             @id @unique @default(uuid())
  SupplierName   String
  Contact        String
  Email          String
  GSTIN          String
  Address        String?
  Status         String             @default("Active")
  HotelId        String
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  xata_id        String             @unique(map: "Suppliers__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int                @default(0)
  xata_createdat DateTime           @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime           @default(now()) @db.Timestamptz(6)
  StockInvoice   PurchasedInvoice[]
  Hotel          Hotels             @relation(fields: [HotelId], references: [id])
}

model ItemCategories {
  id             String   @id @unique @default(uuid())
  CategoryName   String
  Description    String?
  HotelId        String
  Status         String   @default("Active")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "ItemCategories__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
  Item           Items[]
}

model Items {
  id             String           @id @unique @default(uuid())
  ItemName       String
  Description    String?
  HotelId        String
  CategoryId     String
  Status         String           @default("Active")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  xata_updatedat DateTime         @default(now()) @db.Timestamptz(6)
  xata_id        String           @unique(map: "Items__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int              @default(0)
  xata_createdat DateTime         @default(now()) @db.Timestamptz(6)
  AvailableStock AvailableStock[]
  DailyStock     DailyStock[]
  Category       ItemCategories   @relation(fields: [CategoryId], references: [id])
  Hotel          Hotels           @relation(fields: [HotelId], references: [id])
  PurchasedStock PurchasedStock[]
}

model PurchasedInvoice {
  id             String           @id @unique @default(uuid())
  InvoiceNo      String?
  Date           String
  PaymentMode    String?
  TotalAmount    Float
  BalanceAmount  Float            @default(0.00)
  PaymentStatus  String           @default("Paid")
  SupplierId     String
  HotelId        String
  Status         String           @default("Active")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  xata_id        String           @unique(map: "PurchasedInvoice__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int              @default(0)
  xata_createdat DateTime         @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime         @default(now()) @db.Timestamptz(6)
  Hotel          Hotels           @relation(fields: [HotelId], references: [id])
  Suppliers      Suppliers        @relation(fields: [SupplierId], references: [id])
  Stock          PurchasedStock[]
}

model PurchasedStock {
  id             String           @id @unique @default(uuid())
  InvoiceId      String
  ItemId         String
  Status         String           @default("Active")
  Quantity       String
  Unit           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  xata_id        String           @unique(map: "PurchasedStock__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int              @default(0)
  xata_createdat DateTime         @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime         @default(now()) @db.Timestamptz(6)
  Invoice        PurchasedInvoice @relation(fields: [InvoiceId], references: [id])
  Items          Items            @relation(fields: [ItemId], references: [id])
}

model AvailableStock {
  id             String   @id @unique @default(uuid())
  HotelId        String
  ItemId         String
  Quantity       String
  Unit           String
  Status         String   @default("Available")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "AvailableStock__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
  Items          Items    @relation(fields: [ItemId], references: [id])
}

model DailyStock {
  id             String   @id @unique @default(uuid())
  ItemId         String
  Quantity       String
  Status         String   @default("Active")
  Date           String
  xata_id        String   @unique(map: "DailyStock__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Items          Items    @relation(fields: [ItemId], references: [id])
}

model Staffs {
  id             String            @id @unique @default(uuid())
  FirstName      String
  LastName       String
  Address        String
  Contact        String
  Email          String
  HashedPassword String
  SaltPassword   String
  DepartmentName String
  Designation    String
  Role           String
  Salary         Float
  Incentive      Float?
  Status         String            @default("Active")
  HotelId        String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  xata_id        String            @unique(map: "Staffs__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int               @default(0)
  xata_createdat DateTime          @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime          @default(now()) @db.Timestamptz(6)
  Bill           Bills[]
  Attendance     StaffAttendance[]
  Hotel          Hotels            @relation(fields: [HotelId], references: [id])
}

model StaffAttendance {
  id             String   @id @unique @default(uuid())
  Date           String
  Arrival        String
  Departure      String
  Type           String   @default("Absent")
  Note           String?
  StaffId        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "StaffAttendance__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Staff          Staffs   @relation(fields: [StaffId], references: [id])
}

model Customers {
  id                String              @id @unique @default(uuid())
  CustomerName      String?
  Contact           String?
  Email             String?
  HotelId           String
  Status            String              @default("Active")
  xata_id           String              @unique(map: "Customers__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version      Int                 @default(0)
  xata_createdat    DateTime            @default(now()) @db.Timestamptz(6)
  xata_updatedat    DateTime            @default(now()) @db.Timestamptz(6)
  Bills             Bills[]
  CustomerOccassion CustomerOccassion[]
  Hotel             Hotels              @relation(fields: [HotelId], references: [id])
  Reservation       TableReservation[]
}

model CustomerOccassion {
  id             String    @id @unique @default(uuid())
  Occassion      String
  Date           String
  CustomerId     String
  xata_createdat DateTime  @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime  @default(now()) @db.Timestamptz(6)
  xata_id        String    @unique(map: "CustomerOccassion__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int       @default(0)
  Customer       Customers @relation(fields: [CustomerId], references: [id])
}

model Orders {
  id             String   @id @unique @default(uuid())
  Quantity       String
  Note           String?
  TotalAmount    Float
  MenuId         String
  Menu           Menus    @relation(fields: [MenuId], references: [id])
  BillId         String
  Bill           Bills    @relation(fields: [BillId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  hotelsId       String
  Hotels         Hotels   @relation(fields: [hotelsId], references: [id])
  xata_id        String   @unique(map: "Orders__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
}

model Bills {
  id             String     @id @unique @default(uuid())
  Type           String
  TableId        String?
  Table          Tables?    @relation(fields: [TableId], references: [id])
  WaiterId       String
  Waiter         Staffs     @relation(fields: [WaiterId], references: [id])
  HotelId        String
  Hotels         Hotels?    @relation(fields: [HotelId], references: [id])
  CustomerId     String?
  Customer       Customers? @relation(fields: [CustomerId], references: [id])
  TotalAmount    Float      @default(0.0)
  CGSTRate       String     @default("2.5 %")
  SGSTRate       String     @default("2.5 %")
  SGSTAmount     Float      @default(0.0)
  CGSTAmount     Float      @default(0.0)
  MenuTotal      Float      @default(0.0)
  BalanceAmount  Float      @default(0.0)
  DiscountRate   String?
  DiscountPrice  Float?
  PaymentMode    String     @default("None")
  Status         String     @default("Active")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  xata_id        String     @unique(map: "Bills__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int        @default(0)
  xata_createdat DateTime   @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime   @default(now()) @db.Timestamptz(6)
  Orders         Orders[]
}

model Expenses {
  id             String   @id @unique @default(uuid())
  ExpenseName    String
  Note           String?
  Date           String
  PayableTo      String
  AmountPayable  Float
  AmountPaid     Float
  HotelId        String
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
  Status         String   @default("Active")
  PaymentStatus  String   @default("Unpaid")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "Expenses__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
}

model ComplianceChecklist {
  id             String   @id @unique @default(uuid())
  ComplianceName String
  Description    String?
  Document       Bytes?
  HotelId        String
  Status         String   @default("Active")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  xata_id        String   @unique(map: "ComplianceChecklist__pgroll_new_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
}
