generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  Username  String   @unique
  Email     String   @unique
  Password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hotels {
  id                     String                   @id @unique @default(uuid())
  HotelName              String                   @unique
  Email                  String                   @unique
  HashedPassword         String
  SaltPassword           String
  Address                String
  Speciality             String[]
  HotelLogo              Bytes?
  Contacts               String[]
  Website                String?
  FSSAICode              String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  AvailableStock         AvailableStock[]
  Bills                  Bills[]
  ComplianceChecklist    ComplianceChecklist[]
  Customers              Customers[]
  Dishes                 Dishes[]
  Expenses               Expenses[]
  Subscription           Hotel_Subscription[]
  ItemCategory           ItemCategories[]
  Items                  Items[]
  MenuCategory           MenuCategory[]
  Order                  Orders[]
  Invoice                PurchasedInvoice[]
  Sections               Sections[]
  Staff                  Staffs[]
  Supplier               Suppliers[]
  Reservations           TableReservation[]
  Tables                 Tables[]
  AvailableStockReport   AvailableStockReport[]
  DarkModeSettings       DarkModeSettings[]
  EatocoinsSettings      EatocoinsSettings[]
  VatSettings            VatSettings[]
  GSTSettings            GstSettings[]
  Notifications          Notifications[]
  KotPrinterSettings     KotPrinterSettings[]
  InvoicePrinterSettings InvoicePrinterSettings[]
  CashDrawer             CashDrawer[]
  EbillEmailSettings     EbillEmailSettings[]
  HotelInfoSettings      HotelInfoSettings[]
}

model Subscriptions {
  id                String               @id @unique @default(uuid())
  SubscriptionName  String               @unique
  Price             Float
  Validity          Int
  Status            String               @default("Active")
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  HotelSubscription Hotel_Subscription[]
}

model Hotel_Subscription {
  id             String        @id @unique @default(uuid())
  HotelId        String
  SubscriptionId String
  isValid        Boolean
  StartDate      String
  EndDate        String
  Status         String        @default("Active")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Hotel          Hotels        @relation(fields: [HotelId], references: [id])
  Subscription   Subscriptions @relation(fields: [SubscriptionId], references: [id])
}

model Sections {
  id          String   @id @unique @default(uuid())
  SectionName String
  Status      String   @default("Active")
  HotelId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Menus       Menus[]
  Hotel       Hotels   @relation(fields: [HotelId], references: [id])
  Tables      Tables[]
}

model Tables {
  id                String   @id @unique @default(uuid())
  TableName         String
  SectionId         String
  HotelId           String
  Status            String   @default("Active")
  PersonsOccupiable String?  @default("4")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  Bills             Bills[]
  Hotel             Hotels   @relation(fields: [HotelId], references: [id])
  Section           Sections @relation(fields: [SectionId], references: [id])
}

model TableReservation {
  id          String    @id @unique @default(uuid())
  Date        String
  Time        String
  Status      String    @default("Active")
  Note        String?
  NoOfPersons String?
  CustomerId  String
  HotelId     String
  Customer    Customers @relation(fields: [CustomerId], references: [id])
  Hotel       Hotels    @relation(fields: [HotelId], references: [id])
}

model MenuCategory {
  id           String   @id @unique @default(uuid())
  CategoryName String
  Description  String?
  Status       String   @default("Active")
  HotelId      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Dishes       Dishes[]
  Hotel        Hotels   @relation(fields: [HotelId], references: [id])
}

model Dishes {
  id          String       @id @unique @default(uuid())
  DishName    String
  Code        String
  Description String?
  Type        String
  DishImage   Bytes?
  Status      String       @default("Active")
  CategoryId  String
  HotelId     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Category    MenuCategory @relation(fields: [CategoryId], references: [id])
  Hotel       Hotels       @relation(fields: [HotelId], references: [id])
  Menus       Menus[]
}

model Menus {
  id        String   @id @unique @default(uuid())
  SectionId String
  DishId    String
  Price     Float
  Status    String   @default("Active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Dish      Dishes   @relation(fields: [DishId], references: [id])
  Section   Sections @relation(fields: [SectionId], references: [id])
  Menu      Orders[]
}

model Suppliers {
  id           String             @id @unique @default(uuid())
  SupplierName String
  SupplierType String
  Contact      String
  Email        String
  GSTIN        String
  Address      String
  Status       String             @default("Active")
  HotelId      String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  StockInvoice PurchasedInvoice[]
  Hotel        Hotels?            @relation(fields: [HotelId], references: [id])
}

model ItemCategories {
  id           String   @id @unique @default(uuid())
  CategoryName String
  Description  String?
  HotelId      String
  Status       String   @default("Active")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Hotel        Hotels   @relation(fields: [HotelId], references: [id])
  Item         Items[]
}

model Items {
  id                   String                 @id @unique @default(uuid())
  ItemName             String
  Description          String?
  HotelId              String
  CategoryId           String
  Status               String                 @default("Active")
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  AvailableStock       AvailableStock[]
  DailyStock           DailyStock[]
  Category             ItemCategories         @relation(fields: [CategoryId], references: [id])
  Hotel                Hotels                 @relation(fields: [HotelId], references: [id])
  PurchasedStock       PurchasedStock[]
  AvailableStockReport AvailableStockReport[]
}

model PurchasedInvoice {
  id            String           @id @unique @default(uuid())
  InvoiceNo     String?
  Date          String
  PaymentMode   String?
  TotalAmount   Float
  BalanceAmount Float            @default(0.00)
  PaymentStatus String           @default("Paid")
  SupplierId    String
  HotelId       String
  Status        String           @default("Active")
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  Hotel         Hotels           @relation(fields: [HotelId], references: [id])
  Suppliers     Suppliers        @relation(fields: [SupplierId], references: [id])
  Stock         PurchasedStock[]
}

model PurchasedStock {
  id        String           @id @unique @default(uuid())
  InvoiceId String
  ItemId    String
  Status    String           @default("Active")
  Quantity  String
  Unit      String
  PerPrice  String
  Price     String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  Invoice   PurchasedInvoice @relation(fields: [InvoiceId], references: [id])
  Items     Items            @relation(fields: [ItemId], references: [id])
}

model AvailableStock {
  id        String   @id @unique @default(uuid())
  HotelId   String
  ItemId    String
  Quantity  String
  Unit      String
  Status    String   @default("Available")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Hotel     Hotels   @relation(fields: [HotelId], references: [id])
  Items     Items    @relation(fields: [ItemId], references: [id])
}

model AvailableStockReport {
  id        String   @id @unique @default(uuid())
  HotelId   String
  ItemId    String
  Quantity  String
  Unit      String
  Status    String   @default("Available")
  Date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Hotel     Hotels   @relation(fields: [HotelId], references: [id])
  Items     Items    @relation(fields: [ItemId], references: [id])
}

model DailyStock {
  id       String @id @unique @default(uuid())
  ItemId   String
  Quantity String
  Status   String @default("Active")
  Date     String
  Items    Items  @relation(fields: [ItemId], references: [id])
}

model Staffs {
  id             String            @id @unique @default(uuid())
  FirstName      String
  LastName       String
  Address        String
  Contact        String
  Email          String            @unique
  HashedPassword String
  SaltPassword   String
  DepartmentName String
  Designation    String
  Role           String
  Salary         Float
  Incentive      Float?
  Status         String            @default("Active")
  HotelId        String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  Bill           Bills[]
  Attendance     StaffAttendance[]
  Hotel          Hotels            @relation(fields: [HotelId], references: [id])
}

model StaffAttendance {
  id        String   @id @unique @default(uuid())
  Date      String
  Arrival   String
  Departure String
  Type      String   @default("Absent")
  Note      String?
  StaffId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Staff     Staffs   @relation(fields: [StaffId], references: [id])
}

model Customers {
  id                String              @id @unique @default(uuid())
  CustomerName      String?
  Contact           String?
  Email             String?
  HotelId           String
  Status            String              @default("Active")
  EatocoinsWallet   Float?              @default(0)
  StreetAddress     String?
  Apartment         String?
  City              String?
  State             String?
  Landmark          String?
  ZipCode           String?
  Bills             Bills[]
  CustomerOccassion CustomerOccassion[]
  Hotel             Hotels              @relation(fields: [HotelId], references: [id])
  Reservation       TableReservation[]
}

model CustomerOccassion {
  id         String    @id @unique @default(uuid())
  Occassion  String
  Date       String
  CustomerId String
  Customer   Customers @relation(fields: [CustomerId], references: [id])
}

model Orders {
  id              String            @id @unique @default(uuid())
  Quantity        String
  Note            String?
  TotalAmount     Float
  MenuId          String
  Menu            Menus             @relation(fields: [MenuId], references: [id])
  BillId          String
  Bill            Bills             @relation(fields: [BillId], references: [id])
  Status          String            @default("Ordered")
  Reason          String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  hotelsId        String
  Hotels          Hotels            @relation(fields: [hotelsId], references: [id])
  CancelledOrders CancelledOrders[]
}

model Bills {
  id                    String     @id @unique @default(uuid())
  Type                  String
  TableId               String?
  Table                 Tables?    @relation(fields: [TableId], references: [id])
  WaiterId              String
  Waiter                Staffs     @relation(fields: [WaiterId], references: [id])
  HotelId               String
  Hotels                Hotels?    @relation(fields: [HotelId], references: [id])
  CustomerId            String?
  Customer              Customers? @relation(fields: [CustomerId], references: [id])
  VatRate               String?
  VatAmount             Float?
  TotalAmount           Float      @default(0.0)
  CGSTRate              String     @default("2.5 %")
  SGSTRate              String     @default("2.5 %")
  SGSTAmount            Float      @default(0.0)
  CGSTAmount            Float      @default(0.0)
  EatocoinsRate         String?
  EatocoinsAmount       Float?
  MenuTotal             Float      @default(0.0)
  Amount                Float      @default(0.0)
  BalanceAmount         Float      @default(0.0)
  DeliveryChargesRate   String?
  DeliveryChargesAmount Float?
  DiscountRate          String?
  DiscountPrice         Float?
  PaymentMode           String     @default("None")
  Status                String     @default("Active")
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  Orders                Orders[]
}

model CancelledOrders {
  id        String   @id @unique @default(uuid())
  Reason    String
  OrderId   String
  Order     Orders   @relation(fields: [OrderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expenses {
  id            String   @id @unique @default(uuid())
  ExpenseName   String
  Note          String?
  Date          String
  PayableTo     String
  AmountPayable Float
  AmountPaid    Float
  HotelId       String
  Hotel         Hotels   @relation(fields: [HotelId], references: [id])
  Status        String   @default("Active")
  PaymentMode   String   @default("Cash")
  PaymentStatus String   @default("Unpaid")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ComplianceChecklist {
  id             String   @id @unique @default(uuid())
  ComplianceName String
  Description    String?
  Document       Bytes?
  HotelId        String
  Status         String   @default("Active")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
}

model DarkModeSettings {
  id         String   @id @unique @default(uuid())
  Visibility Boolean  @default(false)
  HotelId    String
  Status     String   @default("Active")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Hotel      Hotels   @relation(fields: [HotelId], references: [id])
}

model GstSettings {
  id         String   @id @unique @default(uuid())
  Visibility Boolean  @default(false)
  GSTPercent Float?   @default(0.0)
  HotelId    String
  Status     String   @default("Active")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Hotel      Hotels   @relation(fields: [HotelId], references: [id])
}

model VatSettings {
  id         String   @id @unique @default(uuid())
  Visibility Boolean  @default(false)
  VATPercent Float?   @default(0.0)
  HotelId    String
  Status     String   @default("Active")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Hotel      Hotels   @relation(fields: [HotelId], references: [id])
}

model EatocoinsSettings {
  id                 String   @id @unique @default(uuid())
  Visibility         Boolean  @default(false)
  CreditLimitAmt     Float    @default(0) // Minimum Purchases amt. needed to credit to customer's wallet
  CreditLimitPercent Float    @default(0) // Percent of the amt. Purchased will be credited to wallet
  RedeemLimitAmount  Float    @default(0) // Amount above which redeeming the wallet coins will be available
  RedeemLimitPercent Float    @default(0) // Max Percent of eato-coins discount that can be availed  
  Rate               Float    @default(0)
  HotelId            String
  Status             String   @default("Active")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  Hotel              Hotels   @relation(fields: [HotelId], references: [id])
}

model KotPrinterSettings {
  id           String   @id @unique @default(uuid())
  Visibility   Boolean  @default(false)
  NetworkIP    String?
  Encoding     String?
  BluetoothMac String?
  HotelId      String
  Status       String   @default("Active")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Hotel        Hotels   @relation(fields: [HotelId], references: [id])
}

model InvoicePrinterSettings {
  id           String   @id @unique @default(uuid())
  Visibility   Boolean  @default(false)
  NetworkIP    String?
  Encoding     String?
  BluetoothMac String?
  HotelId      String
  Status       String   @default("Active")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Hotel        Hotels   @relation(fields: [HotelId], references: [id])
}

model EbillEmailSettings {
  id           String   @id @unique @default(uuid())
  Visibility   Boolean  @default(false)
  Email        String?
  AppPassword  String?
  UPIID        String?
  MerchantName String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  HotelId      String
  Hotel        Hotels   @relation(fields: [HotelId], references: [id])
}

model HotelInfoSettings {
  id         String   @id @unique @default(uuid())
  Visibility Boolean  @default(false)
  GSTINNO    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  HotelId    String
  Hotel      Hotels   @relation(fields: [HotelId], references: [id])
}

model Notifications {
  id          String   @id @unique @default(uuid())
  HotelId     String
  Type        String   @default("Unread")
  Title       String
  Description String?
  Status      String   @default("Active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Hotel       Hotels   @relation(fields: [HotelId], references: [id])

  @@unique([HotelId, Description]) // Composite unique constraint
}

model CashDrawer {
  id             String   @id @unique @default(uuid())
  Open           String?
  Close          String?
  OpeningBalance Float    @default(0.0)
  ClosingBalance Float    @default(0.0)
  TotalSales     Int?
  SalesAmount    Float    @default(0.0)
  DroppedCash    Float    @default(0.0)
  CashWithdrawn  Float    @default(0.0)
  Refunds        Float    @default(0.0)
  TotalExpenses  Int?
  ExpensesAmount Float    @default(0.0)
  Date           String?
  HotelId        String
  Status         String   @default("Active")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Hotel          Hotels   @relation(fields: [HotelId], references: [id])
}
